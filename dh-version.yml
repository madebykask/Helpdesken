trigger:
  tags:
    include:
    - Release-*

name: $(development.versionMajor).$(development.versionMinor).$(development.versionSubMinor).$(development.versionRevision).$(Build.SourceVersion)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/DH.Helpdesk.sln'
  solutionExtCaseApi: '**/ExtendedCase/ExtendedCase.Api.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  group: build-variables
  patch: $[counter(format('{0}.{1}', variables['development.versionMajor'], variables['development.versionMinor'], variables['development.versionSubMinor']), 0)]

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo $(Build.SourceVersion)
      set sourceVersion=$(Build.SourceVersion)
      set sourceVersionSubstring=%sourceVersion:~0,7%
      echo %sourceVersionSubstring%
      echo ##vso[task.setvariable variable=SourceVersionShort]%sourceVersionSubstring%
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "##vso[task.setvariable variable=myVar;]foo"
      Write-Host "##vso[task.setvariable variable=ProjectBuildNumber;]$(development.versionMajor).$(development.versionMinor).$(development.versionSubMinor).$(development.versionRevision).$(SourceVersionShort)"
      Write-Host "##vso[build.updatebuildnumber]$(development.versionMajor).$(development.versionMinor).$(development.versionSubMinor).$(development.versionRevision).$(SourceVersionShort)"

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $url = "https://dev.azure.com/dhsolutionsab/Dh-DHHelpdesk/_apis/distributedtask/variablegroups/24?api-version=5.0-preview.1"
            Write-Host $url
            
            function CreateJsonBody
            {
            
                $value = @"
            
            {"id":24,"type":"Vsts","name":"build-variables","variables":{"tessanTestar":{"isSecret":false,"value":"0930"}}}
            
            "@
            
             return $value
            }
            
            $json = CreateJsonBody
            
            
            $pipeline = Invoke-RestMethod -Uri $url -Method Put -Body $json -ContentType "application/json" -Headers @{
                Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
            }
            
            Write-Host "New Variable Value:" $pipeline.variables.tessanTestar.value