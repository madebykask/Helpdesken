@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string IsTeWorker = "No";
    const string DefaultCountry = "South Korea";

    var fillOldVal = TempData["oldValues"];
    var newfill = (List<KeyValuePair<string, string>>)fillOldVal;
}
<div class="tab-pane" id="Personal">
    <div class="span8">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Personal Data Change")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Title")</td>
                    <td>@Model.Element("Title")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PersonalFirstname")</td>
                    <td>@Model.Element("PersonalFirstname")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PersonalFirstname" name="OLD_PersonalFirstname" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalFirstname").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PersonalFirstname">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalFirstname").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PersonalFirstnameinEnglish")</td>
                    <td>@Model.Element("PersonalFirstnameinEnglish")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PersonalFirstnameinEnglish" name="OLD_PersonalFirstnameinEnglish" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalFirstnameinEnglish").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PersonalFirstnameinEnglish">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalFirstnameinEnglish").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PersonalLastname")</td>
                    <td>@Model.Element("PersonalLastname")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PersonalLastname" name="OLD_PersonalLastname" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalLastname").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PersonalLastname">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalLastname").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PersonalLastnameinEnglish")</td>
                    <td>@Model.Element("PersonalLastnameinEnglish")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PersonalLastnameinEnglish" name="OLD_PersonalLastnameinEnglish" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalLastnameinEnglish").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PersonalLastnameinEnglish">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PersonalLastnameinEnglish").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Gender")</td>
                    <td>@Model.Element("Gender")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NickName")</td>
                    <td>@Model.Element("NickName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Maritalstatus")</td>
                    <td>@Model.Element("Maritalstatus")</td>
                </tr>
                @*<tr>
                    <td class="tdstrong">@Model.Label("JoinKRIKEAdate")</td>
                    <td>@Model.Element("JoinKRIKEAdate")</td>                         
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("JoinIKEAGlobal")</td>
                    <td>@Model.Element("JoinIKEAGlobal")</td>                         
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("RegistrationNumber")</td>
                    <td>@Model.Element("RegistrationNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Contact Details")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Contacte-mailaddress")</td>
                    <td>@Model.Element("Contacte-mailaddress")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_Contacte-mailaddress" name="OLD_Contacte-mailaddress" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_Contacte-mailaddress").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_Contacte-mailaddress">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_Contacte-mailaddress").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>

                <!-- Permanent ADDRESS -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Permanent Address(actual living address)")
                        </h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine1")</td>
                    <td>@Model.Element("PermanentAddressLine1")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine1" name="OLD_PermanentAddressLine1" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine1">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine2")</td>
                    <td>@Model.Element("PermanentAddressLine2")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine2" name="OLD_PermanentAddressLine2" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine2">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                @*                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine3")</td>
                    <td>@Model.Element("PermanentAddressLine3")</td>
                                        <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine3" name="OLD_PermanentAddressLine3" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine3">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine4")</td>
                    <td>@Model.Element("PermanentAddressLine4")</td>
                                        <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine4" name="OLD_PermanentAddressLine4" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine4").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine4">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine4").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentPostalCode")</td>
                    <td>@Model.Element("PermanentPostalCode")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentPostalCode" name="OLD_PermanentPostalCode" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentPostalCode">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCity")</td>
                    <td>@Model.Element("PermanentCity")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCity" name="OLD_PermanentCity" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCity">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCountry")</td>
                    <td>@Model.Element("PermanentCountry")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCountry" name="OLD_PermanentCountry" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCountry">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentTelephone")</td>
                    <td>@Model.Element("PermanentTelephone")</td>
                </tr>


                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCommunicationtype")</td>
                    <td>@Model.Element("PermanentCommunicationtype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCommunicationcontent")</td>
                    <td>@Model.Element("PermanentCommunicationcontent")</td>
                </tr>

                @for(int i = 2; i <= 4; i++)
                {
                    <tr class="PermanentCommunicationType@(i.ToString())" id="allowance@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Communication") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="PermanentCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("PermanentCommunicationtype" + i.ToString())</td>
                        <td>
                            @Model.Element("PermanentCommunicationtype" + i.ToString())
                        </td>
                    </tr>
                    <tr class="PermanentCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("PermanentCommunicationcontent" + i.ToString())</td>
                        <td>
                            @Model.Element("PermanentCommunicationcontent" + i.ToString())
                        </td>
                    </tr>
                }
                <tr id="addPermanentCommunicationtypesTrr">
                    <td colspan="2">
                        @Model.Element("PermanentCommunicationtypes")
                        <a id="addPermanentCommunicationType" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another communication type")</a></td>
                </tr>


                <!-- EMERGENCY ADDRESS -->
                <tr class="emergencyaddress" id="emergencyaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Emergency Address")
                            <button class="btn btn-mini pull-right" id="btnEmergencyAddress" data-prefix="Emergency">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                @*<tr>
                    <td class="tdstrong">@Model.Label("Emergencycontactname")</td>
                    <td>@Model.Element("Emergencycontactname")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Emergencycontactrelationship")</td>
                    <td>@Model.Element("Emergencycontactrelationship")</td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressline1")</td>
                    <td>@Model.Element("EmergencyAddressline1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressline2")</td>
                    <td>@Model.Element("EmergencyAddressline2")</td>
                </tr>
                @*                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressline3")</td>
                    <td>@Model.Element("EmergencyAddressline3")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressline4")</td>
                    <td>@Model.Element("EmergencyAddressline4")</td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyPostalCode")</td>
                    <td>@Model.Element("EmergencyPostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCity")</td>
                    <td>@Model.Element("EmergencyCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCountry")</td>
                    <td>@Model.Element("EmergencyCountry")</td>
                </tr>
                @*<tr>
                    <td class="tdstrong">@Model.Label("EmergencyTelephone")</td>
                    <td>@Model.Element("EmergencyTelephone")</td>
                </tr>    *@
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCommunicationtype")</td>
                    <td>@Model.Element("EmergencyCommunicationtype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCommunicationcontent")</td>
                    <td>@Model.Element("EmergencyCommunicationcontent")</td>
                </tr>
                @for(int i = 2; i <= 4; i++)
                {
                    <tr class="EmergencyCommunicationType@(i.ToString())" id="EmergencyCommunicationType@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Communication") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="EmergencyCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("EmergencyCommunicationtype" + i.ToString())</td>
                        <td>
                            @Model.Element("EmergencyCommunicationtype" + i.ToString())
                        </td>
                    </tr>
                    <tr class="EmergencyCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("EmergencyCommunicationcontent" + i.ToString())</td>
                        <td>
                            @Model.Element("EmergencyCommunicationcontent" + i.ToString())
                        </td>
                    </tr>
                }
                <tr id="addEmergencyCommunicationtypesTrr">
                    <td colspan="2">
                        @Model.Element("EmergencyCommunicationtypes")
                        <a id="addEmergencyCommunicationType" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another communication type")</a></td>
                </tr>

                <!-- Home ADDRESS -->
                <tr class="homeaddress" id="homeaddresss">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Home Address(registered address)")
                            <button class="btn btn-mini pull-right" id="btnHomeAddress" data-prefix="Home">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeAddressline1")</td>
                    <td>@Model.Element("HomeAddressline1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeAddressline2")</td>
                    <td>@Model.Element("HomeAddressline2")</td>
                </tr>
                @*                 <tr>
                    <td class="tdstrong">@Model.Label("HomeAddressline3")</td>
                    <td>@Model.Element("HomeAddressline3")</td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("HomeAddressline4")</td>
                    <td>@Model.Element("HomeAddressline4")</td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("HomePostalCode")</td>
                    <td>@Model.Element("HomePostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCity")</td>
                    <td>@Model.Element("HomeCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCountry")</td>
                    <td>@Model.Element("HomeCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeTelephone")</td>
                    <td>@Model.Element("HomeTelephone")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCommunicationtype")</td>
                    <td>@Model.Element("HomeCommunicationtype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCommunicationcontent")</td>
                    <td>@Model.Element("HomeCommunicationcontent")</td>
                </tr>
                @for(int i = 2; i <= 4; i++)
                {
                    <tr class="HomeCommunicationType@(i.ToString())" id="HomeCommunicationType@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Communication") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="HomeCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("HomeCommunicationtype" + i.ToString())</td>
                        <td>
                            @Model.Element("HomeCommunicationtype" + i.ToString())
                        </td>
                    </tr>
                    <tr class="HomeCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("HomeCommunicationcontent" + i.ToString())</td>
                        <td>
                            @Model.Element("HomeCommunicationcontent" + i.ToString())
                        </td>
                    </tr>
                }
                <tr id="addHomeCommunicationtypesTrr">
                    <td colspan="2">
                        @Model.Element("HomeCommunicationtypes")
                        <a id="addHomeCommunicationType" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another communication type")</a></td>
                </tr>


                @*  <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Home Address in EN")
                            <button class="btn btn-mini pull-right" id="btnHomeAddressEN" data-prefix="Home">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeAddressline1")</td>
                    <td>@Model.Element("ENHomeAddressline1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeAddressline2")</td>
                    <td>@Model.Element("ENHomeAddressline2")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeAddressline3")</td>
                    <td>@Model.Element("ENHomeAddressline3")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeAddressline4")</td>
                    <td>@Model.Element("ENHomeAddressline4")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomePostalCode")</td>
                    <td>@Model.Element("ENHomePostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeCity")</td>
                    <td>@Model.Element("ENHomeCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeCountry")</td>
                    <td>@Model.Element("ENHomeCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeTelephone")</td>
                    <td>@Model.Element("ENHomeTelephone")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeCommunicationtype")</td>
                    <td>@Model.Element("ENHomeCommunicationtype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ENHomeCommunicationcontent")</td>
                    <td>@Model.Element("ENHomeCommunicationcontent")</td>
                </tr>
                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="ENHomeCommunicationType@(i.ToString())" id="ENHomeCommunicationType@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Communication") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="ENHomeCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("ENHomeCommunicationtype" + i.ToString())</td>
                        <td>
                            @Model.Element("ENHomeCommunicationtype" + i.ToString())
                        </td>
                    </tr>
                      <tr class="ENHomeCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("ENHomeCommunicationcontent" + i.ToString())</td>
                        <td>
                            @Model.Element("ENHomeCommunicationcontent" + i.ToString())
                        </td>
                    </tr>
                  }
                <tr id="addENHomeCommunicationtypesTrr">
                    <td colspan="2">
                        @Model.Element("ENHomeCommunicationtypes")
                        <a id="addENHomeCommunicationType" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another communication type")</a></td>
                </tr>*@


                @*       <!-- Work ADDRESS -->
                <tr class="workaddress" id="workaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Work Address")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkAddressline1")</td>
                    <td>@Model.Element("WorkAddressline1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkAddressline2")</td>
                    <td>@Model.Element("WorkAddressline2")</td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("WorkAddressline3")</td>
                    <td>@Model.Element("WorkAddressline3")</td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("WorkAddressline4")</td>
                    <td>@Model.Element("WorkAddressline4")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkPostalCode")</td>
                    <td>@Model.Element("WorkPostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkCity")</td>
                    <td>@Model.Element("WorkCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkCountry")</td>
                    <td>@Model.Element("WorkCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkTelephone")</td>
                    <td>@Model.Element("WorkTelephone")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkCommunicationtype")</td>
                    <td>@Model.Element("WorkCommunicationtype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("WorkCommunicationcontent")</td>
                    <td>@Model.Element("WorkCommunicationcontent")</td>
                </tr>
                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="WorkCommunicationType@(i.ToString())" id="WorkCommunicationType@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Communication") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="WorkCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("WorkCommunicationtype" + i.ToString())</td>
                        <td>
                            @Model.Element("WorkCommunicationtype" + i.ToString())
                        </td>
                    </tr>
                      <tr class="WorkCommunicationType@(i.ToString())">
                        <td class="tdstrong">@Model.Label("WorkCommunicationcontent" + i.ToString())</td>
                        <td>
                            @Model.Element("WorkCommunicationcontent" + i.ToString())
                        </td>
                    </tr>
                  }
                <tr id="addWorkCommunicationtypesTrr">
                    <td colspan="2">
                        @Model.Element("WorkCommunicationtypes")
                        <a id="addWorkCommunicationType" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another communication type")</a></td>
                </tr>*@

                <!-- FAMILY MEMBER / DEPENDENTS -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Family Member / Dependents")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMember")</td>
                    <td>@Model.Element("FamilyMember")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Dependantstype")</td>
                    <td>@Model.Element("Dependantstype")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberLastName")</td>
                    <td>@Model.Element("FamilyMemberLastName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberLastNameinEnglish")</td>
                    <td>@Model.Element("FamilyMemberLastNameinEnglish")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberFirstName")</td>
                    <td>@Model.Element("FamilyMemberFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberFirstNameinEnglish")</td>
                    <td>@Model.Element("FamilyMemberFirstNameinEnglish")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberGender")</td>
                    <td>@Model.Element("FamilyMemberGender")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberRegistrationNumber")</td>
                    <td>@Model.Element("FamilyMemberRegistrationNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberDateofbirth")</td>
                    <td>@Model.Element("FamilyMemberDateofbirth")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DependancyStatus")</td>
                    <td>@Model.Element("DependancyStatus")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Relationshiporder")</td>
                    <td>@Model.Element("Relationshiporder")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DependancyTax")</td>
                    <td>@Model.Element("DependancyTax")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("adoptionfosterdate")</td>
                    <td>@Model.Element("adoptionfosterdate")</td>
                </tr>

                @for(int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="familyMember@(i.ToString())" id="familyMember@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Family Member & Dependents") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMember" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMember" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Dependantstype" + i.ToString())</td>
                        <td>
                            @Model.Element("Dependantstype" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberLastName" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberLastName" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberLastNameinEnglish" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberLastNameinEnglish" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberFirstName" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberFirstName" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberFirstNameinEnglish" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberFirstNameinEnglish" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberGender" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberGender" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberRegistrationNumber" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberRegistrationNumber" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberDateofbirth" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberDateofbirth" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DependancyStatus" + i.ToString())</td>
                        <td>
                            @Model.Element("DependancyStatus" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Relationshiporder" + i.ToString())</td>
                        <td>
                            @Model.Element("Relationshiporder" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DependancyTax" + i.ToString())</td>
                        <td>
                            @Model.Element("DependancyTax" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("adoptionfosterdate" + i.ToString())</td>
                        <td>
                            @Model.Element("adoptionfosterdate" + i.ToString())</td>
                    </tr>
                }
                <tr id="addFamilyMemberTrr">
                    <td colspan="2">
                        @Model.Element("FamilyMembers")
                        <a id="addFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another family member")</a></td>
                </tr>
                <!-- Global Mobility Employee Documents -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Employee Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentType")</td>
                    <td>@Model.Element("EmployeeDocumentType")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeCountry")</td>
                    <td>@Model.Element("EmployeeCountry")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentno.")</td>
                    <td>@Model.Element("EmployeeDocumentno.")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeIssueDate")</td>
                    <td>@Model.Element("EmployeeIssueDate")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeIssuePlace")</td>
                    <td>@Model.Element("EmployeeIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeIssuePlaceCountry")</td>
                    <td>@Model.Element("EmployeeIssuePlaceCountry")</td>
                </tr>

                @for(int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="employeeDocument@(i.ToString()) globalmobility" id="employeeDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Employee Documents")  @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentType" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeCountry" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentno." + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentno." + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeIssueDate" + i.ToString())</td>
                        <td>@Model.Element("EmployeeIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("EmployeeIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addEmployeeDocumentTrr">
                    <td colspan="2">
                        @Model.Element("EmployeeDocuments")
                        <a id="addEmployeeDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another employee documents")</a></td>
                </tr>

                <!-- Global Mobility Dependants -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                    <td>@Model.Element("DependantFamilyMember")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("Accompanying")</td>
                    <td>@Model.Element("Accompanying")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsLastName")</td>
                    <td>@Model.Element("DependantsLastName")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsFirstName")</td>
                    <td>@Model.Element("DependantsFirstName")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDateOfBirth")</td>
                    <td>@Model.Element("DependantsDateOfBirth")</td>
                </tr>

                @for(int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility" id="dependantFamilyMember@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                        <td>@Model.Element("DependantFamilyMember" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("Accompanying" + i.ToString())</td>
                        <td>@Model.Element("Accompanying" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsLastName" + i.ToString())</td>
                        <td>@Model.Element("DependantsLastName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsFirstName" + i.ToString())</td>
                        <td>@Model.Element("DependantsFirstName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility ">
                        <td class="tdstrong">@Model.Label("DependantsDateOfBirth" + i.ToString())</td>
                        <td>@Model.Element("DependantsDateOfBirth" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addDependantFamilyMembersTrr">
                    <td colspan="2">
                        @Model.Element("DependantFamilyMembers")
                        <a id="addDependantFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant")</a></td>
                </tr>

                <!-- Global Mobility Dependants Documents -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentType")</td>
                    <td>@Model.Element("DependantsDocumentType")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsCountry")</td>
                    <td>@Model.Element("DependantsCountry")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentno.")</td>
                    <td>@Model.Element("DependantsDocumentno.")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsIssueDate")</td>
                    <td>@Model.Element("DependantsIssueDate")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsIssuePlace")</td>
                    <td>@Model.Element("DependantsIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsIssuePlaceCountry")</td>
                    <td>@Model.Element("DependantsIssuePlaceCountry")</td>
                </tr>

                @for(int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility" id="globalMobilityDependantDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants Documents") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentType" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsCountry" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentno." + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentno." + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsIssueDate" + i.ToString())</td>
                        <td>@Model.Element("DependantsIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("DependantsIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addGlobalMobilityDependantDocumentTrr">
                    <td colspan="2">
                        @Model.Element("DependantsDocuments")
                        <a id="addGlobalMobilityDependantDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant document")</a></td>
                </tr>

                <!-- Bank Account Details -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Bank Account Details")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BankType")</td>
                    <td>@Model.Element("BankType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Payee")</td>
                    <td>@Model.Element("Payee")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BankCountry")</td>
                    <td>@Model.Element("BankCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BankKey")</td>
                    <td>@Model.Element("BankKey")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AccountNumber")</td>
                    <td>@Model.Element("AccountNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PaymentCurrency")</td>
                    <td>@Model.Element("PaymentCurrency")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Bank Account Details 2")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("BankType2")</td>
                    <td>@Model.Element("BankType2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("Payee2")</td>
                    <td>@Model.Element("Payee2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("BankCountry2")</td>
                    <td>@Model.Element("BankCountry2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("BankKey2")</td>
                    <td>@Model.Element("BankKey2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("AccountNumber2")</td>
                    <td>@Model.Element("AccountNumber2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("PaymentCurrency2")</td>
                    <td>@Model.Element("PaymentCurrency2")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("OtherBankPercentageorAmount")</td>
                    <td>@Model.Element("OtherBankPercentageorAmount")</td>
                </tr>
                <!-- FISCAL DATA -->
                @*<tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Fiscal Data")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Personneltaxstatus")</td>
                    <td>@Model.Element("Personneltaxstatus")</td>
                </tr>*@
                @*                <tr>
                    <td class="tdstrong">@Model.Label("Taxationinformation")</td>
                    <td>@Model.Element("Taxationinformation")</td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("Calculationmethod")</td>
                    <td>@Model.Element("Calculationmethod")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Calculationrule")</td>
                    <td>@Model.Element("Calculationrule")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Submitted")</td>
                    <td>@Model.Element("Submitted")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Recieved")</td>
                    <td>@Model.Element("Recieved")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Exempt.StartDate")</td>
                    <td>@Model.Element("Exempt.StartDate")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Exmpt.EndData")</td>
                    <td>@Model.Element("Exmpt.EndData")</td>
                </tr>*@
                <!-- Social Insurance  -->
                @*<tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Social Insurance")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("SocialInsurance")</td>
                    <td>@Model.Element("SocialInsurance")</td>
                </tr>   *@
                @*<tr>
                    <td class="tdstrong">@Model.Label("Entitlementreason")</td>
                    <td>@Model.Element("Entitlementreason")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("SIContributionStartDate")</td>
                    <td>@Model.Element("SIContributionStartDate")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("OverseasWorkerWCI")</td>
                    <td>@Model.Element("OverseasWorkerWCI")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EEover65Nocontribution")</td>
                    <td>@Model.Element("EEover65Nocontribution")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("SocialInsurancePremium")</td>
                    <td>@Model.Element("SocialInsurancePremium")</td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("MonthlyCompensationAmount")</td>
                    <td>@Model.Element("MonthlyCompensationAmount")</td>
                </tr>*@
                <!-- Nationality/Language  -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Nationality/Language")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Nationality")</td>
                    <td>@Model.Element("Nationality")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("SecondNationality")</td>
                    <td>@Model.Element("SecondNationality")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Language")</td>
                    <td>@Model.Element("Language")</td>
                </tr>

                <!-- Education  -->

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Education")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Educationalestablishment")</td>
                    <td>@Model.Element("Educationalestablishment")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CountryKey")</td>
                    <td>@Model.Element("CountryKey")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Certificate")</td>
                    <td>@Model.Element("Certificate")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BranchofStudy")</td>
                    <td>@Model.Element("BranchofStudy")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BranchofStudyTwo")</td>
                    <td>@Model.Element("BranchofStudyTwo")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Educationstartdate")</td>
                    <td>@Model.Element("Educationstartdate")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Educationenddate")</td>
                    <td>@Model.Element("Educationenddate")</td>
                </tr>

                @for(int i = 2; i <= 5; i++)
                {
                    <tr class="education@(i.ToString())" id="education@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Education") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Educationalestablishment" + i.ToString())</td>
                        <td>
                            @Model.Element("Educationalestablishment" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("CountryKey" + i.ToString())</td>
                        <td>
                            @Model.Element("CountryKey" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Certificate" + i.ToString())</td>
                        <td>
                            @Model.Element("Certificate" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("BranchofStudy" + i.ToString())</td>
                        <td>
                            @Model.Element("BranchofStudy" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("BranchofStudyTwo" + i.ToString())</td>
                        <td>
                            @Model.Element("BranchofStudyTwo" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Educationstartdate" + i.ToString())</td>
                        <td>
                            @Model.Element("Educationstartdate" + i.ToString())</td>
                    </tr>
                    <tr class="education@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Educationenddate" + i.ToString())</td>
                        <td>
                            @Model.Element("Educationenddate" + i.ToString())</td>
                    </tr>
                }

                <tr id="addEducationTrr">
                    <td colspan="2">
                        @Model.Element("Educations")
                        <a id="addEducation" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another education")</a></td>
                </tr>

            </tbody>
        </table>
    </div>

    <input type="hidden" id="CustomerId" value="@Model.Form.CustomerId" />
    <input type="hidden" id="MultipleEntrySectionsNr" value="@FormLibConstants.FormField.MultipleEntrySectionsNr" />
    <input type="hidden" id="BusinessUnitId" name="BusinessUnitId" value="0" />
</div>

<script>

    var lockedbyUserGroup = document.getElementById('LockedByUserGroup').getAttribute('status');

    var SetDefaultPayee = function () {
        var PayeeName;
        PayeeName = $('#FirstName').val() + " " + $('#LastName').val()

        $('#Payee').val(PayeeName)
        $('#Payee2').val(PayeeName)
    }

    if ("@Model.ReadOnlyTab("#Personal")" == 'False' && lockedbyUserGroup == 'False') {

        $(function () {
            DisableAdoptionFosterDate();

            $("#FirstName,#Co-WorkerGlobalviewID").change(function () {
                SetDefaultPayee();
            });

            $("#LastName").change(function () {
                SetDefaultPayee();
            });
        });


        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        var noticValidUntil = $('#notice_ValidUntilDate');
        $('#date_ValidUntil').not(".disabled").datepicker({
            onRender: function (date) {
                return date.valueOf() < now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {

            noticValidUntil.hide();

            if (ev.date.valueOf() < now.valueOf())
                noticValidUntil.show();
        }).data('datepicker');

        $('#ValidUntil').change(function () {
            var startDate = $(this).val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dstartDate = APIGlobal.DateTime.parseDate(startDate, format);
            var nowTemp = new Date();
            var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

            var noticeValidUntilDate = $('#notice_ValidUntilDate');
            noticeValidUntilDate.hide();

            if (dstartDate.valueOf() < now.valueOf()) {
                noticeValidUntilDate.show();
            }
        });

        var DisableAdoptionFosterDate = function () {
            for (var i = 0; i < 5; i++) {
                DisableAdoptionFosterDateHandler(i);
            }
        }

        var DisableAdoptionFosterDateHandler = function (i) {

            if (i == 0) {
                i = '';
            }
            else if (i > 0) {
                i++;
            }

            var dependancytax = 'input[name="DependancyTax' + i + '"][value="Fostered Child"]';

            if (!$(dependancytax).prop('checked')) {

                $('#adoptionfosterdate' + i).attr("disabled", true);

                $('#date_adoptionfosterdate' + i).addClass("disabled");
                $('#date_adoptionfosterdate' + i).datepicker("destroy");

            }
            else {
                $('#adoptionfosterdate' + i).attr("disabled", false);
                $('#date_adoptionfosterdate' + i).removeClass("disabled");
                $('#date_adoptionfosterdate' + i).datepicker();
            }
        }

        $('[name^="DependancyTax"]').change(function () {
            DisableAdoptionFosterDate();
        });

    }

    $(function () {
        SetDefaultPayee();
    });

    $('#TECoWorker').change(function () {
        setGlobalMobilityBehavior($(this).val());
    });

    if ($('#TECoWorker').val() == '@IsTeWorker') {
        $(".globalmobility-first").hide();
    } else {
        $(".globalmobility-first").show();
    }

    function setGlobalMobilityBehavior(value) {
        if (value == '@IsTeWorker') {

            jQuery(".globalmobility-first").hide();
            jQuery("[class*=globalmobility]").hide();
            $("[class*=globalmobility] input:not(input[type=hidden])").val("");
            jQuery("[class*=globalmobility-first]").hide();
            jQuery("[class*=globalmobility] input[type=text][name*='Country']").val('@DefaultCountry');
             jQuery("[class*=globalmobility] select option:not([value])").prop('selected', true);
         } else if (!(value == '@IsTeWorker')) {
            jQuery(".globalmobility-first").show();
        }

        $("[class*=globalmobility-first] input[type=hidden]").val("1");

    };
</script>
