@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string CompanyName = "IKEA Distribution Services Limited";
    const string EmployeeCategory = "Permanent";
    const string PartTime = "Part Time";
    const string FullTime = "Full Time";
    const string ZeroHours = "Zero Hours";
    const string DefaultProbationPeriod = "Yes";
}

<div class="tab-pane" id="OrganisationalAssignment">
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Organisation")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OrganisationCountry")</td>
                    <td>@Model.Element("OrganisationCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Company")</td>
                    <td>@Model.Element("Company")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("BusinessUnit")</td>
                    <td>@Model.Element("BusinessUnit")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ServiceArea")</td>
                    <td>@Model.Element("ServiceArea")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Department")</td>
                    <td>@Model.Element("Department")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("HomeCostCentre")</td>
                    <td>@Model.Element("HomeCostCentre")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Job")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("JobTitle")</td>
                    <td>@Model.Element("JobTitle")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewPosition")</td>
                    <td>@Model.Element("NewPosition")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ReportsToLineManager")</td>
                    <td>@Model.Element("ReportsToLineManager")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ManagersJobTitle")</td>
                    <td>@Model.Element("ManagersJobTitle")</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Employment Conditions")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmploymentCategory")</td>
                    <td>@Model.Element("EmploymentCategory")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractEndDate")</td>
                    <td>@Model.Element("ContractEndDate")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("ContractedHours")</td>
                    <td>@Model.Element("ContractedHours")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DaysPerWeek")</td>
                    <td>@Model.Element("DaysPerWeek")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractType")</td>
                    <td>@Model.Element("ContractType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationPeriod")</td>
                    <td>@Model.Element("ProbationPeriod")</td>
                </tr>
                <tr>
                    <td id="probationDate" class="tdstrong">@Model.Label("ProbationEndDate")</td>
                    <td>@Model.Element("ProbationEndDate")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("CDS")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PrimarySite")</td>
                    <td>@Model.Element("PrimarySite")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TECApprover")</td>
                    <td>@Model.Element("TECApprover")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HelpDesk")</td>
                    <td>@Model.Element("HelpDesk")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PreviousBusinessUnit")</td>
                    <td>@Model.Element("PreviousBusinessUnit")</td>
                </tr>
            </tbody>
        </table>
    </div>

</div>

<script>

    $(function () {

        function setProbationEndDate(value) {
            var probationEndDate = $('#ProbationEndDate');

            if (value == '@DefaultProbationPeriod') {
                var sStart = $('#ContractStartDate').val();
                var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
                var dStart = APIGlobal.DateTime.parseDate(sStart, format);

                var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 6, dStart.getDate(), 0, 0, 0, 0);
                var visibleDate = APIGlobal.DateTime.formatDate(endDate, format);
                probationEndDate.val(visibleDate.toString());
            }
            else {
                probationEndDate.val("");
            }
        };

        function setEmployeeBehavior(value) {
            if (value == '@EmployeeCategory') {
                $('#date_ContractEndDate').datepicker("destroy");
                $('#date_ContractEndDate').addClass("disabled");
                $('#ContractEndDate').prop('disabled', true);
            }
            else {
                $('#date_ContractEndDate').datepicker();
                $('#ContractEndDate').prop('disabled', false);
                $("#ContractEndDate").removeClass("disabled");
            }
        }

        if ($('EmploymentCategory').val() == '@EmployeeCategory') {
            $('#date_ContractEndDate').datepicker("destroy");
            $('#date_ContractEndDate').addClass("disabled");
            $('#ContractEndDate').prop('disabled', true);
        }

        // setEmployeeBehavior($('#EmploymentCategory').val());
        setProbationEndDate($('#ProbationPeriod').val());


        $('#EmploymentCategory').change(function () {
            setEmployeeBehavior($(this).val());
        });

        document.getElementById('ContractedHours').onchange = function () {
            var value = $(this).val();
            
            if (value >= 16 && value <= 38) {
            
                document.getElementById('ContractType').value = 'Part Time';
                
            }
            else if (value >= 39) {
                document.getElementById('ContractType').value = 'Full Time';
            }

            else {
                document.getElementById('ContractType').value = '';
            }
        };

        //$('#ContractedHours').change(function () {
           
        //});

        $('#ProbationPeriod').change(function () {
            //////////
            //Probation period change function
            //////////
            setProbationEndDate($(this).val());
        });


        $('#AllowancesType3').change(function () {
            //////////
            //AllowancesType change function
            //////////

            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}
            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setAllowanceTypeXML3,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });

        });

        $('#AllowancesType2').change(function () {
            //////////
            //AllowancesType change function
            //////////

            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}


            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setAllowanceTypeXML2,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });

        });

        $('#AllowancesType').change(function () {
            //////////
            //AllowancesType change function
            //////////

            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'
            //}

            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_outs.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setAllowanceTypeXML,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });

        });

        function setAllowanceTypeXML3(xml) {
            //////////
            //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
            //////////

            var show = ''
            var show2 = ''

            if (document.getElementById('AllowancesAmountUnits3')) {
                document.getElementById('AllowancesAmountUnits3').value = '';
            }
            if (document.getElementById('AllowancesNetGross3')) {
                document.getElementById('AllowancesNetGross3').value = '';
            }

            var res = '0';

            var dep = '';
            if (document.getElementById('AllowancesType3')) {
                dep = document.getElementById('AllowancesType3').value;
            }

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';
                show2 = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show1').text();
                show2 = $sel.find('show2').text();

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits3')) {
                            document.getElementById('AllowancesAmountUnits3').value = show;
                        }

                        res = '1';
                    }

                    if (show2 != '') {
                        var n = show2.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('AllowancesNetGross3')) {
                                document.getElementById('AllowancesNetGross3').value = show2;
                            }
                        }
                        else {
                            var res = show2.substring(0, n);
                            if (document.getElementById('AllowancesNetGross3')) {
                                document.getElementById('AllowancesNetGross3').value = res;
                            }
                        }
                        res = '1';
                    }


                    if (res == 1) {
                        return;
                    }
                }
            });
        }

        function setAllowanceTypeXML2(xml) {
            //////////
            //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
            //////////

            var show = ''
            var show2 = ''
            if (document.getElementById('AllowancesAmountUnits2')) {
                document.getElementById('AllowancesAmountUnits2').value = '';
            }
            if (document.getElementById('AllowancesNetGross2')) {
                document.getElementById('AllowancesNetGross2').value = '';
            }

            var res = '0';

            var dep = '';
            if (document.getElementById('AllowancesType2')) {
                dep = document.getElementById('AllowancesType2').value;
            }

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';
                show2 = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show1').text();
                show2 = $sel.find('show2').text();

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits2')) {
                            document.getElementById('AllowancesAmountUnits2').value = show;
                        }
                        res = '1';
                    }

                    if (show2 != '') {
                        var n = show2.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('AllowancesNetGross2')) {
                                document.getElementById('AllowancesNetGross2').value = show2;
                            }
                        }
                        else {
                            var res = show2.substring(0, n);
                            if (document.getElementById('AllowancesNetGross2')) {
                                document.getElementById('AllowancesNetGross2').value = res;
                            }
                        }
                        res = '1';
                    }


                    if (res == 1) {
                        return;
                    }
                }
            });
        }

        function setAllowanceTypeXML(xml) {
            //////////
            //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
            //////////

            var show = ''
            var show2 = ''
            if (document.getElementById('AllowancesAmountUnits')) {
                document.getElementById('AllowancesAmountUnits').value = '';
            }
            //document.getElementById('AllowancesAmountUnits').value = '';
            //document.getElementById('AllowancesAmountUnits').value = '';

            //AllowancesAmountUnits3
            if (document.getElementById('AllowancesNetGross')) {
                document.getElementById('AllowancesNetGross').value = '';
            }

            var res = '0';

            var dep = '';
            if (document.getElementById('AllowancesType')) {
                dep = document.getElementById('AllowancesType').value;
            }

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';
                show2 = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show1').text();
                show2 = $sel.find('show2').text();

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits')) {
                            document.getElementById('AllowancesAmountUnits').value = show;
                        }
                        res = '1';
                    }

                    if (show2 != '') {
                        var n = show2.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('AllowancesNetGross')) {
                                document.getElementById('AllowancesNetGross').value = show2;
                            }
                        }
                        else {
                            var res = show2.substring(0, n);
                            if (document.getElementById('AllowancesNetGross')) {
                                document.getElementById('AllowancesNetGross').value = res;
                            }
                        }
                        res = '1';
                    }


                    if (res == 1) {
                        return;
                    }
                }
            });
        }


        $('#ReportsToLineManager').change(function () {
            //////////
            //ReportsToLineManager change function
            //////////
            var value = $(this).val();

            if ($('#ReportsToLineManager')[0].selectize) {
                var selectedText = $('#ReportsToLineManager')[0].selectize.getItem(value).text();

                if ($('#TECApprover')[0].selectize) {
                    $('#TECApprover')[0].selectize.setValue(selectedText);
                }
                else {
                    $('#TECApprover').val(selectedText);
                }
            }
            else {
                var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                if ($('#TECApprover')[0].selectize) {
                    $('#TECApprover')[0].selectize.setValue(selectedText);
                }
                else {
                    var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                    $('#TECApprover').val(selectedText);
                }
            }
        });

        $('#JobTitle').change(function () {
            //////////
            //JobTitle change function
            //////////
            setPayrollCategory();
        });

        $('#PayrollCategory').change(function () {
            //////////
            //PAyroll category change function
            //////////

            setPayrollCategory();
            setBasicPayAmount();
            addDeductionTypes();


        });

        function addDeductionTypesFunction(xml) {
        

            var show = ''
                                
            var dep = '';
            if (document.getElementById('PayrollCategory')) {
                dep = document.getElementById('PayrollCategory').value;
            }
            var temp = '';

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                
                show = '';
                

                var department = $sel.find('selected').text();
                
                show = $sel.find('show').text();                
                
                if (department.toString().trim() == dep.toString().trim()) {
                    
                    if (show != '') {

                        var optionsarray = show.split(',');
                        var seloption = "";

                        $('#DeductionsType')
                            .find('option')
                            .remove();

                        $('#DeductionsType2')
                           .find('option')
                           .remove();

                        $('#DeductionsType3')
                          .find('option')
                          .remove();

                        
                        seloption = '<option value="' + temp + '">' + temp + '</option>';

                        $.each(optionsarray, function (i) {
                            seloption += '<option value="' + optionsarray[i] + '">' + optionsarray[i] + '</option>';
                        });
                        $('#DeductionsType').append(seloption);
                        $('#DeductionsType2').append(seloption);
                        $('#DeductionsType3').append(seloption);
                       

                        
                        return;
                    }

                    
                }
            });

        }

        function addDeductionTypes() {
            //////////
            //Add deduction types on selected payroll category
            //////////


            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/Predefined_PayrollCategory_DeductionType.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/Predefined_PayrollCategory_DeductionType.xml'
            //}

            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/Predefined_PayrollCategory_DeductionType.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: addDeductionTypesFunction,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });

          
        }

        $('#PayScaleGroup').change(function () {
            //////////
            //pay scale group change functon to set basic pay amount
            //////////

            setBasicPayAmount();

        });

        function setBasicPayAmount() {
            //////////
            //Sets Basic pay amount based on payroll category and pay scale group
            //////////
            if (document.getElementById('BasicPayAmount')) {
                document.getElementById('BasicPayAmount').value = ''
            }
            var cat = '';
            if (document.getElementById('PayrollCategory')) {
                cat = document.getElementById('PayrollCategory').value;
            }
            var grp = '';
            if (document.getElementById('PayScaleGroup')) {
                grp = document.getElementById('PayScaleGroup').value;
            }

            if (document.getElementById('BasicPayAmount')) {
                if (cat == 'Hourly' && grp == 'STARTER') {
                    document.getElementById('BasicPayAmount').value = '9,77'
                }
            }

        }

        function setPayrollCategory() {
            //////////
            //Sets PayScaleGroup, OneIKEABonusLevel, BenefitLevel from predefined_payroll_category_outs.XML and selected Job title and payroll category
            //////////

            if (document.getElementById('PayScaleGroup')) {
                document.getElementById('PayScaleGroup').value = '';
            }
            if (document.getElementById('BenefitLevel')) {
                document.getElementById('BenefitLevel').value = '';
            }

            //alert();
            var sal = '';
            if (document.getElementById('PayrollCategory')) {
                sal = document.getElementById('PayrollCategory').value;
            }
           
            if (sal == 'Salaried' | sal == 'Salaried Management' | sal == 'Salaried Senior Management') {



                var path = window.location.protocol + '//';
                path = path + window.location.host + '/';

                
                path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_payroll_category_outs.xml'

                $.ajax({
                    type: "GET",
                    url: path,
                    dataType: "xml",
                    success: setPayrollCategoryXML,
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                        alert(textStatus);
                        alert(errorThrown);
                    }

                });


            }
            else if (sal == 'Hourly') {

                if (document.getElementById('PayScaleGroup')) {
                    document.getElementById('PayScaleGroup').value = '';
                }
                if (document.getElementById('BenefitLevel')) {
                    document.getElementById('BenefitLevel').value = '';
                }


                if (document.getElementById('PayScaleGroup')) {
                    document.getElementById('PayScaleGroup').value = 'STARTER';
                }
                
            }
        }


        function setPayrollCategoryXML(xml) {
            //////////
            //Sets PayScaleGroup, OneIKEABonusLevel, BenefitLevel from predefined_payroll_category_outs.XML and selected Job title and payroll category
            //////////

            var show = ''
            var show2 = ''
            var show3 = ''
            var res = '0';

            var dep = '';
            if (document.getElementById('JobTitle')) {
                dep = document.getElementById('JobTitle').value;
            }
           // alert(dep);

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';
                show2 = '';
                show3 = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show1').text();
                show2 = $sel.find('show2').text();
                show3 = $sel.find('show3').text();

                
                if (department.toString().trim() == dep.toString().trim()) {
                    //alert(show);
                    //alert(show2);
                    //alert(show3);

                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('PayScaleGroup')) {
                                document.getElementById('PayScaleGroup').value = show;
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if (document.getElementById('PayScaleGroup')) {
                                document.getElementById('PayScaleGroup').value = res;
                            }
                        }
                        res = '1';
                    }

                    if (show2 != '') {
                        var n = show2.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('OneIKEABonusLevel')) {
                                document.getElementById('OneIKEABonusLevel').value = show2;
                            }
                        }
                        else {
                            var res = show2.substring(0, n);
                            if (document.getElementById('OneIKEABonusLevel')) {
                                document.getElementById('OneIKEABonusLevel').value = res;
                            }
                        }
                        res = '1';
                    }

                    if (show3 != '') {
                        var n = show3.indexOf(",");
                        if (n == -1) {
                            if (document.getElementById('BenefitLevel')) {
                                document.getElementById('BenefitLevel').value = show3;
                            }
                        }
                        else {
                            var res = show3.substring(0, n);
                            if (document.getElementById('BenefitLevel')) {
                                document.getElementById('BenefitLevel').value = res;
                            }
                        }
                        res = '1';
                    }

                    if (res == 1) {
                        return;
                    }
                }
            });
        }

        $('#Department').change(function () {
            //////////
            //Change function for Department
            //////////



            //Cost centre department
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_costcentre_department_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_costcentre_department_outs.xml'
            //}

            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_costcentre_department_outs.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setCostCentre,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });


            //Line manager department
            path = '';
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_department_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_department_outs.xml'
            //}

            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_department_outs.xml'
            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setLineManager,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });


            //Line manager job title
            path = '';
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {                
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_jobtitle_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_jobtitle_outs.xml'
            //}

            //path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_jobtitle_outs.xml'
            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_department_jobtitle_IE_outs.xml'
            
            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setLineManagerJobTitle,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });


            //Department /Tec approver
            path = '';
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';

            //var n = path.indexOf("localhost")
            //if (n == -1) {
            //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
            //}
            //else {
            //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
            //}

            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setTecApprover,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });



        });



        function setTecApprover(xml) {
            //////////
            //Sets Tec Approver from predefined_department_tecapprover_outs.XML and selected department
            //////////
            var show = ''


            var dep = '';
            if (document.getElementById('Department')) {
                dep = $("#Department option:selected").text();
            }
            if (document.getElementById('TECApprover')) {
                $('#TECApprover')[0].selectize.setValue('');
            }
            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (department == dep) {

                    if (show != '') {
                        var n = show.indexOf(",");

                        if (n == -1) {
                            if (document.getElementById('TECApprover')) {
                                $('#TECApprover')[0].selectize.setValue(show);
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if (document.getElementById('TECApprover')) {
                                $('#TECApprover')[0].selectize.setValue(res);
                            }
                        }
                        return;
                    }
                    else {
                        if (document.getElementById('ReportsToLineManager')) {
                            if (document.getElementById('ReportsToLineManager').value != '');
                            {
                                var test = document.getElementById('ReportsToLineManager').value;
                                $('#TECApprover')[0].selectize.setValue(test);
                            }
                        }
                    }
                }
            });
        }


        function setLineManagerJobTitle(xml) {
            //////////
            //Sets Line manager job title from predefined_linemanager_jobtitle_outs.XML and selected line manager
            //////////

            var show = ''
            //var dep = $("#ReportsToLineManager option:selected").text();
            if (document.getElementById('ManagersJobTitle')) {
                $('#ManagersJobTitle')[0].selectize.setValue('');
            }
            var dep = '';
            //if (document.getElementById('ReportsToLineManager')) {
            //    dep=document.getElementById('ReportsToLineManager').value;
            //}
            if (document.getElementById('Department')) {
                dep = $("#Department option:selected").text();
            }
            

            //alert(dep);

            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (department == dep) {

                    if (show != '') {
                        var n = show.indexOf(",");

                        if (n == -1) {
                            if (document.getElementById('ManagersJobTitle')) {
                                $('#ManagersJobTitle')[0].selectize.setValue(show);
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if (document.getElementById('ManagersJobTitle')) {
                                $('#ManagersJobTitle')[0].selectize.setValue(res);
                            }
                        }
                        return;
                    }
                }
            });
        }

        function setLineManager(xml) {
            //////////
            //Sets Line manager from predefined_linemanager_department_outs.XML and selected department
            //////////

            var show = ''
            if (document.getElementById('ReportsToLineManager')) {
                $('#ReportsToLineManager')[0].selectize.setValue('');
            }
            var dep = '';
            if (document.getElementById('Department')) {
                dep = $("#Department option:selected").text();
            }
            
            $(xml).find('dependent').each(function () {

                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (department.toString().trim() == dep.toString().trim()) {
                    
                    if (show != '') {
                        var n = show.indexOf(",");

                        if (n == -1) {
                            if (document.getElementById('ReportsToLineManager')) {
                          
                                $('#ReportsToLineManager')[0].selectize.setValue(show);
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if (document.getElementById('ReportsToLineManager')) {
                                $('#ReportsToLineManager')[0].selectize.setValue(res);
                            }
                        }
                        return;
                    }
                }
            });
        }

        function setCostCentre(xml) {
            //////////
            //Sets cost centre from predefined_costcentre_department_outs.XML and selected department
            //////////
            var show = ''
            if (document.getElementById('HomeCostCentre')) {
                $('#HomeCostCentre')[0].selectize.setValue('');
            }

            var dep = '';
            if (document.getElementById('Department')) {
                dep = $("#Department option:selected").text();
            }
            $(xml).find('dependent').each(function () {

                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (department == dep) {

                    if (show != '') {
                        var n = show.indexOf(",");

                        if (n == -1) {
                            if (document.getElementById('HomeCostCentre')) {
                                $('#HomeCostCentre')[0].selectize.setValue(show);
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if (document.getElementById('HomeCostCentre')) {
                                $('#HomeCostCentre')[0].selectize.setValue(res);
                            }
                        }
                        return;
                    }
                }
            });
        }


        $('#BusinessUnit').change(function () {
            //////////
            //Sets Primary site to Business Unit
            //////////
            var value = $(this).val();
            if ($('#BusinessUnit')[0].selectize) {
                var selectedText = $('#BusinessUnit')[0].selectize.getItem(value).text();

                if ($('#PrimarySite')[0].selectize) {
                    $('#PrimarySite')[0].selectize.setValue(selectedText);
                }
                else {
                    $('#PrimarySite').val(selectedText);
                }
            }
            else {
                var selectedText = $('#BusinessUnit').find('option:selected').text();
                if ($('#PrimarySite')[0].selectize) {
                    $('#PrimarySite')[0].selectize.setValue(selectedText);
                }
                else {
                    var selectedText = $('#BusinessUnit').find('option:selected').text();
                    $('#PrimarySite').val(selectedText);
                }
            }
        });


        //var startDate = $('#ContractStartDate').val();
        //var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        //var dStart = APIGlobal.DateTime.parseDate(startDate, format);
        //var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
        //$('#date_ContractEndDate').not(".disabled").datepicker(
        //{
        //    onRender: function (ev) {
        //        return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
        //    }
        //});

        $('#date_ContractStartDate').datepicker().on('changeDate', function (ev) {
            //var sStart = $('#ContractStartDate').val();
            //var sEnd = $('#ContractEndDate').val();
            //var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            //var dStart = APIGlobal.DateTime.parseDate(sStart, format);
            //var dEnd = APIGlobal.DateTime.parseDate(sEnd, format);

            //var probationPeriod = $('#ProbationPeriod');
            //var probationEndDate = $('#ProbationEndDate');

            //var probationDate = $('#date_ProbationEndDate').datepicker("destroy");
            //var noticeProbationDate = $('#probationDate');


            //if (APIGlobal.DateTime.dateInRange(dStart, dEnd, 6)) {
            //    probationPeriod.val("Yes");
            //    noticeProbationDate.show();
            //    probationDate.show();

            //    var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 2, dStart.getDate(), 0, 0, 0, 0);
            //    var visibledaate = APIGlobal.DateTime.formatDate(endDate, format);
            //    probationEndDate.val(visibledaate.toString());
            //} else {
            //    probationPeriod.val("No");

            //    noticeProbationDate.hide();
            //    probationDate.hide();
            //    probationEndDate.val("");
            //}
            setProbationEndDate($('#ProbationPeriod').val());
        });
    });

</script>
