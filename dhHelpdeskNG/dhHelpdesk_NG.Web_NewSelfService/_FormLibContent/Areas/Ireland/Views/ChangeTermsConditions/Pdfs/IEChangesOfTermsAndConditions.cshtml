@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using System.Globalization;
@using ECT.Model.Entities;
@{
    Layout = null;
    Model.Language = "en";
    
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <div>
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>
        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <strong>Private & Confidential</strong><br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.FirstName, true) @Model.GetDocumentAnswer(FormLibConstants.FormField.LastName, true)<br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine1, true)
            @if (!string.IsNullOrEmpty(Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine2)))
            {
                <br />
                @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine2)
            }
            <br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentCity, true)
            <br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentPostalCode, true)
            <br />
            <br />
            <br />
            <br />
            <br />
            Dear @Model.GetDocumentAnswer(FormLibConstants.FormField.FirstName, true),<br />
            <br />
            I am writing to confirm that as of @Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeValidFrom, true):
            <br />
            <br />
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeType).ToLower() == "ONLY Pay Change".ToLower())
            {
                if (Model.GetDocumentAnswer(FormLibConstants.FormField.PayrollCategory) == "Hourly")
                {
                    <text>Your new rate of pay will be £  @Model.GetDocumentAnswer(FormLibConstants.FormField.BasicPayAmount, true) calculated on pro rata basis.</text>
                }
                else
                {
                    <text>Your new salary will be £ @Model.GetDocumentAnswer(FormLibConstants.FormField.BasicPayAmount, true) per annum calculated on pro rata basis.</text>
                }
            }
            else if (Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeType).ToLower() == "ONLY Change work hours".ToLower())
            {
                <text>Your new hours will be @Model.GetDocumentAnswer(FormLibConstants.FormField.ContractedHours, true) hours per week over @Model.GetDocumentAnswer(FormLibConstants.FormField.DaysPerWeek, true) days, Sunday to Saturday.</text>
                <br />
                <br />
                <text>Your new annual holiday entitlement (inclusive of 8 days annual public holidays) per holiday year is @Model.GetDocumentAnswer(FormLibConstants.FormField.HolidayFull, true) hours. Holiday entitlement runs from 1st September – 31st August and is calculated on a pro rata basis. Due to this change, you will now incur</text>
                if (Model.GetDocumentAnswer(FormLibConstants.FormField.AdditionDeduction, true) == "addition")
                {
                    <text> an additional </text>
                }
                else
                {
                    <text> a deduction of </text>
                }
            
                <text>@Model.GetDocumentAnswer(FormLibConstants.FormField.HolidayAdjustment, true) hours for the current holiday year.</text>
            }
            else
            {
                <text>Your new position will be @Model.GetDocumentAnswer(FormLibConstants.FormField.JobTitle, true) in the @Model.GetDocumentAnswer(FormLibConstants.FormField.Department, true), reporting to the</text> 
                if (Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager).ToLower() == "Shopkeeper".ToLower())
                {
                    <text>@Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager, true) @Model.GetDocumentAnswer(FormLibConstants.FormField.Department, true).</text>
                }
                else
                {
                    <text>@Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager, true).</text>
                }
            }
            <br />
            <br />
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeValidTo, true) != "" && Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeValidTo, true) != "31.12.9999")
            {
                <text>This change will end on @Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeValidTo, true).</text>
                <br />
                <br />
            }
            All other terms and conditions will remain the same. IKEA reserves the right to vary terms and conditions of employment subject to consultation and reasonable notice.
            
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeType).ToLower() != "ONLY Change work hours".ToLower() && Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeType).ToLower() != "ONLY Pay Change".ToLower())
            {
                <br />
                <br />
                <text>Meanwhile, congratulations on your new appointment and we would like to wish you every success in your new role.</text>
            }
            <br />
            <br />
            <br />
            Please retain this letter for your records.
            <br />
        </p>

        <endpage />
    </div>
</body>
</html>
