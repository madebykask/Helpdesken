@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

<div class="tab-pane" id="Payment">
    <div class="span6">
        <table class="table">
            <tbody>


                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Allowances")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesType")</td>
                    <td>
                        @Model.Element("AllowancesType")
                    </td>
                </tr>
@*                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesPaymentType")</td>
                    <td>
                        @Model.Element("AllowancesPaymentType")
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesAmountUnits")</td>
                    <td>
                        @Model.Element("AllowancesAmountUnits")
                    </td>
                </tr>
@*                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesNetGross")</td>
                    <td>
                        @Model.Element("AllowancesNetGross")
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesValidFrom")</td>
                    <td>
                        @Model.Element("AllowancesValidFrom")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AllowancesValidTo")</td>
                    <td>
                        @Model.Element("AllowancesValidTo")
                    </td>
                </tr>

                @for (int i = 2; i <= 3; i++)
                {
                    <tr class="allowance@(i.ToString())" id="allowance@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Allowances") @(i.ToString())</h4>
                        </td>
                    </tr>
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesType" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesType" + i.ToString())</td>
                    </tr>@*
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesPaymentType" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesPaymentType" + i.ToString())</td>
                    </tr>*@
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesAmountUnits" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesAmountUnits" + i.ToString())</td>
                    </tr>@*
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesNetGross" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesNetGross" + i.ToString())</td>
                    </tr>*@
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesValidFrom" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesValidFrom" + i.ToString())</td>
                    </tr>
                    <tr class="allowance@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AllowancesValidTo" + i.ToString())</td>
                        <td>
                            @Model.Element("AllowancesValidTo" + i.ToString())</td>
                    </tr>
                }
                <tr id="addAllowanceTrr">
                    <td colspan="2">
                        @Model.Element("Allowances")
                        <a id="addAllowance" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another Allowance")</a></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Deductions")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsType")</td>
                    <td>
                        @Model.Element("DeductionsType")
                    </td>
                </tr>
@*                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsPaymentType")</td>
                    <td>
                        @Model.Element("DeductionsPaymentType")
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsAmountUnits")</td>
                    <td>
                        @Model.Element("DeductionsAmountUnits")
                    </td>
                </tr>
@*                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsNetGross")</td>
                    <td>
                        @Model.Element("DeductionsNetGross")
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsValidFrom")</td>
                    <td>
                        @Model.Element("DeductionsValidFrom")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsValidTo")</td>
                    <td>
                        @Model.Element("DeductionsValidTo")
                    </td>
                </tr>

                @for (int i = 2; i <= 3; i++)
                {
                    <tr class="deduction@(i.ToString())" id="deduction@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Deductions") @(i.ToString())</h4>
                        </td>
                    </tr>
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsType" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsType" + i.ToString())</td>
                    </tr>@*
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsPaymentType" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsPaymentType" + i.ToString())</td>
                    </tr>*@
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsAmountUnits" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsAmountUnits" + i.ToString())</td>
                    </tr>@*
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsNetGross" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsNetGross" + i.ToString())</td>
                    </tr>*@
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsValidFrom" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsValidFrom" + i.ToString())</td>
                    </tr>
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsValidTo" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsValidTo" + i.ToString())</td>
                    </tr>
                }
                <tr id="addDeductionTrr">
                    <td colspan="2">
                        @Model.Element("Deductions")
                        <a id="addDeduction" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another Deduction")</a></td>
                </tr>

            </tbody>
        </table>
    </div>
</div>


<script>



    @*  if (document.getElementById('DeductionsValidFrom').value == ''){
                document.getElementById('DeductionsValidFrom').value = '@Model.GetAnswer("ChangeValidFrom")';
            for (var i = 2; i <= 3; i++) {
            
                var DeductionsValidFrom = "DeductionsValidFrom" + [i].toString();
            
                document.getElementById(DeductionsValidFrom).value = '@Model.GetAnswer("ChangeValidFrom")';
                
            }
        }*@

    function setPaymentDatePickersBehavior() {
        var startDate = $('#ChangeValidFrom').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dStart = APIGlobal.DateTime.parseDate(startDate, format);
        var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
        $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,' +
            '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3').not(".disabled").datepicker(
        {
            onRender: function (ev) {
                return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
            },
        });
    }

    setPaymentDatePickersBehavior();

    $('#date_ChangeValidFrom').on('changeDate', function (ev) {

        $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,' +
        '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3').not(".disabled").datepicker('destroy');

        setPaymentDatePickersBehavior();

        $('#AllowancesValidFrom,#AllowancesValidFrom2,#AllowancesValidFrom3,' +
        '#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3').val($('#ChangeValidFrom').val());
    }).data('datepicker');


    $('#ChangeValidFrom').change(function () {
        $('#AllowancesValidFrom,#AllowancesValidFrom2,#AllowancesValidFrom3,' +
       '#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3').val($('#ChangeValidFrom').val());
    });

    function setDefaultDate(id) {
        var input = $('#' + id);

        if (input.val() == '') {
            input.val('31.12.9999');
        }
    }

    function disableDatePicker(id) {
        var input = $('#' + id);
        var datePicker = $('#date_' + id);

        datePicker.datepicker("destroy");
        datePicker.addClass("disabled");
        input.val("");
        input.attr('readonly', 'readonly');
    }

    function enableDatePicker(id) {
        var input = $('#' + id);
        var datePicker = $('#date_' + id);

        datePicker.removeClass("disabled");
        input.removeAttr('readonly', 'readonly');
        setDefaultDate(id);
        datePicker.datepicker();
    }

    function setDatePickerBehavior(id, value) {
        var input = $('#' + id);

        //if (value == 'One Time') {
        //    disableDatePicker(id);
        //} else {
        //    enableDatePicker(id);
        //}
    }

    function setDefaultDatePickerBehavior(id, value) {
        var input = $('#' + id);

        //if (value == 'One Time') {
        //    disableDatePicker(id);
        //} else {
        //    setDefaultDate(id);
        //}
    }

    $('#AllowancesType').change(function () {
        //////////
        //AllowancesType change function
        //////////


        setAllowanceType();

    });

    $('#AllowancesType2').change(function () {
        //////////
        //AllowancesType change function
        //////////


        setAllowanceType2();

    });

    $('#AllowancesType3').change(function () {
        //////////
        //AllowancesType change function
        //////////


        setAllowanceType3();

    });

    function setAllowanceTypeXML3(xml) {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''
        if (document.getElementById('AllowancesAmountUnits3')) {
            document.getElementById('AllowancesAmountUnits3').value = '';
        }
        if (document.getElementById('AllowancesNetGross3')) {
            document.getElementById('AllowancesNetGross3').value = '';
        }
        var res = '0';
        var bus = '';

        if (document.getElementById('BusinessUnit')) {
            //bus = $("#BusinessUnit option:selected").text();
            bus = document.getElementById('BusinessUnit').value;
        }
        var dep = '';
        if (document.getElementById('AllowancesType3')) {
            dep = document.getElementById('AllowancesType3').value;
        }
        //var bus = $("#BusinessUnit option:selected").text();
        // alert(bus);

        var d = dep;

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            //show2 = $sel.find('show2').text();



            if (dep.toString().trim() == 'Location Allowance - Hourly') {

                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '0,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '1,28';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '0,77';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '0,35';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '1,28';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '1,28';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '1,28';
                    }

                }
            }
            else if (dep.toString().trim() == 'Location Allowance - Salaried') {

                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '203,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '1560,00';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '709,00';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '2600,00';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = '2600,00';
                    }

                }
            }
            else {

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits3')) {

                            if (dep.toString().trim() == 'Advanced') {
                                if (bus.toString().trim() != 'Peterborough Contact Centre') {
                                    document.getElementById('AllowancesAmountUnits3').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits3').value = '0,55';
                                }
                            }
                            else if (dep.toString().trim() == 'Fork Lift Truck Allowance') {
                                if (bus.toString().trim() != 'Store Milton Keynes 185') {
                                    document.getElementById('AllowancesAmountUnits3').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits3').value = '1,72';
                                }
                            }
                            else if (dep.toString().trim() == 'Kitchen Skills - Hourly')
                                if (bus.toString().trim() == 'Store Edinburgh 265') {
                                    document.getElementById('AllowancesAmountUnits3').value = '1,00';
                                }

                                else if (bus.toString().trim() == 'Store London Tottenham 255' | bus == 'Store London Wembley 141' | bus == 'Store London Croydon 144' | bus == 'Store London Lakeside 262') {
                                    document.getElementById('AllowancesAmountUnits3').value = '0,30';
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits3').value = show;
                                }
                            else {
                                document.getElementById('AllowancesAmountUnits3').value = show;
                            }
                        }


                    }

                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }


            if (res == 1) {
                return;
            }


        });
    }


    function setAllowanceTypeXML2(xml)
    {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''
        if (document.getElementById('AllowancesAmountUnits2')) {
            document.getElementById('AllowancesAmountUnits2').value = '';
        }
        if (document.getElementById('AllowancesNetGross2')) {
            document.getElementById('AllowancesNetGross2').value = '';
        }
        var res = '0';
        var bus = '';

        if (document.getElementById('BusinessUnit')) {
            //bus = $("#BusinessUnit option:selected").text();
            bus = document.getElementById('BusinessUnit').value;
        }
        var dep = '';
        if (document.getElementById('AllowancesType2')) {
            dep = document.getElementById('AllowancesType2').value;
        }
        //var bus = $("#BusinessUnit option:selected").text();
        // alert(bus);

        var d = dep;

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            //show2 = $sel.find('show2').text();



            if (dep.toString().trim() == 'Location Allowance - Hourly') {

                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '0,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '1,28';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '0,77';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '0,35';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '1,28';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '1,28';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '1,28';
                    }

                }
            }
            else if (dep.toString().trim() == 'Location Allowance - Salaried') {

                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '203,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '1560,00';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '709,00';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '2600,00';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = '2600,00';
                    }

                }
            }
            else {

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits2')) {

                            if (dep.toString().trim() == 'Advanced') {
                                if (bus.toString().trim() != 'Peterborough Contact Centre') {
                                    document.getElementById('AllowancesAmountUnits2').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits2').value = '0,55';
                                }
                            }
                            else if (dep.toString().trim() == 'Fork Lift Truck Allowance') {
                                if (bus.toString().trim() != 'Store Milton Keynes 185') {
                                    document.getElementById('AllowancesAmountUnits2').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits2').value = '1,72';
                                }
                            }
                            else if (dep.toString().trim() == 'Kitchen Skills - Hourly')
                                if (bus.toString().trim() == 'Store Edinburgh 265') {
                                    document.getElementById('AllowancesAmountUnits2').value = '1,00';
                                }

                                else if (bus.toString().trim() == 'Store London Tottenham 255' | bus == 'Store London Wembley 141' | bus == 'Store London Croydon 144' | bus == 'Store London Lakeside 262') {
                                    document.getElementById('AllowancesAmountUnits2').value = '0,30';
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits2').value = show;
                                }
                            else {
                                document.getElementById('AllowancesAmountUnits2').value = show;
                            }
                        }


                    }

                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }


            if (res == 1) {
                return;
            }


        });
    }

    function setAllowanceTypeXML(xml)
    {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''
        if (document.getElementById('AllowancesAmountUnits')) {
            document.getElementById('AllowancesAmountUnits').value = '';
        }
        if (document.getElementById('AllowancesNetGross')) {
            document.getElementById('AllowancesNetGross').value = '';
        }
        var res = '0';
        var bus = '';

        if (document.getElementById('BusinessUnit')) {
            //bus = $("#BusinessUnit option:selected").text();
            bus = document.getElementById('BusinessUnit').value;
        }
        var dep = '';
        if (document.getElementById('AllowancesType')) {
            dep = document.getElementById('AllowancesType').value;
        }
        //var bus = $("#BusinessUnit option:selected").text();
       // alert(bus);
        
        var d = dep;

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            //show2 = $sel.find('show2').text();



            if (dep.toString().trim() == 'Location Allowance - Hourly') {
             
                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '0,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '1,28';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '0,77';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '0,35';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '1,28';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '1,28';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '1,28';
                    }

                }
            }
            else if (dep.toString().trim() == 'Location Allowance - Salaried') {

                if (bus == 'Store Bristol 264') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '203,10';
                    }

                }
                else if (bus == 'Store London Croydon 144') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Lakeside 262') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '1560,00';
                    }

                }
                else if (bus == 'Store Milton Keynes 185') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '709,00';
                    }

                }
                else if (bus == 'Store London Tottenham 255') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '2600,00';
                    }

                }
                else if (bus == 'Store London Wembley 141') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '2600,00';
                    }

                }
                else if (bus == 'Service Office UK') {

                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = '2600,00';
                    }

                }
            }
            else {

                if (department.toString().trim() == dep.toString().trim()) {

                    if (show != '') {
                        if (document.getElementById('AllowancesAmountUnits')) {

                            if (dep.toString().trim() == 'Advanced') {
                                if (bus.toString().trim() != 'Peterborough Contact Centre') {
                                    document.getElementById('AllowancesAmountUnits').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits').value = '0,55';
                                }
                            }
                            else if (dep.toString().trim() == 'Fork Lift Truck Allowance') {
                                if (bus.toString().trim() != 'Store Milton Keynes 185') {
                                    document.getElementById('AllowancesAmountUnits').value = show;
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits').value = '1,72';
                                }
                            }
                            else if (dep.toString().trim() == 'Kitchen Skills - Hourly')
                                if (bus.toString().trim() == 'Store Edinburgh 265') {
                                    document.getElementById('AllowancesAmountUnits').value = '1,00';
                                }

                                else if (bus.toString().trim() == 'Store London Tottenham 255' | bus == 'Store London Wembley 141' | bus == 'Store London Croydon 144' | bus == 'Store London Lakeside 262') {
                                    document.getElementById('AllowancesAmountUnits').value = '0,30';
                                }
                                else {
                                    document.getElementById('AllowancesAmountUnits').value = show;
                                }
                            else {
                                document.getElementById('AllowancesAmountUnits').value = show;
                            }
                        }


                    }

                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }


            if (res == 1) {
                return;
            }


        });
    }

    function setAllowanceType()
    {
        //////////
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

    
        path = site.baseUrl + '/FormLibContent/Xmls/UnitedKingdom/Templates/predefined_allowancetype_units_outs_additional.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }

    function setAllowanceType2() {
        //////////
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        path = site.baseUrl + '/FormLibContent/Xmls/UnitedKingdom/Templates/predefined_allowancetype_units_outs_additional.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML2,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }

    function setAllowanceType3() {
        //////////
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        path = site.baseUrl + '/FormLibContent/Xmls/UnitedKingdom/Templates/predefined_allowancetype_units_outs_additional.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML3,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }


    $('#ChangeValidFrom').change(function () {
        setDatePickerBehavior('AllowancesValidTo');
    });
    setDefaultDatePickerBehavior('AllowancesValidTo');

    //$('#AllowancesPaymentType2').change(function () {
    //    setDatePickerBehavior('AllowancesValidTo2', $(this).val());
    //});
    //setDefaultDatePickerBehavior('AllowancesValidTo2', $('#AllowancesPaymentType2').val());

    //$('#AllowancesPaymentType3').change(function () {
    //    setDatePickerBehavior('AllowancesValidTo3', $(this).val());
    //});
    //setDefaultDatePickerBehavior('AllowancesValidTo3', $('#AllowancesPaymentType3').val());

    $('#ChangeValidFrom').change(function () {
        setDatePickerBehavior('DeductionsValidTo');
    });
    setDefaultDatePickerBehavior('DeductionsValidTo');

    //$('#DeductionsPaymentType2').change(function () {
    //    setDatePickerBehavior('DeductionsValidTo2', $(this).val());
    //});
    //setDefaultDatePickerBehavior('DeductionsValidTo2', $('#DeductionsPaymentType2').val());

    //$('#DeductionsPaymentType3').change(function () {
    //    setDatePickerBehavior('DeductionsValidTo3', $(this).val());
    //});
    //setDefaultDatePickerBehavior('DeductionsValidTo3', $('#DeductionsPaymentType3').val());

</script>



