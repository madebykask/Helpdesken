@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string IsTeWorker = "No";
    const string DefaultCountry = "United Kingdom";

    var fillOldVal = TempData["oldValues"];
    var newfill = (List<KeyValuePair<string, string>>)fillOldVal;        
}

<div class="tab-pane" id="Personal">
    <div class="span8">
        <table class="table">
            <tbody>

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Contact Details")</h4>
                    </td>
                    <td class="tdstrong" >
                        <h4>@Model.Translate("Current record")</h4>

                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TelephoneNumber")</td>
                    <td>@Model.Element("TelephoneNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContactEMailAddress")</td>
                    <td>@Model.Element("ContactEMailAddress")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_ContactEMailAddress" name="OLD_ContactEMailAddress" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContactEMailAddress").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_ContactEMailAddress">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContactEMailAddress").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>

                <!-- Permanent ADDRESS -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Permanent Address")
                        </h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine1")</td>
                    <td>@Model.Element("PermanentAddressLine1")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine1" name="OLD_PermanentAddressLine1" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine1">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine2")</td>
                    <td>@Model.Element("PermanentAddressLine2")</td>
                                        <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine2" name="OLD_PermanentAddressLine2" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine2">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                 @*  <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine3")</td>
                    <td>@Model.Element("PermanentAddressLine3")</td>
                                        <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine3" name="OLD_PermanentAddressLine3" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine3">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentPostalCode")</td>
                    <td>@Model.Element("PermanentPostalCode")</td>
                                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentPostalCode" name="OLD_PermanentPostalCode" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentPostalCode">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCity")</td>
                    <td>@Model.Element("PermanentCity")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCity" name="OLD_PermanentCity" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCity">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCountry")</td>
                    <td>@Model.Element("PermanentCountry")</td>
                                        <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCountry" name="OLD_PermanentCountry" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCountry">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>

                <!-- MAILING ADDRESS -->
                <tr class="mailingaddress" id="mailingaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Mailing Address")
                            <button class="btn btn-mini pull-right" id="btnMailingAddress" data-prefix="Mailing">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingAddressLine1")</td>
                    <td>@Model.Element("MailingAddressLine1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingAddressLine2")</td>
                    <td>@Model.Element("MailingAddressLine2")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingPostalCode")</td>
                    <td>@Model.Element("MailingPostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingCity")</td>
                    <td>@Model.Element("MailingCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingCountry")</td>
                    <td>@Model.Element("MailingCountry")</td>
                </tr>

                <!-- EMERGENCY ADDRESS -->
                <tr class="emergencyaddress" id="emergencyaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Emergency Address")
                            <button class="btn btn-mini pull-right" id="btnEmergencyAddress" data-prefix="Emergency">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressLine1")</td>
                    <td>@Model.Element("EmergencyAddressLine1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressLine2")</td>
                    <td>@Model.Element("EmergencyAddressLine2")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyPostalCode")</td>
                    <td>@Model.Element("EmergencyPostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCity")</td>
                    <td>@Model.Element("EmergencyCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCountry")</td>
                    <td>@Model.Element("EmergencyCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyContactNumber")</td>
                    <td>@Model.Element("EmergencyContactNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyContactRelationship")</td>
                    <td>@Model.Element("EmergencyContactRelationship")</td>
                </tr>

                <!-- FAMILY MEMBER / DEPENDENTS -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Family Member / Dependents")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMember")</td>
                    <td>@Model.Element("FamilyMember")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberLastName")</td>
                    <td>@Model.Element("FamilyMemberLastName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberFirstName")</td>
                    <td>@Model.Element("FamilyMemberFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberGender")</td>
                    <td>@Model.Element("FamilyMemberGender")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberDateOfBirth")</td>
                    <td>@Model.Element("FamilyMemberDateOfBirth")</td>
                </tr>


                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="familyMember@(i.ToString())" id="familyMember@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Family Member & Dependents") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMember" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMember" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberLastName" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberLastName" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberFirstName" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberFirstName" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberGender" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberGender" + i.ToString())</td>
                    </tr>
                    <tr class="familyMember@(i.ToString())">
                        <td class="tdstrong">@Model.Label("FamilyMemberDateOfBirth" + i.ToString())</td>
                        <td>
                            @Model.Element("FamilyMemberDateOfBirth" + i.ToString())</td>
                    </tr>
                }

                <tr id="addFamilyMemberTrr">
                    <td colspan="2">
                        @Model.Element("FamilyMembers")
                        <a id="addFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another family member")</a></td>
                </tr>

                <!-- Global Mobility Employee Documents -->
                <tr class="globalmobility-first" >
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Employee Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("EmployeeDocumentType")</td>
                    <td>@Model.Element("EmployeeDocumentType")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("EmployeeDocumentCountry")</td>
                    <td>@Model.Element("EmployeeDocumentCountry")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("EmployeeDocumentNo")</td>
                    <td>@Model.Element("EmployeeDocumentNo")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssueDate")</td>
                    <td>@Model.Element("EmployeeDocumentIssueDate")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlace")</td>
                    <td>@Model.Element("EmployeeDocumentIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlaceCountry")</td>
                    <td>@Model.Element("EmployeeDocumentIssuePlaceCountry")</td>
                </tr>

                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="employeeDocument@(i.ToString()) globalmobility" id="employeeDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Employee Documents")  @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentType" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentCountry" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentNo" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentNo" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssueDate" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addEmployeeDocumentTrr">
                    <td colspan="2">
                        @Model.Element("EmployeeDocuments")
                        <a id="addEmployeeDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another employee documents")</a></td>
                </tr>

                <!-- Global Mobility Dependants -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                    <td>@Model.Element("DependantFamilyMember")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("Accompanying")</td>
                    <td>@Model.Element("Accompanying")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsLastName")</td>
                    <td>@Model.Element("DependantsLastName")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsFirstName")</td>
                    <td>@Model.Element("DependantsFirstName")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsDateOfBirth")</td>
                    <td>@Model.Element("DependantsDateOfBirth")</td>
                </tr>

                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility" id="dependantFamilyMember@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                        <td>@Model.Element("DependantFamilyMember" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("Accompanying" + i.ToString())</td>
                        <td>@Model.Element("Accompanying" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsLastName" + i.ToString())</td>
                        <td>@Model.Element("DependantsLastName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsFirstName" + i.ToString())</td>
                        <td>@Model.Element("DependantsFirstName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility ">
                        <td class="tdstrong">@Model.Label("DependantsDateOfBirth" + i.ToString())</td>
                        <td>@Model.Element("DependantsDateOfBirth" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addDependantFamilyMembersTrr">
                    <td colspan="2">
                        @Model.Element("DependantFamilyMembers")
                        <a id="addDependantFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant")</a></td>
                </tr>

                <!-- Global Mobility Dependants Documents -->
                <tr class="globalmobility-first"">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentType")</td>
                    <td>@Model.Element("DependantsDocumentType")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentCountry")</td>
                    <td>@Model.Element("DependantsDocumentCountry")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsDocumentNo")</td>
                    <td>@Model.Element("DependantsDocumentNo")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssueDate")</td>
                    <td>@Model.Element("DependantsDocumentIssueDate")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlace")</td>
                    <td>@Model.Element("DependantsDocumentIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first" >
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlaceCountry")</td>
                    <td>@Model.Element("DependantsDocumentIssuePlaceCountry")</td>
                </tr>

                @for (int i = 2; i <= 4; i++)
                {
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility" id="globalMobilityDependantDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants Documents") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentType" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentCountry" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentNo" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentNo" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssueDate" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addGlobalMobilityDependantDocumentTrr">
                    <td colspan="2">
                        @Model.Element("DependantsDocuments")
                        <a id="addGlobalMobilityDependantDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant document")</a></td>
                </tr>

                 <!-- Bank Account Details -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Bank Account Details")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Institution")</td>
                    <td>@Model.Element("Institution")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Payee")</td>
                    <td>@Model.Element("Payee")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BankCountry")</td>
                    <td>@Model.Element("BankCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BankKey")</td>
                    <td>@Model.Element("BankKey")
                        <div class="notice">
                            @Model.Translate("Bank Key = Sort Code")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AccountNumber")</td>
                    <td>@Model.Element("AccountNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("IBAN")</td>
                    <td>@Model.Element("IBAN")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BuildingSocietyRollNo")</td>
                    <td>@Model.Element("BuildingSocietyRollNo")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PaymentCurrency")</td>
                    <td>@Model.Element("PaymentCurrency")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherBankPercentageOrAmount")</td>
                    <td>@Model.Element("OtherBankPercentageOrAmount")</td>
                </tr>

                <!-- FISCAL DATA AND SOCIAL INSURANCE -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Fiscal Data")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TaxInformation")</td>
                    <td>@Model.Element("TaxInformation")
                        <div class="notice" id="taxInformationNotice">
                            @Model.Translate("Please remember to attach the form.")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Social Insurance")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("SocialInsurance")</td>
                    <td>@Model.Element("SocialInsurance")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NationalInsuranceNumber")</td>
                    <td>@Model.Element("NationalInsuranceNumber")</td>
                </tr>

                <!-- Nationality / Language -->

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Nationality / Language")</h4>
                    </td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("Language")</td>
                    <td>@Model.Element("Language")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Nationality")</td>
                    <td>@Model.Element("Nationality")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EthnicOrigin")</td>
                    <td>@Model.Element("EthnicOrigin")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Name Change")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewTitle")</td>
                    <td>@Model.Element("NewTitle")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewFirstName")</td>
                    <td>@Model.Element("NewFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewLastName")</td>
                    <td>@Model.Element("NewLastName")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Marital status")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MaritalStatus")</td>
                    <td>@Model.Element("MaritalStatus")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Gender")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Gender")</td>
                    <td>@Model.Element("Gender")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Documents")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentType")</td>
                    <td>@Model.Element("DocumentType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CountryOfIssue")</td>
                    <td>@Model.Element("CountryOfIssue")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CountryOfUse")</td>
                    <td>@Model.Element("CountryOfUse")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentNO")</td>
                    <td>@Model.Element("DocumentNO")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ValidUntil")</td>
                    <td>@Model.Element("ValidUntil")
                        <div id="notice_ValidUntilDate" style="display: none;" class="notice">
                            @Model.Translate("Please choose a date in the future")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Benefits")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BupaHealthBenefit")</td>
                    <td>@Model.Element("BupaHealthBenefit")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BupaMember")</td>
                    <td>@Model.Element("BupaMember")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AdditionalMemberLastName")</td>
                    <td>@Model.Element("AdditionalMemberLastName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AdditionalMemberFirstName")</td>
                    <td>@Model.Element("AdditionalMemberFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AdditionalMemberDateOfBirth")</td>
                    <td>@Model.Element("AdditionalMemberDateOfBirth")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("AdditionalMemberRelationship")</td>
                    <td>@Model.Element("AdditionalMemberRelationship")</td>
                </tr>
                                @for (int i = 2; i <= 5; i++)
                {
                    <tr class="bupa@(i.ToString())" id="bupa@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Benefits") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("BupaHealthBenefit" + i.ToString())</td>
                        <td>
                            @Model.Element("BupaHealthBenefit" + i.ToString())</td>
                    </tr>
                                    
                     <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("BupaMember" + i.ToString())</td>
                        <td>
                            @Model.Element("BupaMember" + i.ToString())</td>
                    </tr>
                     <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AdditionalMemberLastName" + i.ToString())</td>
                        <td>
                            @Model.Element("AdditionalMemberLastName" + i.ToString())</td>
                    </tr>
                     <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AdditionalMemberFirstName" + i.ToString())</td>
                        <td>
                            @Model.Element("AdditionalMemberFirstName" + i.ToString())</td>
                    </tr>
                     <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AdditionalMemberDateOfBirth" + i.ToString())</td>
                        <td>
                            @Model.Element("AdditionalMemberDateOfBirth" + i.ToString())</td>
                    </tr>
                     <tr class="bupa@(i.ToString())">
                        <td class="tdstrong">@Model.Label("AdditionalMemberRelationship" + i.ToString())</td>
                        <td>
                            @Model.Element("AdditionalMemberRelationship" + i.ToString())</td>
                    </tr>
                   }

                <tr id="addBupaTrr">
                    <td colspan="2">
                        @Model.Element("Bupas")
                        <a id="addBupa" class="btn btn-link btn-mini pull-right">@Model.Translate("I want to add an additional member")</a></td>
                </tr>

            </tbody>
        </table>
    </div>
    <div class="span6">
        <table class="table">
            <tbody>
               

            </tbody>
        </table>
    </div>
    <input type="hidden" id="CustomerId" value="@Model.CustomerId" />
</div>
    
<script>
    
    function bupa(value) {
        
         $('#BupaMember').empty();

         if ($(value).val() == 'BUPA medical') {
             var o = new Option("", "");

             $(o).html("");
             $("#BupaMember").append(o);


             var o = new Option("Co-worker", "Co-worker");

             $(o).html("Co-worker");
             $("#BupaMember").append(o);

             var o = new Option("Partner", "Partner");

             $(o).html("Partner");
             $("#BupaMember").append(o);


             var o = new Option("Child", "Child");

             $(o).html("Child");
             $("#BupaMember").append(o);
         }

         if ($(value).val() == 'BUPA dental') {
             var o = new Option("", "");

             $(o).html("");
             $("#BupaMember").append(o);


             var o = new Option("Co-worker", "Co-worker");

             $(o).html("Co-worker");
             $("#BupaMember").append(o);

             var o = new Option("Partner", "Partner");

             $(o).html("Partner");
             $("#BupaMember").append(o);
         }

         if ($(value).val() == 'BUPA medical and dental') {
             var o = new Option("", "");

             $(o).html("");
             $("#BupaMember").append(o);


             var o = new Option("Co-worker", "Co-worker");

             $(o).html("Co-worker");
             $("#BupaMember").append(o);

             var o = new Option("Partner", "Partner");

             $(o).html("Partner");
             $("#BupaMember").append(o);
         }
    };

    $('#BupaHealthBenefit').change(function () {
        bupa(this);
    });

    $('#BupaHealthBenefit2').change(function () {
        bupa(this);
    });

    $('#BupaHealthBenefit3').change(function () {
        bupa(this);
    });

    $('#BupaHealthBenefit4').change(function () {
        bupa(this);
    });

    $('#BupaHealthBenefit5').change(function () {
        bupa(this);
    });


    var bupasection = function () {

        var emptyElements = function () {
            return $('[class^=bupa]')
                                        .filter(function () { return $(this).css('display') !== 'none'; })
                                        .find(':text, :radio, :checkbox, select')
                                        .filter(function () {
                                            return $(this).val() == '';
                                        });
        };

        $('[class^=bupa]').hide();
        $('.bupa').show();
        var counter = parseInt($('#Bupas').val());

        var max = 5;

        var elements = $('[class^=bupa]').find(':text, :radio, :checkbox, select');

        var enabled = elements.eq(0).is(':enabled');

        for (var i = 1; i <= counter; i++)
            $('.bupa' + i).show();

        if (emptyElements().length == 0 && (counter < max) && enabled)
            $('#addBupaTr').show();
        else
            $('#addBupaTr').hide();

        var elements = $('[class^=bupa]').find(':text, :radio, :checkbox, select');

        elements.change(function () {
            if (emptyElements().length == 0 && (counter < max) && enabled)
                $('#addBupaTr').show();
            else
                $('#addBupaTr').hide();
        });

        $('#addBupa').click(function (e) {
            e.preventDefault();
            counter++;
            $('#Bupas').val(counter);
            if (counter <= max)
                $('[class=bupa' + counter + ']').show();
            $('#addBupaTr').hide();
        });
    };

    function setGlobalMobilityBehavior(value) {
        if (value == '@IsTeWorker') {

            jQuery(".globalmobility-first").hide();
            jQuery("[class*=globalmobility]").hide();
            jQuery("[class*=globalmobility] input").val("");
            jQuery("[class*=globalmobility-first]").hide();
            jQuery("[class*=globalmobility] input[type=text][name*='Country']").val('@DefaultCountry');
            jQuery("[class*=globalmobility] select option:not([value])").prop('selected', true);
        } else if (!(value == '@IsTeWorker')) {
            jQuery(".globalmobility-first").show();
            
        }
    };

    $(function () {
 
        bupasection();


        function setTaxInformationBehavior(value) {
            if (value == 'P45 attached') {
                $('#taxInformationNotice').show();
            }
            else {
                $('#taxInformationNotice').hide();
            }
        };

        setGlobalMobilityBehavior($('#TECoWorker').val());
        setTaxInformationBehavior($('#TaxInformation').val());

        $('#TECoWorker').change(function () {
            setGlobalMobilityBehavior($(this).val());
        });

        $('#Institution').change(function () {
            var payee = $('#FirstName').val() + " " + $('#LastName').val();
            $('#Payee').val(payee);

            value = $(this).val();

            if (value != 'Building Society') {
                $('#BuildingSocietyRollNo').prop('disabled', true);
            }
            else {
                $('#BuildingSocietyRollNo').prop('disabled', false);
            }
        });

        $('#TaxInformation').change(function () {
            setTaxInformationBehavior($(this).val());
        });

    });


    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var noticValidUntil = $('#notice_ValidUntilDate');
    $('#date_ValidUntil').not(".disabled").datepicker({
        onRender: function (date) {
            return date.valueOf() < now.valueOf() ? 'disabled' : '';
        }
    }).on('changeDate', function (ev) {

        noticValidUntil.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticValidUntil.show();
    }).data('datepicker');

    $('#ValidUntil').change(function () {
        var startDate = $(this).val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dstartDate = APIGlobal.DateTime.parseDate(startDate, format);
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        var noticeValidUntilDate = $('#notice_ValidUntilDate');
        noticeValidUntilDate.hide();

        if (dstartDate.valueOf() < now.valueOf()) {
            noticeValidUntilDate.show();
        }
    });

</script>
