@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using System.Globalization;
@using ECT.Model.Entities;
@{
    Layout = null;
    Model.Language = "en";

    //set fields that are mandatory in the contract here. This can be done in a better way... /TA
    Model.SetDocumentMandatoryField("ServiceArea");
    Model.SetDocumentMandatoryField("ContractStartDate");
    Model.SetDocumentMandatoryField("DateOfNextSalaryReview");
    Model.SetDocumentMandatoryField("ContractReviewDate");
    
}
<!DOCTYPE html>
<html>
<body>
    <div>
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>

        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <strong>PRIVATE & CONFIDENTIAL</strong><br />
            @Model.GetDocumentAnswer("FirstName", true) @Model.GetDocumentAnswer("LastName", true)<br />
            @Model.GetDocumentAnswer("PermanentAddressLine1", true)
            @if (!string.IsNullOrEmpty(Model.GetDocumentAnswer("PermanentAddressLine2")))
            {
                <br />
                @Model.GetDocumentAnswer("PermanentAddressLine2")
            }
            <br />
            @Model.GetDocumentAnswer("PermanentCity", true)
            <br />
            @Model.GetDocumentAnswer("PermanentPostalCode", true)
            <br />
            <br />
            Dear @Model.GetDocumentAnswer("FirstName", true),<br />

            I am very pleased to be able to confirm to you our offer of a zero hour contract in the position of @Model.GetDocumentAnswer("JobTitle", true) in the @UnitedKingdomPdfPage.GetServiceAreaText("ServiceArea", Model) at IKEA @CustomPdfPage.IsEmpty(Model.Department.Unit, "Unit"), reporting to the 

         @if (Model.GetDocumentAnswer("ManagersJobTitle").ToLower() == "Shopkeeper".ToLower())
         {
             <text> @Model.GetDocumentAnswer("ManagersJobTitle", true) @Model.GetDocumentAnswer("Department", true)</text><text>.</text>
         }
         else
         {
             <text> @Model.GetDocumentAnswer("ManagersJobTitle", true)</text><text>.</text>
         }

            <br />
            <br />
            The principal Terms and Conditions of your employment will be as follows:


        </p>

        @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();

            var brText = "<br /><br />";

            //1
            string text1 = "Your amended contract of employment with IKEA " + CustomPdfPage.IsEmpty(Model.Department.Unit, "Unit") + " will start on " + CustomPdfPage.GetDateInWords("ContractStartDate", Model) + ". This counts as part of your continuous service with IKEA which began on ";

            if (!string.IsNullOrEmpty(Model.GetDocumentAnswer("PreviousContractStartDate")))
            {
                text1 += " " + CustomPdfPage.GetDateInWords("PreviousContractStartDate", Model) + " ";
            }
            else
            {
                text1 += " " + CustomPdfPage.GetDateInWords("ContractStartDate", Model) + " ";
            }
            list.Add(new PdfListItem { Text = text1 });

            //2

            string text2 = "Your zero hour contract will be reviewed annually and may not be renewed as a zero hour contract but revert back to a standard contract, where your new hours and shifts will be agreed with your line manager. The new contract will supersede any previous terms and conditions, and instead you will be placed on IKEA’s newest terms and conditions which are outlined in the enclosed appendix. Your next review date will be on " + CustomPdfPage.GetDateInWords("ContractReviewDate", Model);
            list.Add(new PdfListItem { Text = text2 });

            //3
            string text3 = "Please report to your place of work: " + CustomPdfPage.IsEmpty(Model.Department.Unit, "Unit") + ", " + CustomPdfPage.IsEmpty(Model.Department.StrAddr, "StrAddr") + ".";
            list.Add(new PdfListItem { Text = text3 });

            //4
            string text4 = "The " + UnitedKingdomPdfPage.GetServiceAreaText("ServiceArea", Model) + " is your primary place of work. You will on occasions be expected to work in other areas within the Store/Unit to support the business need.";
            list.Add(new PdfListItem { Text = text4 });

            //5
            string text5 = "You agree to be available for work 5 over 7 days, Sunday - Saturday. Your hours of work for each period of employment will be determined by the organisation in advance and written notice will be provided. You must confirm your availability 8 weeks before commencing work and you will be given a minimum of 4 weeks notice of your schedule.";
            list.Add(new PdfListItem { Text = text5 });

            //6
            string text6 = "You have agreed to give a commitment of full availability from the following date " + CustomPdfPage.GetDateInWords("ContractStartDate", Model) + " (minimum 10 weeks) over the period of the contract. Any holiday accrued is taken and paid outside of the 10 weeks commitment.";
            list.Add(new PdfListItem { Text = text6 });

            //7
            string AllowancesText = "";
            string AllowancesTextOriginal = "(plus &pound; {0} for location allowance)";


            if (Model.GetDocumentAnswer("AllowancesType").ToLower() == "150B - Hourly Location Allow".ToLower())
            {

                //Set mandatory!
                Model.SetDocumentMandatoryField("AllowancesAmountUnits");

                AllowancesText = string.Format(AllowancesTextOriginal, Model.GetDocumentAnswer("AllowancesAmountUnits"));
            }

            if (Model.GetDocumentAnswer("AllowancesType2").ToLower() == "150B - Hourly Location Allow".ToLower())
            {
                //Set mandatory!
                Model.SetDocumentMandatoryField("AllowancesAmountUnits2");

                AllowancesText = string.Format(AllowancesTextOriginal, Model.GetDocumentAnswer("AllowancesAmountUnits2"));
            }

            if (Model.GetDocumentAnswer("AllowancesType3").ToLower() == "150B - Hourly Location Allow".ToLower())
            {
                //Set mandatory!
                Model.SetDocumentMandatoryField("AllowancesAmountUnits3");

                AllowancesText = string.Format(AllowancesTextOriginal, Model.GetDocumentAnswer("AllowancesAmountUnits3"));
            }

            string text7 = "Your starting hourly rate will be &pound;" + Model.GetDocumentAnswer("BasicPayAmount", true) + " per hour " + AllowancesText + " payable monthly in arrears on the last Friday of each month by direct transfer into your Bank or Building Society account. Next review date will be " + CustomPdfPage.GetDateInWords("DateOfNextSalaryReview", Model) + ".";
            list.Add(new PdfListItem { Text = text7 });

            //8
            string text8 = "Your holiday entitlement for this contract period is " + Model.GetDocumentAnswer("HolidayCurrent", true) + " weeks statutory allowance (Holiday entitlement runs from 1st September – 31st August (inclusive of 8 days annual public holidays) and calculated on a pro rata basis dependent on number of hours worked and will be paid at the end of each tertial in the last scheduled pay run.";
            list.Add(new PdfListItem { Text = text8 });

            //9
            string text9 = "You must save holiday hours for days of store closure when you would normally be scheduled to work. The store will be closed on Easter Sunday and Christmas Day.";
            list.Add(new PdfListItem { Text = text9 });

            //10
            string text10 = "Upon termination of your employment, you will normally be entitled to annual holiday with pay, or pay in lieu thereof, proportional to your length of service. If you have taken more holiday entitlement than you have accrued during the holiday year, the balance will be deducted from any outstanding pay. Payment for holidays in these circumstances will be made on a pro rata basis to your service in the current holiday year and compensatory days, as specified, are excluded from this calculation.";
            list.Add(new PdfListItem { Text = text10 });

            //11
            string text11 = "You are entitled to all company benefits.";
            list.Add(new PdfListItem { Text = text11 });

            //12
            string text12 = "As you are employed on a zero hours basis there is no entitlement to occupational sick pay because there are no contracted hours. Statutory sick pay will be paid where you are absent from work for four or more days and are earnings exceed the NI lower earnings limit.";
            list.Add(new PdfListItem { Text = text12 });

            //13
            string text13 = "The notice period during your zero hour contract is four weeks from yourself, or a minimum of four week’s notice from IKEA. Beyond the probationary period and up to four years service you will give/be given four weeks notice in writing. Thereafter co-workers are entitled to receive one additional week’s notice for each year of continuous employment (up to a maximum of 12 week’s notice).";
            list.Add(new PdfListItem { Text = text13 });

            //14
            string text14 = "IKEA reserves the right to vary terms and conditions of employment subject to consultation and reasonable notice.";
            list.Add(new PdfListItem { Text = text14 });

              
        }

        @if (list.Count > 1)
        {
            for (int i = 0; i < list.Count; i++)
            { 
            <br />                                        
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-right: 50px;">@(i + 1). @Html.Raw(list[i].Text)</p>
                if (list[i].SubList != null && list[i].SubList.Count > 0)
                {
                    foreach (var item in list[i].SubList)
                    {
@*<br />*@
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">&bull; @Html.Raw(item.Text) </p>
                    }
                }
            }
        }
        else
        {
            for (int i = 0; i == list.Count - 1; i++)
            {
            <p style="font-family: Verdana; font-size: 11px;">@Html.Raw(list[i])</p>
            }
        }

        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <text><br />This letter, together with the Terms and Conditions Appendix forms the basis of your contract.</text>
        </p>
        <endpage />
    </div>
</body>
</html>
