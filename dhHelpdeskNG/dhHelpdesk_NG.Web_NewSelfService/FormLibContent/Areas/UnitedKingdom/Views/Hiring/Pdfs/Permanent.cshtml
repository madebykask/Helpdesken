@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using System.Globalization;
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<body>
    <div>
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>

        <p style="text-align: left; font-family: Verdana; font-size: 11px;"><strong>PRIVATE & CONFIDENTIAL</strong><br />
        @Model.GetAnswer("FirstName") @Model.GetAnswer("LastName")<br />
        @Model.GetAnswer("PermanentAddressLine1")
        <br />
        @Model.GetAnswer("PermanentAddressLine2")
        <br />
        @Model.GetAnswer("PermanentCity")
        <br />
        @Model.GetAnswer("PermanentPostalCode")
        <br />
        <br />
        Dear @Model.GetAnswer("FirstName"),<br />

        I am very pleased to be able to confirm to you our offer of the position of @Model.GetAnswer("JobTitle") in @UnitedKingdomPdfPage.GetServiceAreaText(Model.GetAnswer("ServiceArea")) at IKEA @Model.Department.Unit reporting to the 
        
        @if (@Model.GetAnswer("ManagersJobTitle").ToLower() == "Shopkeeper".ToLower())
        {
            <text> @Model.GetAnswer("ManagersJobTitle") @Model.GetAnswer("Department")</text><text>.</text>
        }
        else
        {
            <text> @Model.GetAnswer("ManagersJobTitle")</text><text>.</text>
        }

        <br />
        <br />
        The principal Terms and Conditions of your employment will be as follows:
         <br />
            </p>
        
          @{
              var list = new List<PdfListItem>();
              var pdfList = new List<PdfListItem>();

              var brText = "<br /><br />";

              //1
              string text1 = "Your first day of employment with IKEA " + Model.Department.Unit + " will be on " + CustomPdfPage.GetDateInWords(Model.GetAnswer("ContractStartDate")) + ". This counts as part of your continuous service with IKEA which began on ";

              if (!string.IsNullOrEmpty(Model.GetAnswer("PreviousContractStartDate")))
              {
                  text1 += " " + CustomPdfPage.GetDateInWords(Model.GetAnswer("PreviousContractStartDate")) + " ";
              }
              else
              {
                  text1 += " " + CustomPdfPage.GetDateInWords(Model.GetAnswer("ContractStartDate")) + " ";
              }

              list.Add(new PdfListItem { Text = text1 });


              //2
              string text2 = "Please report to your place of work: IKEA " + Model.Department.Unit + ", " + Model.Department.StrAddr + " at " + CustomPdfPage.GetAmPm(Model.GetAnswer("InductionStartTime")) + " for a full ";

              text2 += CustomPdfPage.GetLengthOfInductionInDaysText(Model.GetAnswer("LengthOfInductionInDays")) + " introduction, finishing at " + CustomPdfPage.GetAmPm(Model.GetAnswer("InductionEndTime")) + ".";
              list.Add(new PdfListItem { Text = text2 });

              //3
              string text3 = "The " + UnitedKingdomPdfPage.GetServiceAreaText(Model.GetAnswer("ServiceArea")) + " is your primary area of work. You will on occasions be expected to work in other areas within the Store/Unit to support the business need.";
              list.Add(new PdfListItem { Text = text3 });

              //4 
              string text4 = "Your hours of work will be " + Model.GetAnswer("ContractedHours") + " hours per week over " + Model.GetAnswer("DaysPerWeek") + " days, Sunday – Saturday.";
              list.Add(new PdfListItem { Text = text4 });

              //5
              string text5 = "Your starting salary will be &pound;" + Model.GetAnswer("BasicPayAmount");

              //Add PayInfoText
              text5 += UnitedKingdomPdfPage.GetPayInfoText(Model);
              text5 += " Next review date will be " + CustomPdfPage.GetDateInWords(Model.GetAnswer("DateOfNextSalaryReview")) + ".";

              text5 += "<br /><br />";

              if (!string.IsNullOrEmpty(Model.GetAnswer("AllowancesType")))
              {
                  //1
                  text5 += UnitedKingdomPdfPage.GetAllowancesText("AllowancesType", "AllowancesAmountUnits", Model);
                  text5 += "<br /><br />";
              }

              if (!string.IsNullOrEmpty(Model.GetAnswer("AllowancesType2")))
              {
                  //2
                  text5 += UnitedKingdomPdfPage.GetAllowancesText("AllowancesType2", "AllowancesAmountUnits2", Model);
                  text5 += "<br /><br />";
              }

              if (!string.IsNullOrEmpty(Model.GetAnswer("AllowancesType3")))
              {
                  //3
                  text5 += UnitedKingdomPdfPage.GetAllowancesText("AllowancesType3", "AllowancesAmountUnits3", Model);
                  text5 += "<br /><br />";
              }

              text5 += "Your annual holiday entitlement (inclusive of 8 days annual public holidays) per calendar year is " + Model.GetAnswer("HolidayFull") + " hours. Holiday entitlement runs from 1st September – 31st August and is calculated on a pro rata basis. Your holiday entitlement for the current holiday year is " + Model.GetAnswer("HolidayCurrent") + " hours.";
              text5 += "<br /><br />";

              text5 += "You must save holiday hours for days of store closure when you would normally be scheduled to work. The store will be closed on " + Model.Department.CloseDay + ".";
              text5 += "<br /><br />";

              text5 += "Untaken basic holiday entitlement can only be carried forward with prior permission from " + Model.Department.StoreManager + ". See the Co-worker handbook for details of when holiday can be taken.";
              text5 += "<br /><br />";

              text5 += "Upon termination of your employment, you will normally be entitled to annual holiday with pay, or pay in lieu thereof, proportional to your length of service.";
              text5 += "<br /><br />";

              text5 += "If you have taken more holiday entitlement than you have accrued during the holiday year, the balance will be deducted from any outstanding pay. Payment for holidays in these circumstances will be made on a pro rata basis to your service in the current holiday year and compensatory days, as specified, are excluded from this calculation.";

              list.Add(new PdfListItem { Text = text5 });

              //BENEFITS
              string benefit1Text = UnitedKingdomPdfPage.GetBenefit1Text(Model);

              if (!string.IsNullOrEmpty(benefit1Text))
              {

                  benefit1Text.Insert(0, "<br /><br />");

                  list.Add(new PdfListItem { Text = benefit1Text });
              }

              string benefit2Text = UnitedKingdomPdfPage.GetBenefit2Text(Model);

              if (!string.IsNullOrEmpty(benefit2Text))
              {
                  benefit2Text.Insert(0, "<br /><br />");
                  list.Add(new PdfListItem { Text = benefit2Text });
              }

              string benefit3Text = UnitedKingdomPdfPage.GetBenefit3Text(Model);

              if (!string.IsNullOrEmpty(benefit3Text))
              {
                  benefit3Text.Insert(0, "<br /><br />");
                  list.Add(new PdfListItem { Text = benefit3Text });
              }

              string benefit4Text = UnitedKingdomPdfPage.GetBenefit4Text(Model);

              if (!string.IsNullOrEmpty(benefit4Text))
              {
                  benefit4Text.Insert(0, "<br /><br />");
                  list.Add(new PdfListItem { Text = benefit4Text });
              }

              //BENEFITS END

              //MEDICAL INFO
              if (Model.GetAnswer("ServiceArea").ToLower() == "IKEA Food Serv".ToLower())
              {
                  list.Add(new PdfListItem { Text = "Please complete and return the Pre-Employment Medical Questionnaire and Food Handling Questionnaire (if applicable to your role) in the confidential envelope provided. Only our Occupational Health Advisor will read it. Please note that this offer of employment is subject to a satisfactory result. <br /><br />" });
              }

              if (Model.GetAnswer("BusinessUnit").ToLower() == "Peterborough Contact Centre".ToLower())
              {
                  list.Add(new PdfListItem { Text = "Please complete and return the Pre-Employment Medical Questionnaire in the envelope provided.<br /><br />" });
              }
              //MEDICAL INFO END

              string text11 = "Your employment will be probationary for the first six months. During your probationary period, you will be given advice and support to enable you to meet the expectation of the job and your performance will be assessed to determine suitability for the role. The probationary period may be extended at the company’s discretion, but will not, in any case, exceed nine months. The notice period during your probationary period is one week from either side.";

              string probationText = UnitedKingdomPdfPage.GetProbationtext(Model);

              if (!string.IsNullOrEmpty(probationText))
              {
                  text11 += "<br /><br />";
              }

              text11 += probationText;

              list.Add(new PdfListItem { Text = text11 });


              //12
              string text12 = "In order to comply with Asylum and Immigration Act 1996, this offer is made on the condition that you are legally entitled to work in the UK and that you provide proof of this on or prior to your first day at work. Please bring one of the original documents listed below:";
              list.Add(new PdfListItem { Text = text12 });

              pdfList = new List<PdfListItem>();

              pdfList.Add(new PdfListItem { Text = "Your passport showing British citizenship or right of abode in the United Kingdom." });
              pdfList.Add(new PdfListItem { Text = "A document showing that you are a national of a European Economic Area country or Switzerland (this must be a passport or national identity card)." });
              pdfList.Add(new PdfListItem { Text = "A residence permit issued by the Home Office to a national from a European Economic Area country or Switzerland." });
              pdfList.Add(new PdfListItem { Text = "A passport or other document issued by the Home Office which has an endorsement stating that you have a current right of residence in the United Kingdom as the family member of a national from a European Economic Area country or Switzerland, who is resident in the United Kingdom." });
              pdfList.Add(new PdfListItem { Text = "A passport or other travel document endorsed to show that you can stay indefinitely in the United Kingdom, or has no time limit on their stay." });
              pdfList.Add(new PdfListItem { Text = "A passport or other travel document endorsed to show that you can stay in the United Kingdom; and that the endorsement allows you to do the type of work being offered, if you do not have a work permit." });
              pdfList.Add(new PdfListItem { Text = "An Application Registration Card issued by the Home Office to an Asylum Seeker stating that you are permitted to take employment." });
              list[list.Count - 1].SubList = pdfList;

              //13
              string text13 = "If you are unable to provide the original documentation listed above you will be required to bring documentation from a secondary list, the details of which are available from the Human Resources department. If you have any questions relating to the above, please contact the Human Resources Department on " + Model.Department.StrAddr + " prior to your first day of work.";

              text13 += "<br /><br />On your first day please bring along with you the following:";

              text13 += "<br />&nbsp;1.&nbsp;Bank/Building Society details.";
              text13 += "<br />&nbsp;2.&nbsp;Your P45 if you have one.";
              text13 += "<br />&nbsp;3.&nbsp;Official proof of your National Insurance number, for example your National Insurance card or an original letter from a government agency. If you do not have a National Insurance number you must provide proof that you have applied for one within the first month of employment.";

              list.Add(new PdfListItem { Text = text13 });

              //14
              string text14 = "IKEA reserves the right to vary terms and conditions of employment subject to consultation and reasonable notice.";
              list.Add(new PdfListItem { Text = text14 });
          }

        @if (list.Count > 1)
        {
            for (int i = 0; i < list.Count; i++)
            { 
            <br />                                        
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-right: 50px;">@(i + 1). @Html.Raw(list[i].Text)</p>
                if (list[i].SubList != null && list[i].SubList.Count > 0)
                {
                    foreach (var item in list[i].SubList)
                    {
@*<br />*@
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">&bull; @Html.Raw(item.Text) </p>
                    }
                }
            }
        }
        else
        {
            for (int i = 0; i == list.Count - 1; i++)
            {
            <p style="font-family: Verdana; font-size: 11px;">@Html.Raw(list[i])</p>
            }
        }

        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
        <text> <br /> This letter, together with the Terms and Conditions Appendix and Section 1 of the Co-worker handbook forms the basis of your contract.
          </text>

            </p>
        <endpage />

    </div>
</body>
</html>
