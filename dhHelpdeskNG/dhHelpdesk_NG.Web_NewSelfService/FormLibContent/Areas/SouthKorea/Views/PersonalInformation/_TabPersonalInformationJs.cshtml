@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string IsTeWorker = "No";
    const string DefaultCountry = "South Korea";

 }




<script>

    //var telNum2 = document.getElementById('TelephoneNumber2').value;

    //if (telNum2) {
    //    jQuery(".TelephoneNumber").show();
    //}
    //else {

    //    jQuery(".TelephoneNumber").hide();
    //    jQuery("[class*=TelephoneNumber]").hide();

    //}
    //$(document).on('click', '#addTelephoneNumber', function (e) {
    //    e.preventDefault();
    //    jQuery(".TelephoneNumber").show();       
    //});

    function setGlobalMobilityBehavior(value) {
        if (value == '@IsTeWorker') {

            jQuery(".globalmobility-first").hide();
            jQuery("[class*=globalmobility]").hide();
            $("[class*=globalmobility] input:not(input[type=hidden])").val("");
            jQuery("[class*=globalmobility-first]").hide();
            jQuery("[class*=globalmobility] input[type=text][name*='Country']").val('@DefaultCountry');
            jQuery("[class*=globalmobility] select option:not([value])").prop('selected', true);
        } else if (!(value == '@IsTeWorker')) {
            jQuery(".globalmobility-first").show();
        }

        $("[class*=globalmobility-first] input[type=hidden]").val("1");

    };

    $(function () {

        //bupasection();


        function setTaxInformationBehavior(value) {
            if (value == 'P45 attached') {
                $('#taxInformationNotice').show();
            }
            else {
                $('#taxInformationNotice').hide();
            }
        };

        setGlobalMobilityBehavior($('#TECoWorker').val());
        setTaxInformationBehavior($('#TaxInformation').val());

        $('#TECoWorker').change(function () {
            setGlobalMobilityBehavior($(this).val());
        });

        if ($('#TECoWorker').val() == '@IsTeWorker') {
            $(".globalmobility-first").hide();
        }


        $('#Institution').change(function () {
            var payee = $('#FirstName').val() + " " + $('#LastName').val();
            $('#Payee').val(payee);

            value = $(this).val();

            if (value != 'Building Society') {
                $('#BuildingSocietyRollNo').prop('disabled', true);
            }
            else {
                $('#BuildingSocietyRollNo').prop('disabled', false);
            }
        });

        $('#TaxInformation').change(function () {
            setTaxInformationBehavior($(this).val());
        });

    });


    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var noticValidUntil = $('#notice_ValidUntilDate');
    $('#date_ValidUntil').not(".disabled").datepicker({
        onRender: function (date) {
            return date.valueOf() < now.valueOf() ? 'disabled' : '';
        }
    }).on('changeDate', function (ev) {

        noticValidUntil.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticValidUntil.show();
    }).data('datepicker');

    $('#ValidUntil').change(function () {
        var startDate = $(this).val();
        var format = APIGlobal.DateTime.parseFormat('yyyy.mm.dd');
        var dstartDate = APIGlobal.DateTime.parseDate(startDate, format);
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        var noticeValidUntilDate = $('#notice_ValidUntilDate');
        noticeValidUntilDate.hide();

        if (dstartDate.valueOf() < now.valueOf()) {
            noticeValidUntilDate.show();
        }
    });


    //$('#BusinessUnit').on('setvalue', function (e) {
    //    alert("");
    //    setBusinessUnitAddress($('#BusinessUnit'));
    //});

    //$(document).on('change', '#BusinessUnit', function () {
    //    // Does some stuff and logs the event to the console
    //    alert("5");
    //});

    // Setting the Work address by business unit 
    var setBusinessUnitAddress = function (e) {
        //Timeout needed because of delay in setting the BU
        setTimeout(function () {
            if (!($(e).val() == ' ' || $(e).val() == '')) {
                var actionUrl = '@Url.Action("BusinessUnitData", "PersonalInformation")' + '?query=' + $(e).val();
                $.getJSON(actionUrl, setBusinessUnitAddressFromResponse);
            }
        }, 50);
    }

    function setBusinessUnitAddressFromResponse(response) {
        if (response != null) {
            $('#WorkAddressline1').val(response.StrAddr.toString());
            $('#WorkAddressline2').val(response.StrAddr2.toString());
            $('#WorkAddressline3').val(response.StrAddr3.toString());
            $('#WorkAddressline4').val(response.StrAddr4.toString());
            $('#WorkPostalCode').val(response.PostalCode.toString());
            $('#WorkCity').val(response.City.toString());
            $('#WorkCountry').val('South Korea');
        }
    }
</script>


<script>
    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var noticeOldDate = $('#notice_OldDate');
    $('#date_ChangeValidFrom').not(".disabled").datepicker({
        onRender: function (date) {
            return '';
        }
    }).on('changeDate', function (ev) {

        noticeOldDate.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticeOldDate.show();
    }).data('datepicker');

    $('#ChangeValidFrom').change(function () {
        var validFrom = $('#ChangeValidFrom').val();
        var format = APIGlobal.DateTime.parseFormat('yyyy.mm.dd');
        var dvalidFrom = APIGlobal.DateTime.parseDate(validFrom, format);
        noticeOldDate.hide();
        if (dvalidFrom.valueOf() < now.valueOf())
            noticeOldDate.show();
    });
</script>