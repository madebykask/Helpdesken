@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

<div class="tab-pane active" id="ServiceRequestDetails">
    <div class="span8">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Details")</h4>
                    </td>
                    <td class="tdstrong" ><h4>@Model.Translate("Current record")</h4></td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Co-WorkerGlobalviewID")</td>
                    <td>
                        @Model.Element("Co-WorkerGlobalviewID", false)

                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FirstName")</td>
                    <td>
                        @Model.Element("FirstName", false)
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("LastName")</td>
                    <td>
                        @Model.Element("LastName", false)</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("IKEAEmailAddress")</td>
                    <td>
                        @Model.Element("IKEAEmailAddress", false)
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("IKEANetworkID")</td>
                    <td>
                        @Model.Element("IKEANetworkID", false)
                    </td>
                </tr>
                 <tr>
                    <td class="tdstrong">@Model.Label("Company")</td>
                    <td>
                        @Model.Element("Company")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BusinessUnit")</td>
                    <td>
                        @Model.Element("BusinessUnit")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ServiceArea")</td>
                    <td>@Model.Element("ServiceArea")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Department")</td>
                    <td>
                        @Model.Element("Department")
                    </td>
                </tr>
                @*<tr>
                    <td class="tdstrong">@Model.Label("ChangeType")</td>
                    <td>
                        @Model.Element("ChangeType")
                    </td>
                </tr>*@
                <tr>
                    <td class="tdstrong">@Model.Label("ChangeValidFrom")</td>
                    <td>
                        @Model.Element("ChangeValidFrom")
                        <div id="notice_OldDate" style="display: none;" class="notice">
                            @Model.Translate("The date you've entered is in the past. Are you sure you want to backdate Change date?")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ChangeValidTo")</td>
                    <td>
                        @Model.Element("ChangeValidTo")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ServiceRequestPriority")</td>
                    <td>
                        @Model.Element("ServiceRequestPriority")</td>
                </tr>
                @if (!FormLibUtils.IsSelfService()){
                <tr>
                    <td class="tdstrong">@Model.Translate("SLA")</td>
                    <td>
                        @if (Model.Contract.CaseNumber != null)
                        {
                            @Model.Contract.PriorityName;
                        }
                        else { 
                            @Model.Form.PriorityName;
                        }
                    </td>
                </tr>
                }
               @* <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Permanent Address")</h4>
                    </td>
                    <td class="tdstrong" ><h4>@Model.Translate("Current record")</h4></td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine1")</td>
                    <td>@Model.Element("PermanentAddressLine1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine2")</td>
                    <td>@Model.Element("PermanentAddressLine2")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCity")</td>
                    <td>@Model.Element("PermanentCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCountry")</td>
                    <td>@Model.Element("PermanentCountry")</td>
                </tr>*@

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Country Specifics")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("SecondmentDuration")</td>
                    <td>@Model.Element("SecondmentDuration")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CareerBreakReturn")</td>
                    <td>@Model.Element("CareerBreakReturn")</td>
                </tr>
            </tbody>
        </table>
    </div>

    <input type="hidden" id="CustomerId" value="@Model.CustomerId" />
    <input type="hidden" id="AllCoWorker" value="1" />
    <input type="hidden" id="formGuid" value="@Model.FormGuid" />
</div>

<script>

    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var noticeOldDate = $('#notice_OldDate');
    $('#date_ChangeValidFrom').not(".disabled").datepicker({
        onRender: function (date) {
            return '';
        }
    }).on('changeDate', function (ev) {

        noticeOldDate.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticeOldDate.show();
    }).data('datepicker');

    $('#ChangeValidFrom').change(function () {
        var validFrom = $('#ChangeValidFrom').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dvalidFrom = APIGlobal.DateTime.parseDate(validFrom, format);
        noticeOldDate.hide();
        if (dvalidFrom.valueOf() < now.valueOf())
            noticeOldDate.show();
    });
   
</script>
