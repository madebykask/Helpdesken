@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string CompanyName = "IKEA Distribution Services Limited";
    const string PartTime = "Part Time";
    const string FullTime = "Full Time";
    const string ZeroHours = "Zero Hours";
    const string DefaultProbationPeriod = "Yes";

    var fillOldVal = TempData["oldValues"];
    var newfill = (List<KeyValuePair<string, string>>)fillOldVal;
}

<div class="tab-pane" id="OrganisationalAssignment">
    <div class="span8">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Organisation")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Country")</td>
                    <td>@Model.Element("Country")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewCompany")</td>
                    <td>@Model.Element("NewCompany")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_NewCompany" name="OLD_NewCompany" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewCompany").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_NewCompany">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewCompany").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewBusinessUnit")</td>
                    <td>@Model.Element("NewBusinessUnit")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_NewBusinessUnit" name="OLD_NewBusinessUnit" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewBusinessUnit").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_NewBusinessUnit">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewBusinessUnit").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewServiceArea")</td>
                    <td>@Model.Element("NewServiceArea")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_NewServiceArea" name="OLD_NewServiceArea" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewServiceArea").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_NewServiceArea">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewServiceArea").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewDepartment")</td>
                    <td>@Model.Element("NewDepartment")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_NewDepartment" name="OLD_NewDepartment" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewDepartment").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_NewDepartment">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_NewDepartment").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCostCentre")</td>
                    <td>@Model.Element("HomeCostCentre")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_HomeCostCentre" name="OLD_HomeCostCentre" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_HomeCostCentre").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_HomeCostCentre">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_HomeCostCentre").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Job")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("JobTitle")</td>
                    <td>@Model.Element("JobTitle")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_JobTitle" name="OLD_JobTitle" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_JobTitle").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_JobTitle">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_JobTitle").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewPosition")</td>
                    <td>@Model.Element("NewPosition")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ReportsToLineManager")</td>
                    <td>@Model.Element("ReportsToLineManager")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_ReportsToLineManager" name="OLD_ReportsToLineManager" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ReportsToLineManager").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_ReportsToLineManager">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ReportsToLineManager").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ManagersJobTitle")</td>
                    <td>@Model.Element("ManagersJobTitle")</td>
                </tr>
                @*      </tbody>
        </table>
    </div>
    <div class="span6">
        <table class="table">
            <tbody>*@
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Employment Conditions")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmploymentCategory")</td>
                    <td>@Model.Element("EmploymentCategory")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_EmploymentCategory" name="OLD_EmploymentCategory" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmploymentCategory").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmploymentCategory">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmploymentCategory").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractedHours")</td>
                    <td>@Model.Element("ContractedHours")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_ContractedHours" name="OLD_ContractedHours" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContractedHours").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_ContractedHours">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContractedHours").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DaysPerWeek")</td>
                    <td>@Model.Element("DaysPerWeek")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractType")</td>
                    <td>@Model.Element("ContractType")</td>
                    <td>
                        <input type="hidden" class="oldValue" id="OLD_ContractType" name="OLD_ContractType" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContractType").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_ContractType">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContractType").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationPeriod")</td>
                    <td>@Model.Element("ProbationPeriod")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationEndDate")</td>
                    <td>@Model.Element("ProbationEndDate")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("CDS")</h4>
                    </td>
                    <td class="tdstrong">
                        <h4>@Model.Translate("Current record")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PrimarySite")</td>
                    <td>@Model.Element("PrimarySite")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TECApprover")</td>
                    <td>@Model.Element("TECApprover")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HelpDesk")</td>
                    <td>@Model.Element("HelpDesk")</td>
                </tr>
            </tbody>
        </table>
    </div>

</div>


<script>

    $(function () {

        $('#ContractedHours').on("input", function () {
            var value = $(this).val();

            if (value >= 16 && value <= 38) {
                $('#ContractType option[value="' + '@PartTime' + '"]').prop('selected', true);
            }
            else if (value >= 39 && value <= 40) {
                $('#ContractType option[value="' + '@FullTime' + '"]').prop('selected', true);
            }
            else if (value == "0") {
                $('#ContractType option[value="' + '@ZeroHours' + '"]').prop('selected', true);
            }
            else {
                $('#ContractType option:not([value])').prop('selected', true);
            }
        });

        $('#Company').change(function () {
            var value = $(this).val();

            if (value != '@CompanyName') {
                $('#CostAllocation, #CrossChargeCostCentre').prop('disabled', true);
            }
            else {
                $('#CostAllocation, #CrossChargeCostCentre').prop('disabled', false);
            }
        });

        $('#ReportsToLineManager').change(function () {
            $('#TECApprover').val($(this).val());
        });

        $('#BusinessUnit').change(function () {
            $('#PrimarySite').val($(this).val());
        });

        function selectIndexChangeProbationPeriod() {
            if ((this.options[this.selectedIndex].value == 'Not Applicable') || (this.options[this.selectedIndex].value == 'No')) {
                document.getElementById('ProbationEndDate').disabled = true;
            } else {
                document.getElementById('ProbationEndDate').disabled = false;
            }
        }

        document.getElementById('ProbationPeriod').onchange = selectIndexChangeProbationPeriod;
    });

    $('#ProbationPeriod').change(function () {
        setProbationEndDate($(this).val());
    });

    function setProbationEndDate(value) {
        var probationEndDate = $('#ProbationEndDate');

        if (value == '@DefaultProbationPeriod') {
            var sStart = $('#ChangeValidFrom').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dStart = APIGlobal.DateTime.parseDate(sStart, format);

            var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 6, dStart.getDate(), 0, 0, 0, 0);
            var visibleDate = APIGlobal.DateTime.formatDate(endDate, format);
            probationEndDate.val(visibleDate.toString());
        }
        else {
            probationEndDate.val("");
        }
    };


    $('#date_ChangeValidFrom').not('disabled').datepicker().on('changeDate', function (ev) {

        setProbationEndDate($('#ProbationPeriod').val());
    });


    $('#ProbationPeriod').change(function () {
        //////////
        //Probation period change function
        //////////
        setProbationEndDate($(this).val());
    });

    //$('#Country').change(function () {
      
    //    alert(test);

    //});

    $('#NewServiceArea').change(function () {

        //Line manager job title
        path = '';
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';



        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_function_jobtitleIE_outs.xml'


        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setLineManagerDefault,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


        
    });

    function setLineManagerDefault(xml) {
        //////////
        //Sets Line manager job title from predefined_linemanager_jobtitle_outs.XML and selected line manager
        //////////
        ///DONE IN CHANGE
        $('#JobTitle').off('change');
        var show = ''

        var dep = '';

        if (document.getElementById('ServiceArea')) {
            dep = $("#NewServiceArea option:selected").text();
        }

        var selectize_tags = $("#JobTitle")[0].selectize
        selectize_tags.clearOptions();


        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();


            if (department == dep) {

                if (show != '') {





                    var optionsarray = show.split(',');
                    optionsarray.unshift('');

                    $.each(optionsarray, function (i) {
                        selectize_tags.addOption({
                            text: optionsarray[i],
                            value: optionsarray[i]
                        });
                        selectize_tags.addItem(optionsarray[i])
                    });

                    $('#JobTitle')[0].selectize.setValue('');


                    return;

                }
            }
        });

        $('#JobTitle').on('change', function () {

            setDefaultPayroll();
            addPayScaleOnPayroll();
            setPayrollCategory();
            setBasicPayAmount();
        });
    }

    function setDefaultPayroll(xml) {

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_payroll_category_IE_outs.xml'


        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setDefaultPayrollXML,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });

    }
    function setDefaultPayrollXML(xml) {
        //////////
        //Sets PayScaleGroup, OneIKEABonusLevel, BenefitLevel from predefined_payroll_category_outs.XML and selected Job title and payroll category
        //////////
        ///DONE IN CHANGE

        var show = ''
        var res = '0';

        var dep = '';
        if (document.getElementById('JobTitle')) {
            dep = document.getElementById('JobTitle').value;
        }

        var bus = '';
        if (document.getElementById('NewBusinessUnit')) {
            bus = $("#NewBusinessUnit option:selected").text();
        }

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show4').text();


            if (department.toString().trim() == dep.toString().trim()) {


                res = '1';
                if (show != '') {
                    var n = show.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('PayrollCategory')) {
                            document.getElementById('PayrollCategory').value = show;

                        }
                    }
                    else {
                        var res = show.substring(0, n);
                        if (document.getElementById('PayrollCategory')) {
                            document.getElementById('PayrollCategory').value = res;
                        }
                    }
                }
                else {
                    if (document.getElementById('PayrollCategory')) {
                        document.getElementById('PayrollCategory').value = '';
                    }
                }

                //  setBasicPayAmount();

            }
        });

        addPayScaleOnPayroll();

        setPayrollCategory();

        setBasicPayAmount();
    }
    function setAllowanceType() {
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_payment_IE_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }

    function setAllowanceType2() {
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_payment_IE_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML2,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }

    function setAllowanceType3() {
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_allowancetype_units_payment_IE_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setAllowanceTypeXML3,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }

    function setAllowanceTypeXML3(xml) {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''

        if (document.getElementById('AllowancesAmountUnits3')) {
            document.getElementById('AllowancesAmountUnits3').value = '';
        }
        if (document.getElementById('AllowancesNetGross3')) {
            document.getElementById('AllowancesNetGross3').value = '';
        }

        var res = '0';

        var dep = '';
        if (document.getElementById('AllowancesType3')) {
            dep = document.getElementById('AllowancesType3').value;
        }

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            show2 = $sel.find('show2').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {
                    if (document.getElementById('AllowancesAmountUnits3')) {
                        document.getElementById('AllowancesAmountUnits3').value = show;
                    }

                    res = '1';
                }

                if (show2 != '') {
                    var n = show2.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('AllowancesNetGross3')) {
                            document.getElementById('AllowancesNetGross3').value = show2;
                        }
                    }
                    else {
                        var res = show2.substring(0, n);
                        if (document.getElementById('AllowancesNetGross3')) {
                            document.getElementById('AllowancesNetGross3').value = res;
                        }
                    }
                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }
        });
    }

    function setAllowanceTypeXML2(xml) {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''
        if (document.getElementById('AllowancesAmountUnits2')) {
            document.getElementById('AllowancesAmountUnits2').value = '';
        }
        if (document.getElementById('AllowancesNetGross2')) {
            document.getElementById('AllowancesNetGross2').value = '';
        }

        var res = '0';

        var dep = '';
        if (document.getElementById('AllowancesType2')) {
            dep = document.getElementById('AllowancesType2').value;
        }

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            show2 = $sel.find('show2').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {
                    if (document.getElementById('AllowancesAmountUnits2')) {
                        document.getElementById('AllowancesAmountUnits2').value = show;
                    }
                    res = '1';
                }

                if (show2 != '') {
                    var n = show2.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('AllowancesNetGross2')) {
                            document.getElementById('AllowancesNetGross2').value = show2;
                        }
                    }
                    else {
                        var res = show2.substring(0, n);
                        if (document.getElementById('AllowancesNetGross2')) {
                            document.getElementById('AllowancesNetGross2').value = res;
                        }
                    }
                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }
        });
    }

    function setAllowanceTypeXML(xml) {
        //////////
        //Sets allowance type units from predefined_allowancetype_units_outs.XML based on Allowance type
        //////////

        var show = ''
        var show2 = ''
        if (document.getElementById('AllowancesAmountUnits')) {
            document.getElementById('AllowancesAmountUnits').value = '';
        }
        //document.getElementById('AllowancesAmountUnits').value = '';
        //document.getElementById('AllowancesAmountUnits').value = '';

        //AllowancesAmountUnits3
        if (document.getElementById('AllowancesNetGross')) {
            document.getElementById('AllowancesNetGross').value = '';
        }

        var res = '0';

        var dep = '';
        if (document.getElementById('AllowancesType')) {
            dep = document.getElementById('AllowancesType').value;
        }

        
       
        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();
            show2 = $sel.find('show2').text();
            
            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {
                    if (document.getElementById('AllowancesAmountUnits')) {
                        document.getElementById('AllowancesAmountUnits').value = show;
                    }
                    res = '1';
                }

                if (show2 != '') {
                    var n = show2.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('AllowancesNetGross')) {
                            document.getElementById('AllowancesNetGross').value = show2;
                        }
                    }
                    else {
                        var res = show2.substring(0, n);
                        if (document.getElementById('AllowancesNetGross')) {
                            document.getElementById('AllowancesNetGross').value = res;
                        }
                    }
                    res = '1';
                }


                if (res == 1) {
                    return;
                }
            }
        });
    }

    $('#ReportsToLineManager').change(function () {
        //////////
        //ReportsToLineManager change function
        //////////
        var value = $(this).val();

        if ($('#ReportsToLineManager')[0].selectize) {
            var selectedText = $('#ReportsToLineManager')[0].selectize.getItem(value).text();

            if ($('#TECApprover')[0].selectize) {
                $('#TECApprover')[0].selectize.setValue(selectedText);
            }
            else {
                $('#TECApprover').val(selectedText);
            }
        }
        else {
            var selectedText = $('#ReportsToLineManager').find('option:selected').text();
            if ($('#TECApprover')[0].selectize) {
                $('#TECApprover')[0].selectize.setValue(selectedText);
            }
            else {
                var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                $('#TECApprover').val(selectedText);
            }
        }
    });



    function addAllowanceTypesFunction(xml) {

        var show = ''

        var dep = '';
        if (document.getElementById('PayrollCategory')) {
            dep = document.getElementById('PayrollCategory').value;
        }
        var temp = '';

        $(xml).find('dependent').each(function () {


            var $sel = $(this);

            show = '';


            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {

                    var optionsarray = show.split(',');
                    var seloption = "";

                    $('#AllowancesType')
                        .find('option')
                        .remove();

                    $('#AllowancesType2')
                       .find('option')
                       .remove();

                    $('#AllowancesType3')
                      .find('option')
                      .remove();


                    seloption = '<option value="' + temp + '">' + temp + '</option>';

                    $.each(optionsarray, function (i) {
                        seloption += '<option value="' + optionsarray[i] + '">' + optionsarray[i] + '</option>';
                    });
                    $('#AllowancesType').append(seloption);
                    $('#AllowancesType2').append(seloption);
                    $('#AllowancesType3').append(seloption);



                    return;
                }


            }
        });

    }


    function addAllowanceTypes() {
        //////////
        //Add deduction types on selected payroll category
        //////////

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/Predefined_PayrollCategory_AllowancesType.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: addAllowanceTypesFunction,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }
        });
    }




    function addDeductionTypesFunction(xml) {


        var show = ''

        var dep = '';
        if (document.getElementById('PayrollCategory')) {
            dep = document.getElementById('PayrollCategory').value;
        }
        var temp = '';

        $(xml).find('dependent').each(function () {


            var $sel = $(this);

            show = '';

                
            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {

                    var optionsarray = show.split(',');
                    var seloption = "";

                    $('#DeductionsType')
                        .find('option')
                        .remove();

                    $('#DeductionsType2')
                       .find('option')
                       .remove();

                    $('#DeductionsType3')
                      .find('option')
                      .remove();


                    seloption = '<option value="' + temp + '">' + temp + '</option>';

                    $.each(optionsarray, function (i) {
                        seloption += '<option value="' + optionsarray[i] + '">' + optionsarray[i] + '</option>';
                    });
                    $('#DeductionsType').append(seloption);
                    $('#DeductionsType2').append(seloption);
                    $('#DeductionsType3').append(seloption);

                    return;
                }
            }
        });

    }

    function addDeductionTypes() {
        //////////
        //Add deduction types on selected payroll category
        //////////

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/Predefined_PayrollCategory_DeductionType.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: addDeductionTypesFunction,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }
        });
    }

    //$('#PayScaleGroup').change(function () {
    //    //////////
    //    //pay scale group change functon to set basic pay amount
    //    //////////
        

    //    setBasicPayAmount();

    //});



    function addPayScaleOnPayroll() {
        //////////
        //Add deduction types on selected payroll category
        //////////
        //DONE IN CHANGE

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_payroll_payscale_Change_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: addPayScaleOnPayrollXML,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


    }


    function addPayScaleOnPayrollXML(xml) {
        ///DONE IN CHANGE
        var show = ''
        var dep = '';

        if (document.getElementById('PayrollCategory')) {
            dep = $("#PayrollCategory option:selected").text();
        }

        var temp = '';

        $(xml).find('dependent').each(function () {

            var $sel = $(this);

            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {

                    var optionsarray = show.split(',');
                    var seloption = "";

                    $('#PayScaleGroup')
                        .find('option')
                        .remove();



                    optionsarray.push('');

                    $.each(optionsarray, function (key, value) {

                        var s = value.replace(/\n/g, '');

                        $('#PayScaleGroup')
                            .append($("<option></option>")
                            .attr("value", s)
                            .text(s));
                    });



                    return;
                }


            }
        });

    }

    function setBasicPayAmount() {
        //////////
        //Sets Basic pay amount based on payroll category and pay scale group
        //////////
        //if (document.getElementById('BasicPayAmount')) {
        //    document.getElementById('BasicPayAmount').value = ''
        //}
        //var cat = '';
        //if (document.getElementById('PayrollCategory')) {
        //    cat = document.getElementById('PayrollCategory').value;
        //}
        //var grp = '';
        //if (document.getElementById('PayScaleGroup')) {
        //    //grp = document.getElementById('PayScaleGroup').value;
        //    grp = $("#PayScaleGroup option:selected").text();
        //}


        if (document.getElementById('BasicPayAmount')) {
            document.getElementById('BasicPayAmount').value = ''
        }


        var bus = '';
        if (document.getElementById('NewBusinessUnit')) {
            bus = $("#NewBusinessUnit option:selected").text();
        }
        var grp = '';
        if (document.getElementById('PayScaleGroup')) {
            //grp = document.getElementById('PayScaleGroup').value;
            grp = $("#PayScaleGroup option:selected").text();
        }

        var pay = '';
        if (document.getElementById('PayrollCategory')) {
            pay = document.getElementById('PayrollCategory').value;

        }



        if (pay.toString().trim() == 'Hourly') {
            var show;
            //  alert();
            show = 'STARTER';
            //document.getElementById('PayScaleGroup').value = show;
            //grp = show;

            if (grp == '') {
                grp = 'STARTER';
                document.getElementById('PayScaleGroup').value = grp;
                document.getElementById('PayScaleGroup').selectedIndex = 1;
            }


            if (grp.toString().trim() == 'STARTER') {
                if (document.getElementById('BasicPayAmount')) {
                    document.getElementById('BasicPayAmount').value = '9,77'
                }
            }
            else if (grp.toString().trim() == 'FOUNDATION') {
                if (document.getElementById('BasicPayAmount')) {
                    document.getElementById('BasicPayAmount').value = '10,99'
                }
            }
            else if (grp.toString().trim() == 'ADVANCED') {
                if (document.getElementById('BasicPayAmount')) {
                    document.getElementById('BasicPayAmount').value = ''
                }
            }

        }

    }

    function setPayrollCategory() {
        //////////
        //Sets PayScaleGroup, OneIKEABonusLevel, BenefitLevel from predefined_payroll_category_outs.XML and selected Job title and payroll category
        //////////


        var sal = '';
        if (document.getElementById('PayrollCategory')) {
            sal = document.getElementById('PayrollCategory').value;
            if (sal == '') {
                sal = $("#PayrollCategory option:selected").text();
            }
        }

        var bus = '';
        if (document.getElementById('NewBusinessUnit')) {
            bus = $("#NewBusinessUnit option:selected").text();
        }



        if (sal.toString().trim() == 'Salaried' | sal.toString().trim() == 'Salaried Management' | sal.toString().trim() == 'Salaried Senior Management') {
            document.getElementById('AllowancesAmountUnits').value = '';
            
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';


            path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_payroll_category_IE_outs.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setPayrollCategoryXML,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });


        }
        else if (sal == 'Hourly') {

            if (document.getElementById('PayScaleGroup')) {
                document.getElementById('PayScaleGroup').value = '';
            }
            if (document.getElementById('BenefitLevel')) {
                document.getElementById('BenefitLevel').value = '';
            }

            if (document.getElementById('PayScaleGroup')) {

                document.getElementById('PayScaleGroup').value = 'STARTER';

            }
        }
    }


    function setPayrollCategoryXML(xml) {
        //////////
        //Sets PayScaleGroup, OneIKEABonusLevel, BenefitLevel from predefined_payroll_category_outs.XML and selected Job title and payroll category
        //////////
        
        var show = ''
        var show2 = ''
        var show3 = ''
        var res = '0';

        var dep = '';
        if (document.getElementById('JobTitle')) {
            dep = document.getElementById('JobTitle').value;
        }
        var bus = '';
        if (document.getElementById('NewBusinessUnit')) {
            bus = $("#NewBusinessUnit option:selected").text();
        }


        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';
            show2 = '';
            show3 = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show1').text();
            show2 = $sel.find('show2').text();
            show3 = $sel.find('show3').text();


            if (department.toString().trim() == dep.toString().trim()) {


                if (show != '') {
                    var n = show.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('PayScaleGroup')) {

                            document.getElementById('PayScaleGroup').value = show;

                            //$('#PayScaleGroup option[value="' + show + '"]').prop('selected', true);

                        }
                    }
                    else {
                        var res = show.substring(0, n);
                        if (document.getElementById('PayScaleGroup')) {
                            document.getElementById('PayScaleGroup').value = res;
                            //$('#PayScaleGroup option[value="' + res + '"]').prop('selected', true);
                        }
                    }
                    res = '1';
                }

                //alert(show2);
                if (show2 != '') {
                    var n = show2.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('OneIKEABonusLevel')) {
                            document.getElementById('OneIKEABonusLevel').value = show2;
                            //document.getElementById('OneIKEABonusLevel').value = show2;
                        }
                    }
                    else {
                        var res = show2.substring(0, n);
                        if (document.getElementById('OneIKEABonusLevel')) {
                            document.getElementById('OneIKEABonusLevel').value = res;
                            //document.getElementById('OneIKEABonusLevel').value = res;
                        }
                    }
                    res = '1';
                }
                
                if (show3 != '') {
                    var n = show3.indexOf(",");
                    if (n == -1) {
                        if (document.getElementById('BenefitLevel')) {
                            document.getElementById('BenefitLevel').value = show3;
                            //document.getElementById('BenefitLevel').value = show3;
                        }
                    }
                    else {
                        var res = show3.substring(0, n);
                        if (document.getElementById('BenefitLevel')) {
                            document.getElementById('BenefitLevel').value = res;
                            //document.getElementById('BenefitLevel').value = res;
                        }
                    }
                    res = '1';
                }

                if (res == 1) {
                    return;
                }
            }
        });
    }

    $('#NewDepartment').change(function () {
        //////////
        //Change function for Department
        //////////



        //Cost centre department
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_costcentre_department_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setCostCentre,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


        //Line manager department
        path = '';
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_department_outs.xml'
        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setLineManager,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


        //Line manager job title
        path = '';
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        //path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_jobtitle_outs.xml'
        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_department_jobtitle_IE_outs.xml'
        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setLineManagerJobTitle,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });






        //Department /Tec approver
        path = '';
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        //var n = path.indexOf("localhost")
        //if (n == -1) {
        //    path = path + 'ect/FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
        //}
        //else {
        //    path = path + 'FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
        //}

        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_department_tecapprover_outs.xml'
        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setTecApprover,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });

        //Line manager jobtitle
        path = '';
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';


        path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_department_jobtitle_IE_outs.xml'

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: setLineManagerJob,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


    });


    function setLineManagerJob(xml) {
        //////////
        //addTecProvidersXML:
        //Adds tec providers on selected businessunit
        //////////

        var show = ''

        var dep = '';
        if (document.getElementById('NewDepartment')) {
            dep = $("#NewDepartment option:selected").text();
        }


        $(xml).find('dependent').each(function () {

            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department == dep) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {

                        $('#ManagersJobTitle')[0].selectize.setValue(show);
                    }
                    else {
                        var res = show.substring(0, n);

                        $('#ManagersJobTitle')[0].selectize.setValue(res);
                    }
                    return;
                }
            }
        });

    }

    function setTecApprover(xml) {
        //////////
        //Sets Tec Approver from predefined_department_tecapprover_outs.XML and selected department
        //////////
        var show = ''


        var dep = '';
        if (document.getElementById('NewDepartment')) {
            dep = $("#NewDepartment option:selected").text();
        }
        if (document.getElementById('TECApprover')) {
            $('#TECApprover')[0].selectize.setValue('');
        }
        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department == dep) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {
                        if (document.getElementById('TECApprover')) {
                            $('#TECApprover')[0].selectize.setValue(show);
                        }
                    }
                    else {
                        var res = show.substring(0, n);
                        if (document.getElementById('TECApprover')) {
                            $('#TECApprover')[0].selectize.setValue(res);
                        }
                    }
                    return;
                }
                else {
                    if (document.getElementById('ReportsToLineManager')) {
                        if (document.getElementById('ReportsToLineManager').value != '');
                        {
                            var test = document.getElementById('ReportsToLineManager').value;
                            $('#TECApprover')[0].selectize.setValue(test);
                        }
                    }
                }
            }
        });
    }

    function setLineManagerJobTitle(xml) {
        //////////
        //Sets Line manager job title from predefined_linemanager_jobtitle_outs.XML and selected line manager
        //////////

        var show = ''
        //var dep = $("#ReportsToLineManager option:selected").text();
        if (document.getElementById('ManagersJobTitle')) {
            $('#ManagersJobTitle')[0].selectize.setValue('');
        }
        var dep = '';
        //if (document.getElementById('ReportsToLineManager')) {
        //    dep = document.getElementById('ReportsToLineManager').value;
        //}
        if (document.getElementById('Department')) {
            dep = $("#NewDepartment option:selected").text();
        }

        $(xml).find('dependent').each(function () {


            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department == dep) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {
                        if (document.getElementById('ManagersJobTitle')) {
                            $('#ManagersJobTitle')[0].selectize.setValue(show);
                        }
                    }
                    else {
                        var res = show.substring(0, n);
                        if (document.getElementById('ManagersJobTitle')) {
                            $('#ManagersJobTitle')[0].selectize.setValue(res);
                        }
                    }
                    return;
                }
            }
        });
    }

    function setLineManager(xml) {
        //////////
        //Sets Line manager from predefined_linemanager_department_outs.XML and selected department
        //////////

        var show = ''
        if (document.getElementById('ReportsToLineManager')) {
            $('#ReportsToLineManager')[0].selectize.setValue('');
        }
        var dep = '';
        if (document.getElementById('NewDepartment')) {
            dep = $("#NewDepartment option:selected").text();
        }
        $(xml).find('dependent').each(function () {

            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {
                        if (document.getElementById('ReportsToLineManager')) {
                            $('#ReportsToLineManager')[0].selectize.setValue(show);
                        }
                    }
                    else {
                        var res = show.substring(0, n);
                        if (document.getElementById('ReportsToLineManager')) {
                            $('#ReportsToLineManager')[0].selectize.setValue(res);
                        }
                    }
                    return;
                }
            }
        });
    }

    function setCostCentre(xml) {
        //////////
        //Sets cost centre from predefined_costcentre_department_outs.XML and selected department
        //////////
        var show = ''
        if (document.getElementById('HomeCostCentre')) {
            $('#HomeCostCentre')[0].selectize.setValue('');
        }



        var dep = '';
        if (document.getElementById('NewDepartment')) {
            dep = $("#NewDepartment option:selected").text();
        }


        $(xml).find('dependent').each(function () {

            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department == dep) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {

                        if (document.getElementById('HomeCostCentre')) {

                            $('#HomeCostCentre')[0].selectize.setValue(show);
                        }
                    }
                    else {
                        var res = show.substring(0, n);

                        if (document.getElementById('HomeCostCentre')) {
                            $('#HomeCostCentre')[0].selectize.setValue(res);
                        }
                    }
                    return;
                }
            }
        });
    }



    $('#NewBusinessUnit').change(function () {
        //////////
        //Sets Primary site to Business Unit
        //////////
        //alert();

        setTecApprover();
        setPayrollCategory();
        setBasicPayAmount();
        setAllowanceType2();
        setAllowanceType();
        setAllowanceType3();

        var value = $(this).val();
        if ($('#NewBusinessUnit')[0].selectize) {
            var selectedText = $('#NewBusinessUnit')[0].selectize.getItem(value).text();

            if ($('#PrimarySite')[0].selectize) {
                $('#PrimarySite')[0].selectize.setValue(selectedText);
            }
            else {
                $('#PrimarySite').val(selectedText);
            }
        }
        else {
            var selectedText = $('#NewBusinessUnit').find('option:selected').text();
            if ($('#PrimarySite')[0].selectize) {
                $('#PrimarySite')[0].selectize.setValue(selectedText);
            }
            else {
                var selectedText = $('#NewBusinessUnit').find('option:selected').text();
                $('#PrimarySite').val(selectedText);
            }
        }
    });

</script>
