@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

<div class="tab-pane" id="Basic">
    <div class="span12">
        <table class="table">
            <tbody>       
            <tr>
                <td class="tdstrong">@Model.Label("BasicTerminationType")</td>
                <td>
                    @Model.Element("BasicTerminationType")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("LastDayOfEmployment")</td>
                <td>
                    @Model.Element("LastDayOfEmployment")
                    <div id="notice_HiringDate" style="display:none;" class="notice">
                            @Model.Translate("The date you've entered is in the past. Are you sure you want to backdate Last Day of Employment date?")
                        </div>
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("LastDayWorked")</td>
                <td>
                    @Model.Element("LastDayWorked")
                    <div id="notice_LastDayWorked" style="display:none;" class="notice">
                            @Model.Translate("The date you've entered is in the past. Are you sure you want to backdate Last Day Worked?")
                        </div>
                </td>
            </tr>         

            <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("CDS")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("LockCDSAccountFrom")</td>
                <td>
                    @Model.Element("LockCDSAccountFrom")</td>
            </tr>         


                </tbody>
        </table>
    </div>
</div>

<script>
    

    function selectIndexChangeTerminationType() {
        if (document.getElementById('CompleteTerminationType')) {
            document.getElementById('CompleteTerminationType').value = document.getElementById('BasicTerminationType').value;


            path = '';
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';


            //path = site.baseUrl + '/FormLibContent/Xmls/Ireland/Templates/predefined_linemanager_jobtitle_outs.xml'
            path = site.baseUrl + '/FormLibContent/Xmls/UnitedKingdom/Templates/predefined_TerminationReason.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setTerminationReason,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });



        }
    }

    function setTerminationReason(xml) {


        var show = ''

        var dep = '';
        if (document.getElementById('CompleteTerminationType')) {
            dep = document.getElementById('CompleteTerminationType').value;
        }
        var temp = '';

        $(xml).find('dependent').each(function () {


            var $sel = $(this);

            show = '';


            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {

                    var optionsarray = show.split(',');
                    var seloption = "";

                    $('#TerminationReason')
                        .find('option')
                        .remove();



                    seloption = '<option value="' + temp + '">' + temp + '</option>';

                    $.each(optionsarray, function (i) {
                        seloption += '<option value="' + optionsarray[i] + '">' + optionsarray[i] + '</option>';
                    });
                    $('#TerminationReason').append(seloption);




                    return;
                }


            }
        });

    }

    document.getElementById('BasicTerminationType').onchange = selectIndexChangeTerminationType;
    document.getElementById('LastDayWorked').onchange = LastDayWorkedNotices;
    


    
    

    $('#LastDayOfEmployment').change(function () {
        LastDayOfEmploymentNotices();
        LastDayWorkedNotices();
        if (document.getElementById('TerminationPaymentDate')) {
            TerminationPaymentDateNotices();
        }
        
    });


    function LastDayOfEmploymentNotices()
    {
        var noticeHiringDate = $('#notice_HiringDate');
        var endDate = $('#LastDayOfEmployment').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dendDate = APIGlobal.DateTime.parseDate(endDate, format);
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
        noticeHiringDate.hide();
        


        if (dendDate.valueOf() < now.valueOf())
            noticeHiringDate.show();
        $('#LastDayWorked').val(endDate);

        if (document.getElementById('TerminationPaymentDate')) {
            TerminationPaymentDateNotices();
        }

        if (document.getElementById('DeductionDate'))
        {
            $('#DeductionDate').val(endDate);
        }
     
    }

    function LastDayWorkedNotices()
    {
        var noticeLastDayWorked = $('#notice_LastDayWorked');

        if (document.getElementById('LastDayWorked')) {
            var startDate = $('#LastDayWorked').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dstartDate = APIGlobal.DateTime.parseDate(startDate, format);
            var nowTemp = new Date();
            var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
            noticeLastDayWorked.hide();

            if (dstartDate.valueOf() < now.valueOf())
                noticeLastDayWorked.show();
        }
    }


    var LastDayOfEmployment = $('#date_LastDayOfEmployment');
    LastDayOfEmployment.not(".disabled").datepicker()
            .on('changeDate', function (e) {
                
                LastDayOfEmploymentNotices();
                LastDayWorkedNotices();

            });

    var LastDayWorked = $('#date_LastDayWorked');
    LastDayWorked.not(".disabled").datepicker()
            .on('changeDate', function (e) {

                LastDayWorkedNotices();
            });

    

    function selectIndexChangeProbationPeriod() {
        var probitionEndDate = document.getElementById('ProbationEndDate');
        if ((this.options[this.selectedIndex].value == 'Not Applicable') || (this.options[this.selectedIndex].value == 'No')) {
            probitionEndDate.disabled = true;
        } else {
            probitionEndDate.disabled = false;
            var validFrom = document.getElementById('ChangeValidFrom');
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var date = APIGlobal.DateTime.parseDate(validFrom.value, format);
            date.setMonth(date.getMonth() + 2);

            probitionEndDate.value = APIGlobal.DateTime.formatDate(date, format);
        }
    }



</script>