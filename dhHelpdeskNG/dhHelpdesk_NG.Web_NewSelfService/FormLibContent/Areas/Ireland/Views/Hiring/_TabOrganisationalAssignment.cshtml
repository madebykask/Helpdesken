@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    const string CompanyName = "IKEA Distribution Services Limited";
    const string EmployeeCategory = "Permanent";
    const string PartTime = "Part Time";
    const string FullTime = "Full Time";
    const string ZeroHours = "Zero Hours";
    const string DefaultProbationPeriod = "Yes";
}

<div class="tab-pane" id="OrganisationalAssignment">
    <div class="span5">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Organisation")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OrganisationCountry")</td>
                    <td>@Model.Element("OrganisationCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Company")</td>
                    <td>@Model.Element("Company")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BusinessUnit")</td>
                    <td>@Model.Element("BusinessUnit")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Department")</td>
                    <td>@Model.Element("Department")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ServiceArea")</td>
                    <td>@Model.Element("ServiceArea")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCostCentre")</td>
                    <td>@Model.Element("HomeCostCentre")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Job")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("JobTitle")</td>
                    <td>@Model.Element("JobTitle")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewPosition")</td>
                    <td>@Model.Element("NewPosition")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ReportsToLineManager")</td>
                    <td>@Model.Element("ReportsToLineManager")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ManagersJobTitle")</td>
                    <td>@Model.Element("ManagersJobTitle")</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Employment Conditions")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmploymentCategory")</td>
                    <td>@Model.Element("EmploymentCategory")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractEndDate")</td>
                    <td>@Model.Element("ContractEndDate")</td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("ContractedHours")</td>
                    <td>@Model.Element("ContractedHours")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DaysPerWeek")</td>
                    <td>@Model.Element("DaysPerWeek")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractType")</td>
                    <td>@Model.Element("ContractType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationPeriod")</td>
                    <td>@Model.Element("ProbationPeriod")</td>
                </tr>
                <tr>
                    <td id="probationDate" class="tdstrong">@Model.Label("ProbationEndDate")</td>
                    <td>@Model.Element("ProbationEndDate")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("CDS")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PrimarySite")</td>
                    <td>@Model.Element("PrimarySite")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TECApprover")</td>
                    <td>@Model.Element("TECApprover")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HelpDesk")</td>
                    <td>@Model.Element("HelpDesk")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PreviousBusinessUnit")</td>
                    <td>@Model.Element("PreviousBusinessUnit")</td>
                </tr>
            </tbody>
        </table>
    </div>

</div>

<script>

    $(function () {

        function setProbationEndDate(value) {
            var probationEndDate = $('#ProbationEndDate');

            if (value == '@DefaultProbationPeriod') {
                var sStart = $('#ContractStartDate').val();
                var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
                var dStart = APIGlobal.DateTime.parseDate(sStart, format);

                var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 6, dStart.getDate(), 0, 0, 0, 0);
                var visibleDate = APIGlobal.DateTime.formatDate(endDate, format);
                probationEndDate.val(visibleDate.toString());
            }
            else {
                probationEndDate.val("");
            }
        };

        function setEmployeeBehavior(value) {
            if (value == '@EmployeeCategory') {
                $('#date_ContractEndDate').datepicker("destroy");
                $('#date_ContractEndDate').addClass("disabled");
                $('#ContractEndDate').prop('disabled', true);
            }
            else {
                $('#date_ContractEndDate').datepicker();
                $('#ContractEndDate').prop('disabled', false);
                $("#ContractEndDate").removeClass("disabled");
            }
        }

        if ($('EmploymentCategory').val() == '@EmployeeCategory') {
            $('#date_ContractEndDate').datepicker("destroy");
            $('#date_ContractEndDate').addClass("disabled");
            $('#ContractEndDate').prop('disabled', true);
        }

        // setEmployeeBehavior($('#EmploymentCategory').val());
        setProbationEndDate($('#ProbationPeriod').val());


        $('#EmploymentCategory').change(function () {
            setEmployeeBehavior($(this).val());
        });

        $('#ContractedHours').on("input", function () {
            var value = $(this).val();

            if (value >= 16 && value <= 38) {
                $('#ContractType option[value="' + '@PartTime' + '"]').prop('selected', true);
            }
            else if (value >= 39 && value <= 40) {
                $('#ContractType option[value="' + '@FullTime' + '"]').prop('selected', true);
            }
            else if (value == "0") {
                $('#ContractType option[value="' + '@ZeroHours' + '"]').prop('selected', true);
            }
            else {
                $('#ContractType option:not([value])').prop('selected', true);
            }
        });

        $('#ProbationPeriod').change(function () {
            setProbationEndDate($(this).val());
        });

        $('#ReportsToLineManager').change(function () {
            $('#TECApprover').val($(this).val());
        });

        $('#BusinessUnit').change(function () {
            $('#PrimarySite').val($(this).val());
        });

        //var startDate = $('#ContractStartDate').val();
        //var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        //var dStart = APIGlobal.DateTime.parseDate(startDate, format);
        //var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
        //$('#date_ContractEndDate').not(".disabled").datepicker(
        //{
        //    onRender: function (ev) {
        //        return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
        //    }
        //});

        $('#date_ContractStartDate').datepicker().on('changeDate', function (ev) {
            //var sStart = $('#ContractStartDate').val();
            //var sEnd = $('#ContractEndDate').val();
            //var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            //var dStart = APIGlobal.DateTime.parseDate(sStart, format);
            //var dEnd = APIGlobal.DateTime.parseDate(sEnd, format);

            //var probationPeriod = $('#ProbationPeriod');
            //var probationEndDate = $('#ProbationEndDate');

            //var probationDate = $('#date_ProbationEndDate').datepicker("destroy");
            //var noticeProbationDate = $('#probationDate');


            //if (APIGlobal.DateTime.dateInRange(dStart, dEnd, 6)) {
            //    probationPeriod.val("Yes");
            //    noticeProbationDate.show();
            //    probationDate.show();

            //    var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 2, dStart.getDate(), 0, 0, 0, 0);
            //    var visibledaate = APIGlobal.DateTime.formatDate(endDate, format);
            //    probationEndDate.val(visibledaate.toString());
            //} else {
            //    probationPeriod.val("No");

            //    noticeProbationDate.hide();
            //    probationDate.hide();
            //    probationEndDate.val("");
            //}
            setProbationEndDate($('#ProbationPeriod').val());
        });
    });

</script>
