@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;

@{
    Layout = null;
    Model.Language = "nl";
}
<!DOCTYPE html>
<html>
<body>
    <div>
        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <strong>ARBEIDSOVEREENKOMST</strong><br />
            <br />
        </p>
        <p style="text-align: left;font-family: Verdana; font-size: 11px;">
            Tussen IKEA B.V., hierna te noemen de werkgever, en
            <br />
            <br />
        </p>
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            @if (!string.IsNullOrEmpty(Model.GetAnswer("Initials")))
            {
                <tr>
                    <td width="30%" style="text-align: left;">Voorletters</td>
                    <td width="70%" style="text-align: left;">: @Model.GetAnswer("Initials")</td>
                </tr>
            }
            <tr>
                <td style="text-align: left;">Roepnaam</td>
                <td style="text-align: left;">: @Model.GetAnswer("FirstName")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Achternaam</td>
                <td style="text-align: left;">: @Model.GetAnswer("Prefixes") @Model.GetAnswer("LastName")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Adres</td>
                <td style="text-align: left;">: @Model.GetAnswer("PermanentAddressLine1") @Model.GetAnswer("PermanentAddressLine2") @Model.GetAnswer("PermanentAddressLine3")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Postcode /  woonplaats</td>
                <td style="text-align: left;">: @Model.GetAnswer("PermanentPostalCode") @Model.GetAnswer("PermanentCity")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Geboortedatum</td>
                <td style="text-align: left;">: @Model.GetAnswer("DateOfBirth")</td>
            </tr>
        </table>
        <p style="text-align: left;font-family: Verdana; font-size: 11px;">
            <br />
            Hierna te noemen werknemer, wordt een arbeidsovereenkomst afgesloten waarvan de voorwaarden als volgt luiden:     
           <br />
        </p>

        @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();


            var brText = "<br /><br />";

            //1
            string text1 = "Met ingang van {0} treedt de werknemer bij de werkgever in dienst.";
            list.Add(new PdfListItem { Text = string.Format(text1, Model.GetAnswer("ContractStartDate")) });

            //2
            string text2 = "De werknemer wordt aangesteld in de functie van {0} bij de vestiging {1}. Deze functie is ingedeeld in functiegroep {2}. Tevens kan de werknemer op verzoek van de leidinggevende ingezet worden op andere afdelingen binnen IKEA.";
            list.Add(new PdfListItem { Text = string.Format(text2, Model.GetAnswer("LocalJobTitle"), Model.GetAnswer("BusinessUnit"), Model.GetAnswer("PayScaleLevel")) });


            if ((Model.GetAnswer("BusinessUnit").ToLower() == "Store Amsterdam 088".ToLower() || Model.GetAnswer("BusinessUnit").ToLower() == "Store Heerlen 089".ToLower() || Model.GetAnswer("BusinessUnit").ToLower() == "Store Barendrecht 274".ToLower())
                   && Model.GetAnswer("NewPosition") == "New Position for VAP store?")
            {

                //2+

                string text2add = "De bovenstaande functie is specifiek voor de vestiging {0} en valt buiten de kaders van het functiegebouw van IKEA B.V. Op het moment dat VAPS constructie van IKEA {0} vervalt en IKEA {0} weer een reguliere vestiging wordt, zal dit consequenties hebben voor deze functie. Met jou zal dan moeten worden gesproken over herplaatsing in een andere functie behorende bij het functiegebouw van IKEA B.V.";
                pdfList.Add(new PdfListItem { Text = string.Format(text2add, Model.GetAnswer("BusinessUnit")) });
                list[list.Count - 1].SubList = pdfList;
            }


            if (Model.GetAnswer("EmploymentCategory").ToLower() == "Permanent".ToLower())
            {
                //3
                string text3a = "Deze arbeidsovereenkomst wordt afgesloten voor onbepaalde tijd.";
                list.Add(new PdfListItem { Text = text3a });
            }


            if (Model.GetAnswer("EmploymentCategory").ToLower() == "Temporary".ToLower())
            {
                //3
                string text3b = "Deze arbeidsovereenkomst wordt afgesloten voor bepaalde tijd. Looptijd van het contract is van {0} tot en met {1} en eindigt derhalve van rechtswege aan het einde van de overeengekomen periode, zonder dat hiervoor enige opzegging is vereist.";
                list.Add(new PdfListItem { Text = string.Format(text3b, Model.GetAnswer("ContractStartDate"), Model.GetAnswer("ContractEndDate")) });
            }


            //4
            string text4 = "Partijen zijn gerechtigd om de arbeidsovereenkomst tussentijds tegen het einde van de kalendermaand op te zeggen met inachtneming van de wettelijke opzegtermijn.";
            list.Add(new PdfListItem { Text = text4 });


            //5
            string text5 = "Het dienstverband tussen werkgever en werknemer eindigt in ieder geval van rechtswege bij het bereiken van de pensioengerechtigde leeftijd door werknemer.";
            list.Add(new PdfListItem { Text = text5 });


            if (Model.GetAnswer("ProbationPeriod").ToLower() == "Yes".ToLower())
            {
                //6
                string text6 = "De eerste twee maanden van het dienstverband gelden als proeftijd. Tijdens de proeftijd hebben beide partijen het recht om het dienstverband met onmiddellijke ingang op te zeggen en te beëindigen.";
                list.Add(new PdfListItem { Text = text6 });
            }

            //7
            string text7 = "Het betreft een {0} dienstverband. Het gemiddeld te werken uren per week bedraagt {1}, volgens rooster. De werknemer behoort tot de categorie {2}. De werknemer is conform de IKEA CAO flexibel in tijd en uren in te roosteren tijdens weekdagen, zaterdagen en op zon- en feestdagen en verklaart zich hiermee uitdrukkelijk akkoord.";
            list.Add(new PdfListItem { Text = string.Format(text7, Model.Translate(Model.GetAnswer("ContractType"), Model.Language).ToLower(), Model.GetAnswer("ContractedHours"), NetherlandsPdfPage.GetPayRollCategoryText(Model.GetAnswer("PayrollCategory"), Model)) });

            //8
            if (Model.GetAnswer("ContractType").ToLower() == "Full Time".ToLower())
            {
                string text8 = "Het salaris bedraagt € {0} bruto per maand. {1} De salarisbetalingen vinden telkens aan het einde van de kalendermaand plaats.";
                list.Add(new PdfListItem { Text = string.Format(text8, @Model.GetAnswer("BasicPay"), brText) });
            }

            //8 START
            if (Model.GetAnswer("ContractType").ToLower() == "Part Time".ToLower())
            {
                string text8 = "Het salaris bedraagt € {0} bruto per uur. {1} De salarisbetalingen vinden telkens aan het einde van de kalendermaand plaats.";
                list.Add(new PdfListItem { Text = string.Format(text8, @Model.GetAnswer("BasicPayAmount"), brText) });
            }

            //SUBLIST

            //8b

            pdfList = new List<PdfListItem>();

            if (Model.GetAnswer("TypeOfBenefit").ToLower() == "Company Car".ToLower() | Model.GetAnswer("TypeOfBenefit2").ToLower() == "Company Car".ToLower() | Model.GetAnswer("TypeOfBenefit3").ToLower() == "Company Car".ToLower())
            {
                string text8b = "Werknemer heeft recht op gebruik van een lease-auto categorie {0}. {1}";

                //Need to do this check because you can add 3 benefits

                if (Model.GetAnswer("TypeOfBenefit").ToLower() == "Company Car".ToLower())
                {
                    string TypeOfCar = Model.Translate(Model.GetAnswer("TypeOfCar").ToLower(), Model.Language);
                    pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8b, Model.GetAnswer("Category"), NetherlandsPdfPage.FirstLetterToUpperCase(TypeOfCar)) });
                }

                if (Model.GetAnswer("TypeOfBenefit2").ToLower() == "Company Car".ToLower())
                {
                    string TypeOfCar2 = Model.Translate(Model.GetAnswer("TypeOfCar2").ToLower(), Model.Language);
                    pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8b, Model.GetAnswer("Category2"), NetherlandsPdfPage.FirstLetterToUpperCase(TypeOfCar2)) });
                }


                if (Model.GetAnswer("TypeOfBenefit3").ToLower() == "Company Car".ToLower())
                {
                    string TypeOfCar3 = Model.Translate(Model.GetAnswer("TypeOfCar3").ToLower(), Model.Language);
                    pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8b, Model.GetAnswer("Category3"), NetherlandsPdfPage.FirstLetterToUpperCase(TypeOfCar3)) });
                }

            }
            else
            {
                string text8b = list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + "De tegemoetkoming in de reiskosten wordt berekend conform de geldende IKEA CAO, artikel 29.";
                pdfList.Add(new PdfListItem { Text = text8b });
            }

            //8c
            if (Model.GetAnswer("PayrollCategory").ToLower() == "MT/Dep/SM".ToLower() && (Model.GetAnswer("PayScaleLevel") == "9" || Model.GetAnswer("PayScaleLevel") == "10" || Model.GetAnswer("PayScaleLevel") == "11" || Model.GetAnswer("PayScaleLevel") == "12"))
            {
                string text8c = list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + "Als tegemoetkoming in kosten voor representatie en telefoongebruik  ontvang je een algemene onkostenvergoeding van EUR 50,- bruto per maand. Dit is conform CAO artikel 28A.";
                pdfList.Add(new PdfListItem { Text = text8c });
            }

            //8d

            if (Model.GetAnswer("TypeOfBenefit") == "Salary Revision" | Model.GetAnswer("TypeOfBenefit2") == "Salary Revision" | Model.GetAnswer("TypeOfBenefit3") == "Salary Revision")
            {
                //Need to do this check because you can add 3 benefits

                string text8d = "Eerste salarisrevisie: {0}.";

                if (Model.GetAnswer("TypeOfBenefit").ToLower() == "Salary Revision".ToLower())
                {
                    if (!string.IsNullOrEmpty(Model.GetAnswer("NextRevisionDate")))
                    {

                        pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8d, Model.GetAnswer("NextRevisionDate")) });

                    }
                }

                if (Model.GetAnswer("TypeOfBenefit2").ToLower() == "Salary Revision".ToLower())
                {
                    if (!string.IsNullOrEmpty(Model.GetAnswer("NextRevisionDate2")))
                    {

                        pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8d, Model.GetAnswer("NextRevisionDate2")) });
                    }
                }

                if (Model.GetAnswer("TypeOfBenefit3").ToLower() == "Salary Revision".ToLower())
                {
                    if (!string.IsNullOrEmpty(Model.GetAnswer("NextRevisionDate3")))
                    {

                        pdfList.Add(new PdfListItem { Text = string.Format(list.Count.ToString() + NetherlandsPdfPage.GetLetter(pdfList.Count) + text8d, Model.GetAnswer("NextRevisionDate3")) });
                    }
                }

            }

            //lägg till i sublist (vet att b alltid kommer läggas till så behöver inte kolla null
            list[list.Count - 1].SubList = pdfList;

            //SUBLIST END

            //8 END

            //9
            string text9 = "Op deze arbeidsovereenkomst is het pensioenreglement van toepassing als bedoeld in artikel 10 van de IKEA CAO.";
            list.Add(new PdfListItem { Text = text9 });


            //10
            if (Model.GetAnswer("BusinessUnit").ToLower() == "CCCN".ToLower())
            {
                string text10 = "IKEA beschikt over faciliteiten om telefoongesprekken die worden gevoerd tussen klanten en medewerkers van het CCCN op te nemen. Deze gesprekken zijn bestemd voor trainingsdoeleinden om de medewerkers van IKEA te kunnen trainen. Werknemer verklaart zich door ondertekening van dit contract ermee bekend en akkoord dat IKEA van deze opname faciliteiten gebruik maakt.";
                list.Add(new PdfListItem { Text = text10 });
            }

            //11
            if (Model.GetAnswer("DocumentType").ToLower() == "Work Permit".ToLower())
            {
                string text11 = "Medewerkers die op basis van een verblijfsvergunning in Nederland verblijvenen bij wie arbeid (tijdelijk) is toegestaan, verplichten zich om bij iedere wijziging in hun verblijfsstatus (verblijfsvergunning) en/of werkstatus (werkvergunning) IKEA hierover te informeren.";
                list.Add(new PdfListItem { Text = text11 });
            }

            //12 START
            string text12 = "Op deze arbeidsovereenkomst zijn de van tijd tot tijd geldende IKEA CAO, de  IKEA Group Code of Conduct en de regels die zijn opgenomen in Mijn IKEA van toepassing. De IKEA CAO en de IKEA Group Code of Conduct zijn te raadplegen op en downloaden via de internetsite <a href=\"http://www.ico-worker.com/nl\" target=\"_blank\" title=\"http://www.ico-worker.com/nl\" style=\"text-decoration: underline; color: blue;\">www.ico-worker.com/nl</a>. De inloggegevens voor deze site vind je in de bijgesloten brief. Op verzoek van de werknemer stuurt IKEA een digitale versie per e-mail of een geprinte versie per gewone post toe van de toepasselijke regels. Het boekje Mijn IKEA ontvang je tegelijk met deze arbeidsovereenkomst.";


            if ((Model.GetAnswer("PayScaleType").ToLower() == "IKEA NL CAO".ToLower() | Model.GetAnswer("PayScaleType").ToLower() == "IKEA NL geen CAO - out of scope".ToLower()) && ((Model.GetAnswer("PayScaleLevel") == "14" || Model.GetAnswer("PayScaleLevel") == "15")))
            {

                text12 += brText + "Hoewel de IKEA CAO niet op deze arbeidsovereenkomst van toepassing is, worden de artikelen met de volgende onderwerpen uit de laatst overeengekomen IKEA CAO door ondertekening van deze arbeidsovereenkomst op de arbeidsovereenkomst van toepassing en worden die geacht daarvan onderdeel uit te maken, ook als de looptijd van deze CAO is verstreken en nog geen nieuwe CAO tot stand is gekomen:";
                text12 += brText + "- Ontwikkel- en beoordelingscyclus (II, artikel 4)";
                text12 += "<br />- Beloningssysteem (II, artikel 5)";
                text12 += "<br />- Personeelskorting (II, artikel 9)";
                text12 += "<br />- Pensioen (II artikel 10)";
                text12 += "<br />- Vergoedingen incidentele dienstreizen binnen- en buitenland (II, artikel 30)";
                text12 += "<br />- Algemeen (wettelijk) verlof (VI, artikel 41)";
                text12 += "<br />- Bijzonder verlof met behoud van salaris (VI, artikel 42)";
                text12 += "<br />- Gezondheidsbeleid (VII, artikel 45 t/m 52)";
                text12 += "<br />- Verzekeringen (VIII artikel 55 t/m 59).";

                text12 += brText + "De tussen haakjes vermelde artikelen verwijzen naar de desbetreffende bepalingen van de IKEA CAO zoals deze luidde ten tijde van het aangaan van de arbeidsovereenkomst. Indien een of meer van de bovengenoemde bepalingen of de nummering ervan in een latere IKEA CAO wijzigen, treden deze gewijzigde bepalingen in de plaats van die bepalingen.";
            }


            list.Add(new PdfListItem { Text = text12 });

            //12 END

            //13
            int PayScaleLevel = 0;

            if (Model.GetAnswer("PayScaleLevel").Length > 0 && Model.GetAnswer("PayScaleLevel").ToLower() != "N/A".ToLower())
            {
                PayScaleLevel = int.Parse(Model.GetAnswer("PayScaleLevel"));

                if (PayScaleLevel >= 14)
                {
                    list.Add(new PdfListItem { Text = "Werknemer gaat akkoord met een mogelijk volgende loopbaanstap welke uitzending naar het buitenland zou kunnen betekenen. Plaatsing geschiedt in overleg met werknemer." });
                }
                
            }
        }

            @if (list.Count > 1)
            {
                for (int i = 0; i < list.Count; i++)
                { 
            <br />                                        
        <p style="text-align: left;font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">@(i + 1). @Html.Raw(list[i].Text)</p>
                    if (list[i].SubList != null && list[i].SubList.Count > 0)
                    {
                        foreach (var item in list[i].SubList)
                        {
        <br />
        <p style="text-align: left;font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">@item.Text </p>
                        }
                    }
                }
            }
            else
            {
                for (int i = 0; i == list.Count - 1; i++)
                {
        <p style="font-family: Verdana; font-size: 11px;">@Html.Raw(list[i])</p>
                }
            }
    
        
@*        <newpage />*@


        

     @*   <p class="lastparagraph" style="text-align: left;font-family: Verdana; font-size: 11px;">
            <br />
            <br />
            A. De werknemer verklaart hiermee voorafgaande aan ondertekening van de arbeidsovereenkomst kennis te hebben genomen van de IKEA CAO, de IKEA Group Code of Conduct en de regels in Mijn IKEA en verder met het bovenstaande akkoord te gaan.
            <br />
            <br />
        </p>*@
        <endpage />



        
       @* @if (Model.GetAnswer("BusinessUnit") == "Store Amsterdam 088")
        {
            <newpage />
            <text>
        
        <div>
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Toelichting op salarisbetaling bij IKEA</strong><br />
            <br />
        </p>
        <p style="font-family: Verdana; font-size: 11px;">
            Bij IKEA maken we onderscheid tussen de salarisbetaling van een uurloon parttimer en een maandloon parttimer/fulltimer. 
         <br />
            <br />
        </p>
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Uurloon parttimers</strong> krijgen maandelijks de gewerkte uren van de vorige maand uitbetaald. Alleen in je eerste maand van je dienstverband ontvang je salaris gebaseerd op je contracturen; je ontvangt dan salaris over uren die je nog niet gewerkt hebt. Pas in de daaropvolgende maand kan IKEA het aantal daadwerkelijke gewerkte uren plus toeslagen en reiskosten uit je eerste gewerkte maand berekenen en uitbetalen.
         <br />
            <br />
        </p>
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Maandloonparttimers/fulltimers</strong> ontvangen de contracturen van de <u><i>lopende maand</i></u> + reiskosten en eventuele toeslagen van de <u><i>voorgaande maand</i></u>. 
             <br />
            <br />
        </p>
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Wijziging contracturen</strong><br />
            Als je contracturen wijzigen (je gaat meer of minder uren per week werken), zal je salaris bij je eerstvolgende salarisbetaling ook wijzigen. Ga je meer werken dan worden de extra contracturen op de eerstvolgende salarisbetaling uitbetaald, maar ga je minder werken dan worden de verlaagde contracturen juist in mindering gebracht. 
             <br />
            <br />
            Hieronder kan je in 2 voorbeeldberekeningen zien hoe de uitbetaling van je contracturen wordt berekend:
                <br />
            <br />
        </p>
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Uurloon parttimer met contractwijziging per 1 mei</strong>
            <br />
       
        <table border="1" cellpadding="5">
            <tr border="0">
                <th border="0"></th>
                <th border="0" align="center">april</th>
                <th border="0" align="center">mei</th>
                <th border="0" align="center">juni</th>
            </tr>
            <tr>
                <td border="0">Contracturen</td>
                <td align="right" valign="bottom">34,67</td>
                <td align="right" valign="bottom">43,33</td>
                <td align="right" valign="bottom">43,33</td>
            </tr>
            <tr>
                <td border="0">Uurloon</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
            </tr>
            <tr>
                <td border="0">"Basis" salaris</td>
                <td align="right" valign="bottom"><strong>€ 346,70</strong></td>
                <td align="right" valign="bottom"><strong>€ 433,30</strong></td>
                <td align="right" valign="bottom"><strong>€ 433,30</strong></td>
            </tr>
            <tr height="30" border="0">
                <td border="0" height="30" color="white">_</td>
                <td border="0" height="30" color="white" align="right" valign="bottom"></td>
                <td border="0" height="30" color="white" align="right" valign="bottom"></td>
                <td border="0" height="30" color="white" align="right" valign="bottom"></td>
            </tr>
            <tr>
                <td border="0" valign="top">Gewerkte uren huidige maand</td>
                <td align="right" valign="bottom">36,00</td>
                <td align="right" valign="bottom">41,00</td>
                <td align="right" valign="bottom">45,00</td>
            </tr>
            <tr>
                <td border="0">Minder/Meer Uren vorige maand (<i>gewerkte uren vorige maand -/- contracturen vorige maand</i>)</td>
                <td align="right" valign="bottom">(39,67-34,67=)<br />
                    5,00</td>
                <td align="right" valign="bottom">(36-34,67=)<br />
                    1,33</td>
                <td align="right" valign="bottom" color="red">(41-43,33=)<br />
                    2,33-</td>
            </tr>
            <tr>
                <td border="0">Uurloon</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
            </tr>

            <tr>
                <td border="0">Minder/meer salaris</td>
                <td align="right" valign="bottom"><strong>€ 50,00</strong></td>
                <td align="right" valign="bottom"><strong>€ 13,30</strong></td>
                <td align="right" valign="bottom" color="red"><strong>€ 23,30-</strong></td>
            </tr>
            <tr>
                <td border="0">Uitbetalingsbedrag huidige maand</td>
                <td align="right" valign="bottom"><strong>€ 396,70</strong></td>
                <td align="right" valign="bottom"><strong>€ 446,60</strong></td>
                <td align="right" valign="bottom"><strong>€ 410,00</strong></td>
            </tr>
        </table>
             </p>
        <br />
        <br />
        <br />
        <p style="font-family: Verdana; font-size: 11px;">
            <strong>Maandloon parttimer/fulltimer met contractwijziging per 1 mei</strong>
            <br />
       
        <table border="1" cellpadding="5">
            <tr border="0">
                <th border="0"></th>
                <th border="0" align="center">april</th>
                <th border="0" align="center">mei</th>
                <th border="0" align="center">juni</th>
            </tr>
            <tr>
                <td border="0">Contracturen</td>
                <td align="right" valign="bottom">104,00</td>
                <td align="right" valign="bottom">121,33</td>
                <td align="right" valign="bottom">121,33</td>
            </tr>
            <tr>
                <td border="0">Uurloon</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
                <td align="right" valign="bottom">€ 10,00</td>
            </tr>
            <tr>
                <td border="0">"Basis" salaris</td>
                <td align="right" valign="bottom"><strong>€ 1.040,00</strong></td>
                <td align="right" valign="bottom"><strong>€ 1.213,30</strong></td>
                <td align="right" valign="bottom"><strong>€ 1.213,30</strong></td>
            </tr>
            <tr>
                <td border="0">Uitbetalingsbedrag<br />
                    huidige maand</td>
                <td align="right" valign="bottom"><strong>€ 1.040,00</strong></td>
                <td align="right" valign="bottom"><strong>€ 1.213,30</strong></td>
                <td align="right" valign="bottom"><strong>€ 1.213,30</strong></td>
            </tr>
        </table>
             </p>
      
       
    </div>
        
        
        </text>
            
             <endpage />
        }*@

    </div>
</body>
</html>
