@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;

@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<body>
    <div>
        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <strong>ARBEIDSOVEREENKOMST VOOR VAKANTIEKRACHTEN</strong>
            <br />
            <br />
            Tussen IKEA Nederland B.V., hierna te noemen de werkgever, en
              <br />
            <br />
        </p>
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            @if (!string.IsNullOrEmpty(Model.GetAnswer("Initials")))
            {
                <tr>
                    <td width="30%" style="text-align: left;">Voorletters</td>
                    <td width="70%" style="text-align: left;">: @Model.GetAnswer("Initials")</td>
                </tr>
            }
            <tr>
                <td style="text-align: left;">Roepnaam</td>
                <td style="text-align: left;">: @Model.GetAnswer("FirstName")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Achternaam</td>
                <td style="text-align: left;">: @Model.GetAnswer("Prefixes") @Model.GetAnswer("LastName")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Adres</td>
                <td style="text-align: left;">: @Model.GetAnswer("PermanentAddressLine1") @Model.GetAnswer("PermanentAddressLine2") @Model.GetAnswer("PermanentAddressLine3")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Postcode /  woonplaats</td>
                <td style="text-align: left;">: @Model.GetAnswer("PermanentPostalCode") @Model.GetAnswer("PermanentCity")</td>
            </tr>
            <tr>
                <td style="text-align: left;">Geboortedatum</td>
                <td style="text-align: left;">: @Model.GetAnswer("DateOfBirth")</td>
            </tr>
        </table>
        <br />
        <p style="text-align: left;font-family: Verdana; font-size: 11px;">
            Hierna te noemen vakantiekracht, wordt een arbeidsovereenkomst afgesloten waarvan de voorwaarden als volgt luiden:
                <br />
            <br />
        </p>

        
          @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();

            var brText = "<br /><br />";

            //1
            string text1 = "Met ingang van {0} treedt de vakantiekracht bij de werkgever in dienst.";

            list.Add(new PdfListItem { Text = string.Format(text1, Model.GetAnswer("ContractStartDate")) });

            //2
            list.Add(new PdfListItem { Text = string.Format("De vakantiekracht wordt aangesteld in de vestiging {0} en is ingedeeld in functieschaal 03.", Model.GetAnswer("BusinessUnit")) });

            //3
            list.Add(new PdfListItem { Text = string.Format("Deze arbeidsovereenkomst wordt afgesloten voor de bepaalde tijd van {0} tot en met {1} en eindigt derhalve van rechtswege aan het einde van de overeengekomen periode, zonder dat hiervoor enige opzegging is vereist.", Model.GetAnswer("ContractStartDate"), Model.GetAnswer("ContractEndDate")) });

            //4
            list.Add(new PdfListItem { Text = "Partijen zijn gerechtigd om de arbeidsovereenkomst tussentijds op te zeggen met inachtneming van de wettelijke opzegtermijn." });

            
            //5            
            if (Model.GetAnswer("ProbationPeriod").ToLower() == "Yes".ToLower())
            {
              list.Add(new PdfListItem { Text = "De eerste twee maanden van het dienstverband gelden als proeftijd. Tijdens de proeftijd hebben beide partijen het recht om het dienstverband met onmiddellijke ingang op te zeggen en te beëindigen." });
            }

            //6
            list.Add(new PdfListItem { Text = string.Format("Het gemiddeld aantal te werken uren per week bedraagt {0} uur. De vakantiekracht behoort tot de categorie uurloon parttimer. De vakantiekracht is conform de IKEA CAO flexibel in tijd en uren in te roosteren tijdens weekdagen, zaterdagen en op zon- en feestdagen en verklaart zich hiermee uitdrukkelijk akkoord.", Model.GetAnswer("ContractedHours")) });
    
            //7
            list.Add(new PdfListItem { Text = "Op grond van de ‘<i>Bijlage bij het contract betreffende Protocol 4</i>’ die aan de overeenkomst is toegevoegd en eveneens door vakantiekracht is ondertekend, wordt tussen partijen geen maximum verbonden aan het aantal door vakantiekracht te werken koopavonden, zaterdagavonden, zaterdagen, zondagen en feestdagen per jaar." });

            //8
            string text8 = "Salaris:<br />";
            text8 += "a: Het salaris bedraagt EUR {0} bruto per uur. <br />";
            text8 += "b: De tegemoetkoming in de reiskosten wordt berekend conform IKEA CAO artikel 29B.";

            
            list.Add(new PdfListItem { Text = string.Format(text8, Model.GetAnswer("BasicPayAmount")) });

            //9
            list.Add(new PdfListItem { Text = "Op deze arbeidsovereenkomst is de laatst overeengekomen IKEA CAO van toepassing. Daarnaast zijn de IKEA Group Code of Conduct en de regels die zijn opgenomen in Mijn IKEA van toepassing. De IKEA CAO en de IKEA Group Code of Conduct zijn te raadplegen op en downloaden via de internetsite <a href=\"http://www.ico-worker.com/nl\" target=\"_blank\" title=\"http://www.ico-worker.com/nl\" style=\"text-decoration:underline;color:blue;\">www.ico-worker.com/nl</a>. In de bijgesloten brief staat waar je deze documenten kan vinden. Op verzoek van de vakantiekracht stuurt IKEA een digitale versie per e-mail of een geprinte versie per gewone post toe van de toepasselijke regels. Het boekje Mijn IKEA ontvang je tegelijk met deze arbeidsovereenkomst. " });
                 
            }


       

        @if (list.Count > 1)
        {
            for (int i = 0; i < list.Count; i++)
            { 
            <br />                                        
            <p style="text-align: left;font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">@(i + 1). @Html.Raw(list[i].Text)</p>
                if (list[i].SubList != null && list[i].SubList.Count > 0)
                {
                    foreach (var item in list[i].SubList)
                    {
            <br />
            <p style="text-align: left;font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">@item.Text </p>
                    }
                }
            }
        }
        else
        {
            for (int i = 0; i == list.Count - 1; i++)
            {
            <p style="font-family: Verdana; font-size: 11px;">@Html.Raw(list[i])</p>
            }
        }

     @*  <p style="text-align: left; font-family: Verdana; font-size: 11px;">
           <br />
            
            De vakantiekracht verklaart hiermee voorafgaande aan ondertekening van de arbeidsovereenkomst kennis te hebben genomen van de IKEA CAO, de IKEA Group Code of Conduct en de regels in Mijn IKEA en verder met het bovenstaande akkoord te gaan.
            <br />
            <br />
        </p>*@
         <endpage />
    </div>
</body>
</html>
