@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;

@{
    Layout = null;
    Model.Language = "nl";

    var fillOldVal = TempData["oldValues"];
    var newfill = (List<KeyValuePair<string, string>>)fillOldVal;
    
}

<!DOCTYPE html>
<html>

<body>
    <div>
      
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="0">
            <tr>
                <td style="text-align: right;">@Model.Contract.FirstName @Model.Contract.Surname</td>
            </tr>
            <tr>
                <td style="text-align: right;">@Model.GetAnswer("PermanentAddressLine1") @Model.GetAnswer("PermanentAddressLine2") @Model.GetAnswer("PermanentAddressLine3")</td>
            </tr>
            <tr>
                <td style="text-align: right;">@Model.GetAnswer("PermanentPostalCode") @Model.GetAnswer("PermanentCity")</td>
            </tr>
        </table>
        <br />
        <p style="text-align: left; font-family: Verdana; font-size: 11px;">

            @if (Model.Department != null)
            {
                if (!string.IsNullOrEmpty(Model.Department.HeadOfDepartmentCity))
                {
                <text> @Model.Department.HeadOfDepartmentCity, </text>
                
                }
            } @string.Format(new System.Globalization.CultureInfo("nl-NL"), "{0:d MMMM yyyy}", DateTime.Now)<br />
            <br />

            Betreft: wijziging arbeidsovereenkomst
        <br />
            <br />

            Beste @Model.Contract.FirstName,
        <br />
            <br />
            Hierbij bevestigen wij je het volgende.
  <br />
            <br />

            Per @Model.GetAnswer("ChangeValidFrom") zullen de volgende wijzigingen in jouw arbeidsovereenkomst plaatsvinden:
        </p>

        @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();

            var brText = "<br /><br />";

            string OLD_EmploymentCategory = newfill.Where(x => x.Key == "OLD_EmploymentCategory").Select(x => x.Value).FirstOrDefault();
            string OLD_JobTitle = newfill.Where(x => x.Key == "OLD_JobTitle").Select(x => x.Value).FirstOrDefault();

            // 1
            // **** Applicable if OA9 Job Title (Local Language translation) changes
            if (OLD_JobTitle.ToLower() != Model.GetAnswer("JobTitle").ToLower())
            {
                string text1 = "Je zal werkzaam zijn in de functie van " + Model.GetAnswer("LocalJobTitle") + " bij IKEA " + Model.GetAnswer("NewBusinessUnit") + ". Deze functie is ingedeeld in functieschaal " + Model.GetAnswer("PayScaleLevel") + ".";
                list.Add(new PdfListItem { Text = text1 });
            }

            //1a
            // **** Applicable if additionally OA10 is "New Position for VAP store?" for units OA3: Store Amsterdam 088 or Store Heerlen 089 or Store Barendrecht 274
            if (Model.GetAnswer("NewPosition").ToLower() == "New Position for VAP store?".ToLower())
            {
                if (Model.GetAnswer("NewBusinessUnit").ToLower() == "Store Amsterdam 088".ToLower() | Model.GetAnswer("NewBusinessUnit").ToLower() == "Store Heerlen 089".ToLower() | Model.GetAnswer("NewBusinessUnit").ToLower() == "Store Barendrecht 274".ToLower())
                {
                    string text1a = "De bovenstaande functie is specifiek voor de vestiging " + Model.GetAnswer("NewBusinessUnit") + " en valt buiten de kaders van het functiegebouw van IKEA B.V. Op het moment dat VAPS constructie van IKEA " + Model.GetAnswer("NewBusinessUnit") + " vervalt en IKEA " + Model.GetAnswer("NewBusinessUnit") + " weer een reguliere vestiging wordt, zal dit consequenties hebben voor deze functie. Met jou zal dan moeten worden gesproken over herplaatsing in een andere functie behorende bij het functiegebouw van IKEA B.V.";
                    list.Add(new PdfListItem { Text = text1a });
                }
            }

            //2 *OBSERVERA ATT VI BEHÖVER JÄMFÖRA HÄR!!!!
            // Applicable if changing from co-worker to manager position, applicable If Pay Scale Level is 10 or more, or if it is 9, but the value in a field OA.CS.11.1 "Eligible for Management allowance?" is yes
            string text2 = "Als tegemoetkoming in kosten voor representatie en telefoongebruik ontvang je een algemene onkostenvergoeding van € 50,- bruto per maand. Dit is conform CAO artikel 28A. Hiernaast ontvang je ook een reiskostenvergoeding conform CAO artikel 29C.";
            list.Add(new PdfListItem { Text = text2 });

            //3 *OBSERVERA ATT VI BEHÖVER JÄMFÖRA HÄR!!!!
            //Applicable if changing from manager to co-worker position, The last section applicable If Pay Scale Level is 8 or less, or if it is 9, but the value in a field OA.CS.11.1 "Is the co-worker allowed a Management allowance?" is no
            string text3 = "Je tegemoetkoming in kosten voor representatie en telefoongebruik vervalt met ingang van bovengenoemde datum. Je reiskostenvergoeding wordt berekend conform CAO artikel 29B.";
            list.Add(new PdfListItem { Text = text3 });

            //4 *OBSERVERA ATT VI BEHÖVER JÄMFÖRA HÄR!!!!
            //Applicable if PM.CS.2.2 changes < Pay Scale Level>; <PM.CS.2.2>
            //Payscale level är inte mandatory
            if (!string.IsNullOrEmpty(Model.GetAnswer("PayScaleLevel")))
            {
                string text4 = "Je zal worden ingeschaald in functieschaal " + Model.GetAnswer("PayScaleLevel") + ".";
                list.Add(new PdfListItem { Text = text4 });
            }

            //5
            if (Model.GetAnswer("ContractType").ToLower() == "Full time".ToLower())
            {
                string text5 = "Je salaris zal gewijzigd worden naar € " + Model.GetAnswer("BasicPay") + " bruto per maand.";
                list.Add(new PdfListItem { Text = text5 });
            }

            //6
            if (Model.GetAnswer("ContractType").ToLower() == "Part Time".ToLower())
            {
                string text6 = "Je salaris zal gewijzigd worden naar € " + Model.GetAnswer("BasicPayAmount") + " bruto per uur.";
                list.Add(new PdfListItem { Text = text6 });
            }

            //7          
            if (!string.IsNullOrEmpty(Model.GetAnswer("NextRevisionDate").ToLower()))
            {
                string text7 = "De volgende salarisrevisie zal zijn in " + Model.GetAnswer("NextRevisionDate") + ".";
                list.Add(new PdfListItem { Text = text7 });
            }

            //8 a
            if ((!string.IsNullOrEmpty(Model.GetAnswer("TypeOfBenefit").ToLower()) && (!string.IsNullOrEmpty(Model.GetAnswer("Category").ToLower()))))
            {
                string text8a = "Werknemer heeft recht op gebruik van een lease-auto categorie " + Model.GetAnswer("Category").ToLower() + ":";
                list.Add(new PdfListItem { Text = text8a });

                pdfList.Add(new PdfListItem { Text = NetherlandsPdfPage.FirstLetterToUpperCase(Model.Translate(Model.GetAnswer("TypeOfCar"), Model.Language)) });
                list[list.Count - 1].SubList = pdfList;
            }

            //8 b
            if ((!string.IsNullOrEmpty(Model.GetAnswer("TypeOfBenefit2").ToLower()) && (!string.IsNullOrEmpty(Model.GetAnswer("Category2").ToLower()))))
            {
                string text8b = "Werknemer heeft recht op gebruik van een lease-auto categorie " + Model.GetAnswer("Category2").ToLower() + ":";
                list.Add(new PdfListItem { Text = text8b });

                pdfList.Add(new PdfListItem { Text = NetherlandsPdfPage.FirstLetterToUpperCase(Model.Translate(Model.GetAnswer("TypeOfCar2"), Model.Language)) });
                list[list.Count - 1].SubList = pdfList;
            }

            //8 c
            if ((!string.IsNullOrEmpty(Model.GetAnswer("TypeOfBenefit3").ToLower()) && (!string.IsNullOrEmpty(Model.GetAnswer("Category3").ToLower()))))
            {
                string text8c = "Werknemer heeft recht op gebruik van een lease-auto categorie " + Model.GetAnswer("Category3").ToLower() + ":";
                list.Add(new PdfListItem { Text = text8c });

                pdfList.Add(new PdfListItem { Text = NetherlandsPdfPage.FirstLetterToUpperCase(Model.Translate(Model.GetAnswer("TypeOfCar3"), Model.Language)) });
                list[list.Count - 1].SubList = pdfList;
            }

            //9
            if (Model.GetAnswer("EmploymentCategory").ToLower() == "Permanent".ToLower())
            {
                string text9 = "Gemiddeld ben je " + Model.GetAnswer("ContractedHours") + " uur per week werkzaam volgens rooster, conform CAO. Je zal werkzaam zijn als " + Model.GetAnswer("EmploymentCategory") + ". In de bijlage vind je een toelichting op je nieuwe salarisbetaling.";
                list.Add(new PdfListItem { Text = text9 });
            }
            // 10
            else
            {
                string text10 = "Gemiddeld ben je " + Model.GetAnswer("ContractedHours") + " uur per week werkzaam volgens rooster, conform CAO. Deze urenaanpassing is tijdelijk en duurt tot en met " + Model.GetAnswer("ChangeValidTo") + ". In deze periode zal je werkzaam zijn als " + Model.GetAnswer("EmploymentCategory") + ". Na deze datum is je contract voor " + Model.GetAnswer("PreviousContractHours") + " uur per week weer van kracht.";
                list.Add(new PdfListItem { Text = text10 });
            }


            //11
            //Applicable if PM1 changes (Check Payroll Category compared to Payroll Category old data)
            if (Model.GetAnswer("PayrollCategory").ToLower() != Model.GetAnswer("PayrollCategoryOldData").ToLower())
            {
                string text11 = "Je behoort tot de categorie " + NetherlandsPdfPage.GetPayRollCategoryText(Model.GetAnswer("PayrollCategory"), Model) + " in plaats van " + NetherlandsPdfPage.GetPayRollCategoryText(Model.GetAnswer("PayrollCategoryOldData"), Model) + ". Deze wijziging heeft plaatsgevonden in overleg met de afdeling HR van je vestiging. In de bijlage vind je een toelichting op je salarisstrook.";
                list.Add(new PdfListItem { Text = text11 });
            }


            //12 Applicable if OA12 changes from "Temporary" to "Temporary"
            //Employment Category
            if (OLD_EmploymentCategory.ToLower() == "Temporary".ToLower() && Model.GetAnswer("EmploymentCategory").ToLower() == "Temporary".ToLower())
            {
                string text12 = "Je contract voor bepaalde tijd wordt verlengd. Deze overeenkomst gaat in op " + Model.GetAnswer("ChangeValidFrom") + " en loopt tot en met " + Model.GetAnswer("ChangeValidTo") + ". Partijen zijn gerechtigd om de arbeidsovereenkomst tussentijds op te zeggen met inachtneming van de wettelijke opzegtermijn.";
                list.Add(new PdfListItem { Text = text12 });
            }

            //13 Applicable if OA12 changes from "Temporary" to "Permanent"
            //Employment Category
            if (OLD_EmploymentCategory.ToLower() == "Temporary".ToLower() && Model.GetAnswer("EmploymentCategory").ToLower() == "Permanent".ToLower())
            {
                string text13 = "Je contract voor bepaalde tijd wordt omgezet in een arbeidsovereenkomst voor onbepaalde tijd. Deze overeenkomst gaat in op " + Model.GetAnswer("ChangeValidFrom") + ". We hebben een korte vragenlijst toegevoegd, we willen je vragen deze in te vullen. Het beantwoorden van deze vragen is niet van invloed op jouw dienstverband en de gegeven informatie zal vertrouwelijk behandeld worden. Deze vragenlijst is alleen bedoeld voor het eventueel verkrijgen van subsidiemogelijkheden bij het UWV voor IKEA als werkgever en heeft dan ook geen gevolgen voor jou.";
                list.Add(new PdfListItem { Text = text13 });
            }

            //13a
            //"Additionally applicable if a co-worker has a residence permit entitling to engage in employment in the Netherlands. If OA.CS.12.2 is yes.";
            if (Model.GetAnswer("ResidencePermitRestriction").ToLower() == "Yes".ToLower())
            {
                string text13a = "Graag willen we je er op wijzen dat medewerkers die op basis van een verblijfsvergunning in Nederland verblijven en bij wie arbeid (tijdelijk) is toegestaan, verplicht zijn om bij iedere wijziging in hun verblijfsstatus (verblijfsvergunning) en/of werkstatus (werkvergunning) IKEA hierover te informeren.";
                list.Add(new PdfListItem { Text = text13a });
            }
            
        }

        @if (list.Count > 0)
        {
            for (int i = 0; i < list.Count; i++)
            { 
            <br />                                        
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-left: 10px; padding-right: 50px;">@*@(i + 1).*@ &bull; @Html.Raw(list[i].Text)</p>
                if (list[i].SubList != null && list[i].SubList.Count > 0)
                {
                    foreach (var item in list[i].SubList)
                    {
            <br />
            <p style="text-align: left; font-family: Verdana; font-size: 11px; padding-left: 20px; padding-right: 50px;">&bull; @Html.Raw(item.Text) </p>
                    }
                }
            }
        }
        <p style="text-align: left; font-family: Verdana; font-size: 11px;">
            <br />
            De overige arbeidsvoorwaarden die voor jou op grond van jouw reeds bestaande arbeidsovereenkomst gelden, blijven onveranderd van toepassing. Mocht je het met één of meerdere bepalingen uit de wijziging in je arbeidsovereenkomst niet eens zijn, dan ontvangen wij je reactie graag schriftelijk binnen 7 (zeven) kalenderdagen.<br />
            <br />
            Graag ontvangen wij één exemplaar, met daarop je handtekening, voor akkoord retour. Deze kan je in de bijgevoegde envelop terugsturen.
        </p>
        <endpage />
    </div>


</body>
</html>

