@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

<div class="tab-pane" id="Basic">
    <div class="span12">
        <table class="table">
            <tbody>       
            <tr>
                <td class="tdstrong">@Model.Label("BasicTerminationType")</td>
                <td>
                    @Model.Element("BasicTerminationType")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("LastDayOfEmployment")</td>
                <td>
                    @Model.Element("LastDayOfEmployment")
                    <div id="notice_HiringDate" style="display:none;" class="notice">
                            @Model.Translate("The date you've entered is in the past. Are you sure you want to backdate Last Day of Employment date?")
                        </div>
                </td>
            </tr>
            <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("CDS")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("LockCDSAccountFrom")</td>
                <td>
                    @Model.Element("LockCDSAccountFrom")</td>
            </tr>         
            <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("Country Specifics")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("Co-WorkerBeenEmployedFor2Months")</td>
                <td>
                    @Model.Element("Co-WorkerBeenEmployedFor2Months")</td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("UsingCompanyFitness")</td>
                <td>
                    @Model.Element("UsingCompanyFitness")</td>
            </tr>
                </tbody>
        </table>
    </div>
</div>

<script>
    

    function selectIndexChangeTerminationType() {
        document.getElementById('CompleteTerminationType').value = document.getElementById('BasicTerminationType').value;
        
    }

    document.getElementById('BasicTerminationType').onchange = selectIndexChangeTerminationType;

    var noticeHiringDate = $('#notice_HiringDate');
    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var lastDay = $('#date_LastDayOfEmployment').not(".disabled").datepicker({
        onRender: function (date) {
            return '';
        }
    }).on('changeDate', function (ev) {

        noticeHiringDate.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticeHiringDate.show();       
    }).data('datepicker');


    $('#LastDayOfEmployment').change(function () {
        var lastDayOfEmployment = $('#LastDayOfEmployment').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dlastDayOfEmployment = APIGlobal.DateTime.parseDate(lastDayOfEmployment, format);
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
        noticeHiringDate.hide();
        if (dlastDayOfEmployment.valueOf() < now.valueOf())
            noticeHiringDate.show();
    });


    //function changedLastDayOfEmployment() {
    //    var noticeHiringDate = $('#notice_HiringDate');

    //    var hiringdate = new Date(document.getElementById('LastDayOfEmployment').value);
    //    var startDate = new Date();
    //    startDate.setHours(0, 0, 0, 0);
    //    if (hiringdate.valueOf() > startDate.valueOf()) {
    //        noticeHiringDate.show();
    //    } else {
    //        noticeHiringDate.hide();
    //    }
    //}

    //document.getElementById('LastDayOfEmployment').onchange = changedLastDayOfEmployment;


    function selectIndexChangeProbationPeriod() {
        var probitionEndDate = document.getElementById('ProbationEndDate');
        if ((this.options[this.selectedIndex].value == 'Not Applicable') || (this.options[this.selectedIndex].value == 'No')) {
            probitionEndDate.disabled = true;
        } else {
            probitionEndDate.disabled = false;
            var validFrom = document.getElementById('ChangeValidFrom');
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var date = APIGlobal.DateTime.parseDate(validFrom.value, format);
            date.setMonth(date.getMonth() + 2);

            probitionEndDate.value = APIGlobal.DateTime.formatDate(date, format);
        }
    }



</script>