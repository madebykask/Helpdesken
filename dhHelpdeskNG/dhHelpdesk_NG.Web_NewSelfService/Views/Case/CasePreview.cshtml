@using DH.Helpdesk.BusinessData.OldComponents;
@model DH.Helpdesk.NewSelfService.Models.Case.CaseOverviewModel

<script type="text/javascript">

    $(function() {
        window.alreadyExistFileIds = [];
        bindDeleteFileBehaviorToDeleteButtons();       

        $('#file_uploader').pluploadQueue({
            url: '@this.Url.Action("UploadFile")',
            multipart_params: { Id: '@this.Model.ExLogFileGuid' },
            max_file_size: '10mb',

            init: {
                FileUploaded: function() {

                    $.get('@this.Url.Action("Files")', { id: '@this.Model.ExLogFileGuid' }, function(files) {
                        refreshFilesTable(files);
                    });
                },

                UploadComplete: function(up, file) {
                    //plupload_add
                    $(".plupload_buttons").css("display", "inline");
                    $(".plupload_upload_status").css("display", "inline");
                    up.refresh();
                },

                Error: function(uploader, e) {
                    if (e.status != 409) {
                        return;
                    }

                    window.alreadyExistFileIds.push(e.file.id);
                },

                StateChanged: function(uploader) {
                    if (uploader.state != plupload.STOPPED) {
                        return;
                    }

                    for (var i = 0; i < window.alreadyExistFileIds.length; i++) {
                        var fileId = window.alreadyExistFileIds[i];
                        $('#file_uploader ul[class="plupload_filelist"] li[id="' + fileId + '"] div[class="plupload_file_action"] a').prop('title', '@Translation.Get("File already exists", Enums.TranslationSource.TextTranslation).');
                    }

                    window.alreadyExistFileIds.length = 0;
                    uploader.refresh();
                }

            }
        });

        $('#upload_files_popup').on('hidden.bs.modal', function () {
            if ($('#file_uploader') != undefined) {
                if ($('#file_uploader').pluploadQueue().files.length > 0) {
                    if ($('#file_uploader').pluploadQueue().state == plupload.UPLOADING)
                        $('#file_uploader').pluploadQueue().stop();

                    while ($('#file_uploader').pluploadQueue().files.length > 0) {
                        $('#file_uploader').pluploadQueue().removeFile($('#file_uploader').pluploadQueue().files[0]);
                    }
                    $('#file_uploader').pluploadQueue().refresh();
                }
            }
        });        
    });

    function refreshFilesTable(files) {
        $('#files_table > tbody > tr').remove();

        var fileMarkup;
        
        for (var i = 0; i < files.length; i++) {
            var file = files[i];

            fileMarkup =
                $('<tr>' +
                    '<td>' +
                        '<i class="glyphicon glyphicon-file">&nbsp;</i><a style="color:blue" href="@this.Url.Action("DownloadFile")?@(!string.IsNullOrEmpty(this.Model.ExLogFileGuid) ? "id=" + this.Model.ExLogFileGuid + "&" : string.Empty)' + 'fileName=' + file + '">' + file + '</a>' +
                    '</td>' +
                    '<td>' +
                        '<a id="delete_file_button_' + i + '" class="btn btn-default btn-sm" ><span class="glyphicon glyphicon-remove"></span> </a>' +
                    '</td>' +
                    '</tr>');
            
                $('#files_table > tbody').append(fileMarkup);
            }

            bindDeleteFileBehaviorToDeleteButtons();
        }

        function bindDeleteFileBehaviorToDeleteButtons() {
            $('#files_table a[id^="delete_file_button_"]').click(function () {
                var fileName = $(this).parents('tr:first').children('td:first').children('a').text();
                var pressedDeleteFileButton = this;

                $.post('@this.Url.Action("DeleteFile")', { id: '@this.Model.ExLogFileGuid', fileName: fileName }, function () {
                    $(pressedDeleteFileButton).parents('tr:first').remove();
                });
            });
        }

    function SendEmail() {

        var note = $('#extraNote').val();
        if (note == "") {
            alert('External Log text is empty');
        } else {
            var caseId = $('#CaseId').val();
            var curGuid = '@Model.MailGuid';

            window.location.href = '@Url.Action("SendMail", "Case")' +
                '?caseId=' + caseId +
                '&extraNote=' + note +
                '&curGUID=' + curGuid;
        }

    }
    

</script>

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.UserInformation))
{
    <input id="CaseId" type="hidden" value="@Model.CasePreview.Id"/>    
    <h4>@Translation.Get("User Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReportedBy.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ReportedBy
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Name.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsName
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString(), Enums.TranslationSource.TextTranslation):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsEmail
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsPhone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsCellphone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Customer_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Customer_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Customer.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Region_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.Regions.Where(r => r.Id == Model.CasePreview.Region_Id).Select(r => r.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Department_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Department != null)
                            {
                                @Model.CasePreview.Department.DepartmentName
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.OU_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.OU_Id
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Place.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Place.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Place
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.UserCode.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                       
                            @Translation.Get(GlobalEnums.TranslationCaseFields.UserCode.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.UserCode
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- User Information Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.ComputerInformation))
{
    <h4>@Translation.Get("computer Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryType
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryLocation
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Computer Information Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.CaseInfo))
{
    <h4>@Translation.Get("Case Information", Enums.TranslationSource.TextTranslation) </h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.CaseNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.CaseNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.RegTime.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.RegTime.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(r => Model.CasePreview.RegTime, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ChangeTime.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ChangeTime.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(c => Model.CasePreview.ChangeTime, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                                                        
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.CaseType.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.ProductArea != null)
                            {
                                @Model.CasePreview.ProductArea.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.System_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.System_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.Systems.Where(s => s.Id == Model.CasePreview.System_Id).Select(s => s.SystemName).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Urgency != null)
                            {
                                @Model.CasePreview.Urgency.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Impact_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Impact_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Impact_Id
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Category_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Category != null)
                            {
                                @Model.CasePreview.Category.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.Suppliers.Where(s => s.Id == Model.CasePreview.Supplier_Id).Select(s => s.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InvoiceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ReferenceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Caption.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Caption
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Description.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.Raw(Model.CasePreview.Description)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Miscellaneous
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ContactBeforeAction
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.SMS.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.SMS.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.SMS
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.AgreedDate.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.AgreedDate.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(a => Model.CasePreview.AgreedDate, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Available.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Available.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Available
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Cost.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Cost.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            <table class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>@Translation.Get("Item Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Cost
                                    </td>
                                    <td>@Translation.Get("Additional Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.OtherCost
                                    </td>
                                    <td>@Translation.Get("Currency", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Currency
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Filename.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Filename.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            <table id="case_files_table" class="table table-striped table-bordered table-hover">
                                @if (Model.CasePreview.CaseFiles != null)
                                {
                                    foreach (var file in Model.CasePreview.CaseFiles)
                                    {
                                    <tr>
                                        <td>
                                            <a style="color:blue" href="@this.Url.Action("DownloadFile", new RouteValueDictionary { { "id", Model.CasePreview.Id }, { "fileName", file.FileName } })"><i class="icon-file"></i>@file.FileName</a>
                                        </td>
                                    </tr>                                    
                                    }
                                }
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Case Info Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.Other))
{
    <h4>@Translation.Get("Other", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.PlanDate.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                           
                            @Translation.Get(GlobalEnums.TranslationCaseFields.PlanDate.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(p => Model.CasePreview.PlanDate, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.WatchDate.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.WatchDate.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(w => Model.CasePreview.WatchDate, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Verified.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Verified.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Verified
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.VerifiedDescription.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.VerifiedDescription.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.VerifiedDescription
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.SolutionRate.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-2">                            
                            @Translation.Get(GlobalEnums.TranslationCaseFields.SolutionRate.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):                            
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.SolutionRate
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!--Other Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.CaseLog))
{
    <h4>@Translation.Get("Case Log", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-12 table-responsive">
            <table class="table table-striped table-bordered table-hover">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString()))
                {
                    <thead>
                        <tr>
                            <th>
                                @Translation.Get("Date", Enums.TranslationSource.TextTranslation)
                            </th>
                            <th>
                                @Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString()).Select(f => f.LabelToChange).SingleOrDefault()
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.CaseLogs != null)
                        {
                            bool isFirst = true;
                            foreach (var log in Model.CaseLogs)
                            {
                                var user = string.Empty;
                                if (log.Text_External != string.Empty)
                                {
                                    if (Model.CasePreview.FinishingDate == null || !(log.LogDate > Model.CasePreview.FinishingDate))
                                    {
                                        <tr>
                                            <td style="width: 15%">
                                                @if (isFirst)
                                                {
                                                    isFirst = false;
                                                    @Html.DisplayFor(l => log.LogDate, "DateAndTime")
                                                    <span style="color: red">&nbsp; @Translation.Get("No", Enums.TranslationSource.TextTranslation)!</span>
                                                }
                                                else
                                                {
                                                    @Html.DisplayFor(l => log.LogDate, "DateAndTime")
                                                }
                                                <br />
                                                @if (log.User == null)
                                                {
                                                    user = log.RegUser;
                                                }
                                                else
                                                {
                                                    user = log.User.SurName + " " + log.User.FirstName;
                                                }
                                                @user
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => log.Text_External)
                                                <br />
                                                @if (log.LogFiles.Count > 0)
                                                {
                                                    foreach (var file in log.LogFiles)
                                                    {
                                                        <a style="color: blue" href="@this.Url.Action("DownloadLogFile", new RouteValueDictionary { { "id", log.Id }, { "fileName", file.FileName } })">
                                                            <i class="icon-file"></i>@file.FileName
                                                        </a>
                                                        <br />
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                    </tbody>
                }
            </table>
        </div>
    </div>
    
    if (Model.CasePreview.FinishingDate == null)
    {
        <div class="row">
            <div class="col-md-3 dh-col">
                <div class="container form-horizontal">
                    <div class="form-group row">
                        <label class="col-md-12">
                            <img src="@Url.Content("~/Content/img/Notice.png")" style="width: 16px; height: 16px" />
                            @Translation.Get("If you want to add information, please enter it in the fields below:", Enums.TranslationSource.TextTranslation)
                        </label>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2">
                            @Translation.Get("Text Note", Enums.TranslationSource.TextTranslation): 
                        </label>
                        <div class="col-md-10">
                            @Html.TextAreaFor(e => Model.ExtraNote, new { @class = "col-md-5", style = "Height:150px", id = "extraNote" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-2">
                            @Translation.Get("Attachment", Enums.TranslationSource.TextTranslation): 
                        </label>
                        <div class="col-md-5">                            
                            <a href="#upload_files_popup" role="button" class="btn btn-default" data-toggle="modal">@Translation.Get("Add", Enums.TranslationSource.TextTranslation)</a>
                            <div id="upload_files_popup" role="dialog" class="modal fade" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                            <h3>&nbsp;</h3>
                                        </div>
                                        <div class="modal-body">
                                            <div id="file_uploader"></div>
                                        </div>
                                        <div class="modal-footer">
                                            <button class="btn" data-dismiss="modal" aria-hidden="true">@Translation.Get("Close", Enums.TranslationSource.TextTranslation)</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <table id="files_table" class="table table-striped table-bordered table-hover">
                                <tbody>
                                    @if (this.Model.LogFilesModel.Files == null)
                                    {
                                        <div id="no_uploaded_files_label">
                                        </div>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <button class="btn btn-default" onclick=" SendEmail() ">@Translation.Get("Save and Send", Enums.TranslationSource.TextTranslation)</button>
            </div>
        </div>
    }
}
<!-- Case Log Fields and some text -->
