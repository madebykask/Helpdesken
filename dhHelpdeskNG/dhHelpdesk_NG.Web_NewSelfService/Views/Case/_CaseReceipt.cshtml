@using DH.Helpdesk.BusinessData.OldComponents.DH.Helpdesk.BusinessData.Utils
@using DH.Helpdesk.NewSelfService.Infrastructure
@using DH.Helpdesk.BusinessData.OldComponents
@using DH.Helpdesk.NewSelfService.Models.Case
@using DH.Helpdesk.Services.Infrastructure
@using DH.Helpdesk.NewSelfService.Infrastructure.Common
@model DH.Helpdesk.NewSelfService.Models.Case.CaseOverviewModel

@{
    CaseLogModel pCaseLogs = null;
    var currentCaseId = Model.CasePreview.Id;
    var helper = ManualDependencyResolver.Get<ICommonFunctions>();
    if (currentCaseId != null)
    {
        pCaseLogs = helper.GetCaseLogs(currentCaseId);
    }

}
<script type="text/javascript">
    $(function () {
        window.alreadyExistFileIds = [];
        bindDeleteNewCaseFileBehaviorToDeleteButtons();

        $('#Log_uploader').pluploadQueue({
            url: '@this.Url.Action("UploadLogFile")',
            multipart_params: { Id: '@this.Model.LogFileGuid' },
            max_file_size: '10mb',

            init: {
                FileUploaded: function () {

                    $.get('@this.Url.Action("GetLogFiles")', { id: '@this.Model.LogFileGuid' }, function (files) {
                        refreshLogFilesTable(files);
                    });
                },

                UploadComplete: function (up, file) {
                    //plupload_add
                    $(".plupload_buttons").css("display", "inline");
                    $(".plupload_upload_status").css("display", "inline");
                    up.refresh();
                },

                Error: function (uploader, e) {
                    if (e.status != 409) {
                        return;
                    }

                    window.alreadyExistFileIds.push(e.file.id);
                },

                StateChanged: function (uploader) {
                    if (uploader.state != plupload.STOPPED) {
                        return;
                    }

                    for (var i = 0; i < window.alreadyExistFileIds.length; i++) {
                        var fileId = window.alreadyExistFileIds[i];
                        $('#Log_uploader ul[class="plupload_filelist"] li[id="' + fileId + '"] div[class="plupload_file_action"] a').prop('title', '@Translation.Get("File already exists", Enums.TranslationSource.TextTranslation)');
                    }

                    window.alreadyExistFileIds.length = 0;
                    uploader.refresh();
                }

            }
        });

        $('#Log_upload_files_popup').on('hidden.bs.modal', function () {
            if ($('#Log_uploader') != undefined) {
                if ($('#Log_uploader').pluploadQueue().files.length > 0) {
                    if ($('#Log_uploader').pluploadQueue().state == plupload.UPLOADING)
                        $('#Log_uploader').pluploadQueue().stop();

                    while ($('#Log_uploader').pluploadQueue().files.length > 0) {
                        $('#Log_uploader').pluploadQueue().removeFile($('#Log_uploader').pluploadQueue().files[0]);
                    }
                    $('#Log_uploader').pluploadQueue().refresh();
                }
            }
        });
    });

    function refreshLogFilesTable(files) {
        $('#LogFile_table > tbody > tr').remove();

        var fileMarkup;

        for (var i = 0; i < files.length; i++) {
            var file = files[i];

            fileMarkup =
                $('<tr>' +
                    '<td>' +
                        '<i class="glyphicon glyphicon-file">&nbsp;</i><a style="color:blue" href="@this.Url.Action("DownloadLogFile")?@(!string.IsNullOrEmpty(this.Model.LogFileGuid) ? "id=" + this.Model.LogFileGuid + "&" : string.Empty)' + 'fileName=' + file + '">' + file + '</a>' +
                    '</td>' +
                    '<td>' +
                        '<a id="delete_file_button_' + i + '" class="btn btn-default btn-sm" ><span class="glyphicon glyphicon-remove"></span> </a>' +
                    '</td>' +
                    '</tr>');

            $('#LogFile_table > tbody').append(fileMarkup);
        }

        bindDeleteNewCaseFileBehaviorToDeleteButtons();
    }

    function bindDeleteNewCaseFileBehaviorToDeleteButtons() {
        $('#LogFile_table a[id^="delete_file_button_"]').click(function () {
            var fileName = $(this).parents('tr:first').children('td:first').children('a').text();
            var pressedDeleteFileButton = this;

            $.post('@this.Url.Action("DeleteLogFile")', { id: '@this.Model.LogFileGuid', fileName: fileName }, function () {
                    $(pressedDeleteFileButton).parents('tr:first').remove();
                });
            });
        }



</script>

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.UserInformation))
{
    <input id="CaseId" type="hidden" value="@Model.CasePreview.Id"/>    
    <h4>@Translation.Get("User Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReportedBy.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.ReportedBy
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Name.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.PersonsName
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.PersonsEmail
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.PersonsPhone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.PersonsCellphone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Customer_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Customer_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Customer.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Region_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.Regions.Where(r => r.Id == Model.CasePreview.Region_Id).Select(r => r.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Department_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @if (Model.CasePreview.Department != null)
                            {
                                @Model.CasePreview.Department.DepartmentName
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.OU_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Ou.getOUParentPath()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Place.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Place.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Place
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.UserCode.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.UserCode.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.UserCode
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- User Information Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.ComputerInformation))
{
    <h4>@Translation.Get("Computer Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.InventoryNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.InventoryType
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.InventoryLocation
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Computer Information Fields -->

@if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.CaseInfo))
{
    <h4>@Translation.Get("Case Information", Enums.TranslationSource.TextTranslation) </h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.CaseNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseNumber.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.CaseNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.RegTime.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.RegTime.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @{var _regDate = Model.CasePreview.RegTime.ToLocalTime();}
                            @Html.DisplayFor(r => _regDate)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ChangeTime.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ChangeTime.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @{var _changeDate = Model.CasePreview.ChangeTime.ToLocalTime();}
                            @Html.DisplayFor(c => _changeDate)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.CaseType.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @if (Model.CasePreview.ProductArea != null)
                            {
                                @Model.CasePreview.ProductArea.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.System_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.System_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.Systems.Where(s => s.Id == Model.CasePreview.System_Id).Select(s => s.SystemName).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @if (Model.CasePreview.Urgency != null)
                            {
                                @Model.CasePreview.Urgency.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Impact_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Impact_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Impact_Id
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Category_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @if (Model.CasePreview.Category != null)
                            {
                                @Model.CasePreview.Category.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.Suppliers.Where(s => s.Id == Model.CasePreview.Supplier_Id).Select(s => s.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.InvoiceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.ReferenceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Caption.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Caption
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Description.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Html.Raw(Model.CasePreview.Description)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Miscellaneous
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.ContactBeforeAction
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.SMS.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.SMS.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.SMS
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.AgreedDate.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.AgreedDate.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @{var _agreeDate = Model.CasePreview.AgreedDate.HasValue ? Model.CasePreview.AgreedDate.Value.ToLocalTime().ToString() : string.Empty;}
                            @Html.DisplayFor(a => _agreeDate)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Available.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Available.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            @Model.CasePreview.Available
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Cost.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Cost.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-9">
                            <table class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>@Translation.Get("Item Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Cost
                                    </td>
                                    <td>@Translation.Get("Additional Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.OtherCost
                                    </td>
                                    <td>@Translation.Get("Currency", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Currency
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Filename.ToString()))
                {
                    <div class="form-group row">
                        <label class="col-md-3">
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Filename.ToString(), Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID):
                        </label>
                        <div class="col-md-6">
                            <table id="case_files_table" class="table table-striped">
                                @if (Model.CasePreview.CaseFiles != null)
                                {
                                    foreach (var file in Model.CasePreview.CaseFiles)
                                    {
                                    <tr>
                                        <td>
                                            <a style="color:blue" href="@this.Url.Action("DownloadFile", new RouteValueDictionary { { "id", Model.CasePreview.Id }, { "fileName", file.FileName } })"><i class="icon-file"></i>@file.FileName</a>
                                        </td>
                                    </tr>                                    
                                    }
                                }
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Case Info Fields -->
@if (!Model.CasePreview.FinishingDate.HasValue)
{
<h4>@Translation.Get("Comments", Enums.TranslationSource.TextTranslation) </h4>

<div class="row">
    <div class="col-md-3 dh-col">
        <div class="container form-horizontal">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-8">
                        <label>
                            @Translation.Get("Add comment", Enums.TranslationSource.TextTranslation):
                        </label>
                        <div>
                            <textarea id="logNote" class="col-md-12" style="height: 100px; margin-bottom: 10px;"></textarea>
                        </div>

                        <span>
                            @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.tblLog_Filename.ToString().Replace('_', '.')))
                            {
                                <div class="form-group row">
                                    <div class="col-md-5">
                                        <a href="#Log_upload_files_popup" role="button" class="btn btn-default" data-toggle="modal">@Translation.Get("Add File", Enums.TranslationSource.TextTranslation)</a>
                                        <div id="Log_upload_files_popup" role="dialog" class="modal fade" aria-labelledby="myModalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                                        <h5 class="modal-title">&nbsp;</h5>
                                                    </div>
                                                    <div class="modal-body">
                                                        <div id="Log_uploader"></div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button class="btn btn-default" data-dismiss="modal" aria-hidden="true">@Translation.Get("Close", Enums.TranslationSource.TextTranslation)</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <table id="LogFile_table" class="table table-striped" style="margin-top: 10px">
                                            <tbody>
                                                @if (this.Model.LogFilesModel == null)
                                                {
                                                    <div id="no_uploaded_files_label">
                                                    </div>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                            <button class="btn btn-success" onclick=" SaveLogMessage() ">@Translation.Get("Send", Enums.TranslationSource.TextTranslation)</button>
                        </span>
                        <hr />
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-8">
                        <div id="Receipt_CaseLogPartial" class="onpage com-list">

                            @Html.Partial("_CaseLogNote", pCaseLogs)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}

<script>
    function SaveLogMessage() {
        var note = $('#logNote').val();
        if (note == "") {
            ShowToastMessage('Comment text is empty!', "warning", false);
        } else {
            $.get(SaveMessageUrl, { caseId: '@Model.CasePreview.Id', note: note, logFileGuid: '@Model.LogFileGuid' }, function (_CaseLogNoteMarkup) {
                $('#Receipt_CaseLogPartial').html(_CaseLogNoteMarkup);
                $('#logNote').val('');
                $.get('@this.Url.Action("GetLogFiles")', { id: '@this.Model.LogFileGuid' }, function (files) {
                    $('#LogFile_table > tbody > tr').remove();
                });
            });
        }
    }
</script>



