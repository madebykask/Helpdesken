@using DH.Helpdesk.NewSelfService.Infrastructure
@model DH.Helpdesk.NewSelfService.Models.Case.CaseOverviewModel

@if (Model.CaseFieldGroups.Contains("UserInformation"))
{
    <input id="CaseId" type="hidden" value="@Model.CasePreview.Id"/>    
    <h4>@Translation.Get("User Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ReportedBy"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ReportedBy").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ReportedBy", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ReportedBy
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Persons_Name"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Persons_Name").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Persons_Name", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsName
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Persons_EMail"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                           @{ 
                                var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Persons_EMail").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {  
                                    fieldCaption = Translation.Get("Persons_EMail", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:
                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsEmail
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Persons_Phone"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Persons_Phone").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Persons_Phone", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsPhone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Persons_CellPhone"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Persons_CellPhone").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Persons_CellPhone", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.PersonsCellphone
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Customer_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Customer_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Customer_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Customer.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Region_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Region_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Region_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.Regions.Where(r => r.Id == Model.CasePreview.Region_Id).Select(r => r.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Department_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Department_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Department_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Department != null)
                            {
                                @Model.CasePreview.Department.DepartmentName
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("OU_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "OU_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("OU_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.OU_Id
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Place"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Place").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Place", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Place
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("UserCode"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "UserCode").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("UserCode", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.UserCode
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- User Information Fields -->

@if (Model.CaseFieldGroups.Contains("ComputerInformation"))
{
    <h4>@Translation.Get("Computer Information", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains("InventoryNumber"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "InventoryNumber").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("InventoryNumber", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ComputerType_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ComputerType_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ComputerType_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryType
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("InventoryLocation"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "InventoryLocation").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("InventoryLocation", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InventoryLocation
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Computer Information Fields -->

@if (Model.CaseFieldGroups.Contains("CaseInfo"))
{
    <h4>@Translation.Get("Case Info", Enums.TranslationSource.TextTranslation) </h4>
    <div class="row">
        <div class="col-md-3 dh-col">
            <div class="container form-horizontal">
                @if (Model.FieldSettings.Select(f => f.Name).Contains("CaseNumber"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "CaseNumber").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("CaseNumber", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.CaseNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("RegTime"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "RegTime").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("RegTime", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(r => Model.CasePreview.RegTime, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ChangeTime"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ChangeTime").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ChangeTime", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(c => Model.CasePreview.ChangeTime, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("CaseType_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "CaseType_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("CaseType_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.CaseType.Name
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ProductArea_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ProductArea_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ProductArea_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.ProductArea != null)
                            {
                                @Model.CasePreview.ProductArea.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("System_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "System_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("System_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.Systems.Where(s => s.Id == Model.CasePreview.System_Id).Select(s => s.SystemName).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Urgency_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Urgency_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Urgency_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Urgency != null)
                            {
                                @Model.CasePreview.Urgency.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Impact_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Impact_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Impact_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Impact_Id
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Category_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Category_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Category_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @if (Model.CasePreview.Category != null)
                            {
                                @Model.CasePreview.Category.Name
                            }
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Supplier_Id"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Supplier_Id").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Supplier_Id", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.Suppliers.Where(s => s.Id == Model.CasePreview.Supplier_Id).Select(s => s.Name).FirstOrDefault()
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("InvoiceNumber"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "InvoiceNumber").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("InvoiceNumber", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.InvoiceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ReferenceNumber"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ReferenceNumber").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ReferenceNumber", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ReferenceNumber
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Caption"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Caption").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Caption", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Caption
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Description"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Description").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Description", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Html.Raw(Model.CasePreview.Description)
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Miscellaneous"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Miscellaneous").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Miscellaneous", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Miscellaneous
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("ContactBeforeAction"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "ContactBeforeAction").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("ContactBeforeAction", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.ContactBeforeAction
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("SMS"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "SMS").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("SMS", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.SMS
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("AgreedDate"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "AgreedDate").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("AgreedDate", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Html.DisplayFor(a => Model.CasePreview.AgreedDate, "DateAndTime")
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Available"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Available").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Available", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            @Model.CasePreview.Available
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Cost"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Cost").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Cost", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            <table class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>@Translation.Get("Item Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Cost
                                    </td>
                                    <td>@Translation.Get("Additional Cost", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.OtherCost
                                    </td>
                                    <td>@Translation.Get("Currency", Enums.TranslationSource.TextTranslation)<br />
                                        @Model.CasePreview.Currency
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                }
                @if (Model.FieldSettings.Select(f => f.Name).Contains("Filename"))
                {
                    <div class="form-group row">
                        <label class="col-md-2">
                            @{ 
                    var fieldCaption = Model.FieldSettings.Where(f => f.Name == "Filename").Select(f => f.LabelToChange).SingleOrDefault();
                                if (string.IsNullOrEmpty(fieldCaption))
                                {
                                    fieldCaption = Translation.Get("Filename", Enums.TranslationSource.CaseTranslation, @SessionFacade.CurrentCustomerID);
                                }                                                                    
                            }
                            @fieldCaption:

                        </label>
                        <div class="col-md-10">
                            <table id="case_files_table" class="table table-striped table-bordered table-hover">
                                @if (Model.CasePreview.CaseFiles != null)
                                {
                                    foreach (var file in Model.CasePreview.CaseFiles)
                                    {
                                    <tr>
                                        <td>
                                            <a style="color:blue" href="@this.Url.Action("DownloadFile", new RouteValueDictionary { { "id", Model.CasePreview.Id }, { "fileName", file.FileName } })"><i class="icon-file"></i>@file.FileName</a>
                                        </td>
                                    </tr>                                    
                                    }
                                }
                            </table>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
<!-- Case Info Fields -->


<div class="container" >
    <div class="form-group row">
        <div class="col-md-5">         
            <table class="tableform">
                <tr>
                    @if (!string.IsNullOrEmpty(Model.ReceiptFooterMessage))
                    {
                      <img src="@Url.Content("~/Content/img/Notice.png")" style="width: 16px; height: 16px" />                                               
                      @Html.DisplayFor(m => Model.ReceiptFooterMessage) 
                    }
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>                                                                
            </table>
        </div>           
    </div>       
</div>
    
 
    
    