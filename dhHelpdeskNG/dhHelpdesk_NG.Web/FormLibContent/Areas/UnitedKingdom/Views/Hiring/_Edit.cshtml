@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    var url = Url.CurrentController() + "typeahead";
}

@using(Html.BeginForm("edit", "hiring", new { id = Model.Contract.Id }, FormMethod.Post, new { area = "UnitedKingdom", novalidate = "novalidate" }))
{   
    <span style="display: none;" id="narrowDownInit" url="@url"></span>
    @Html.Partial("_GlobalNavRev", Model)
    <div class="container containeralignright">
        @Html.Partial("_FormInfo", Model)
        @Html.Partial("_ErrorMessage", Model)
        <ul class="nav nav-tabs">
            @if(Model.VisibleTab("#servicerequestdetails"))
            {
                <li class="active @(Model.TabHasError("#servicerequestdetails") ? "error" : "")">
                    <a href="#servicerequestdetails">@Model.Translate("Service Request Details")</a></li>
            }
            @if(Model.VisibleTab("#OrganisationalAssignment"))
            {
                <li class="@(Model.TabHasError("#OrganisationalAssignment") ? "error" : "")">
                    <a href="#OrganisationalAssignment">@Model.Translate("Organisational Assignment")</a></li>
            }
            @if(Model.VisibleTab("#payment"))
            {
                <li class="@(Model.TabHasError("#payment") ? "error" : "")">
                    <a href="#payment">@Model.Translate("Payment Information")</a></li>
            }
            @if(Model.VisibleTab("#personal"))
            {
                <li class="@(Model.TabHasError("#personal") ? "error" : "")">
                    <a href="#personal">@Model.Translate("Personal Information")</a></li>
            }
            @if(Model.VisibleTab("#documents"))
            {
                <li class="@(Model.TabHasError("#documents") ? "error" : "")">
                    <a href="#documents">@Model.Translate("Documents")</a></li>
            }
            @if(Model.VisibleTab("#globalview"))
            {
                <li class="@(Model.TabHasError("#globalview") ? "error" : "")">
                    <a href="#globalview" data-url="@Url.Action("GetGlobalViewFields", new { caseId = Model.Contract.Id, formGuid = Model.FormGuid })">@Model.Translate("Global View")</a></li>
            }
            @if(Model.VisibleTab("#SSCUseOnly"))
            {
                <li class="@(Model.TabHasError("#SSCUseOnly") ? "error" : "")">
                    <a href="#SSCUseOnly">@Model.Translate("SSC Use Only")</a></li>
            }
            @if(Model.VisibleTab("#attachments"))
            {
                <li class="pull-right">
                    <a href="#attachments"><i class="icon-file icon-white"></i>&nbsp;@Model.Translate("Attachments")&nbsp;(<b id="attachmentCounter">@(Model.Contract.CaseFiles != null ? Model.Contract.CaseFiles.Count() : 0)</b>)</a>
                </li>
            }
        </ul>
        <div class="content">
            <div class="row-fluid">
                <div class="tab-content overflow-visible">
                    @if(Model.VisibleTab("#servicerequestdetails"))
                    {
                        @Html.Partial("_TabServiceRequestDetails", Model)
                    }
                    @if(Model.VisibleTab("#OrganisationalAssignment"))
                    {
                        @Html.Partial("_TabOrganisationalAssignment", Model)
                    }
                    @if(Model.VisibleTab("#payment"))
                    {
                        @Html.Partial("_TabPayment", Model)
                    }
                    @if(Model.VisibleTab("#personal"))
                    {
                        @Html.Partial("_TabPersonal", Model)
                    }
                    @if(Model.VisibleTab("#documents"))
                    {
                        @Html.Partial("_TabDocuments", Model)
                    }
                    @if(Model.VisibleTab("#SSCUseOnly"))
                    {
                        @Html.Partial("_TabSsc", Model)
                    }
                    @if(Model.VisibleTab("#globalview"))
                    {
                        @Html.Partial("_TabGlobalView", Model)
                    }
                    @if(Model.VisibleTab("#attachments"))
                    {
                        @Html.Partial("_GlobalAttachments", Model)
                    }
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="activeTab" name="activeTab" value="@Model.ActiveTab" />
}

<script type="text/javascript">

    // Could be placed in separate js file.
    // country selectized ... will descrease loading time with 1/2. 
    // located in _edit.cshtml and new.schtml
    var selectize_options = {
        valueField: 'Value',
        labelField: 'Value',
        searchField: 'Value',
        create: false,
        render: {
            option: function (item, escape) {
                return '<div>' +
                    '<span class="title">' +
                        '<span class="name">' + escape(item.Value) + '</span>' +
                    '</span>' +
                '</div>';
            }
        },
        load: function (query, callback) {
            if (!query.length) return callback();

            $.ajax({
                url: '@Url.CurrentController()CountrySearchUK/?query=' + encodeURIComponent(query) + "&=" + Math.random(),
                type: 'GET',
                error: function () {
                    callback();
                },
                success: function (res) {
                    callback(res.options.slice(0, 10));
                }
            });
        }
    };

    $('#PermanentCountry, #OrganisationCountry, #MailingCountry, #EmergencyCountry, ' +
        '#EmployeeDocumentCountry, #EmployeeDocumentIssuePlaceCountry, #EmployeeDocumentCountry2, ' +
        '#EmployeeDocumentIssuePlaceCountry2, #EmployeeDocumentCountry3, #EmployeeDocumentIssuePlaceCountry3, ' +
        '#EmployeeDocumentCountry4, #EmployeeDocumentIssuePlaceCountry4, #EmployeeDocumentCountry5, #EmployeeDocumentIssuePlaceCountry5 , ' +
        '#DependantsDocumentCountry, #DependantsDocumentIssuePlaceCountry, #DependantsDocumentCountry2, #DependantsDocumentIssuePlaceCountry2, ' +
        '#DependantsDocumentCountry3, #DependantsDocumentIssuePlaceCountry3, #DependantsDocumentCountry4, #DependantsDocumentIssuePlaceCountry4, ' +
        '#DependantsDocumentCountry5, #DependantsDocumentIssuePlaceCountry5, #BankCountry, #DocumentCountryOfIssue, #DocumentCountryOfUse')
        .each(function (e, i) {
            var _this = $(this);
            if (!_this[0].selectize) {
                _this.selectize(selectize_options);
            }
        });

        //InitIntegration();

        function changeFunctionsCallback() {
            //setTimeout(function () { GetXML('predefined_function_department_linemanager_outs.xml', setLineManagerAndCostCentre); }, 1);

            //setTimeout(function () { GetXML('predefined_function_jobtitleUK_outs.xml', setLineManagerJobTitle); }, 1);


            GetXML('predefined_function_jobtitleUK_outs.xml', NarrowDownJobTitle);


            function NarrowDownJobTitle(xml) {
                var show = ''

                var dep = '';
                var bus = '';

                if (document.getElementById('ServiceArea')) {
                    dep = $("#ServiceArea option:selected").text();
                }

                if (document.getElementById('BusinessUnit')) {
                    bus = $("#BusinessUnit option:selected").text();
                }


                var jobtitle_value;
                jobtitle_value = $('#JobTitle').val();

                $('#JobTitle').val("");

                var selectize_tags = $("#JobTitle")[0].selectize
                selectize_tags.clearOptions();


                $(xml).find('dependent').each(function () {


                    var $sel = $(this);
                    show = '';

                    var department = $sel.find('selected').text();

                    show = $sel.find('show').text();

                    if (department == dep) {

                        if (show != '') {

                            show = ' ,' + show;

                            //temp, replace spaces that occours in the beginning of comma separation.
                            show = show.replace(/\, /g, ",");

                            var optionsarray = show.split(',');
                            optionsarray.unshift('');

                            //TEMP for Steering Group_Doncaster, Sales (problem with commas in the name) so we use  #
                            if (show.indexOf("#") > -1) {
                                $.each(optionsarray, function (i) {
                                    optionsarray[i] = optionsarray[i].replace(/\#/g, ",");
                                });
                            }

                            var items = optionsarray.map(function (x) { return { text: x, value: x }; });
                            selectize_tags.addOption(items);

                            if (jobtitle_value != '')
                                selectize_tags.setValue(jobtitle_value);
                            else
                                selectize_tags.setValue('');
                            return;
                        }
                    }

                });

                var jobtitleoptions = $('#JobTitle')[0].selectize.options;
                var jobtitleoptionslength = Object.keys(jobtitleoptions).length;
                if (jobtitleoptionslength == 0) {
                    GetXML('Data_JobTitle.xml', SetAllJobtitles);
                }

            }
        }
</script>
