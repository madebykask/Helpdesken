@model DH.Helpdesk.EForm.FormLib.Models.FormModel
@using DH.Helpdesk.EForm.FormLib;
@using DH.Helpdesk.EForm.FormLib.Models;
@using DH.Helpdesk.EForm.FormLib.Pdfs;
@using System.Globalization;
@using DH.Helpdesk.EForm.Model.Entities;

@{
    Layout = null;
    Model.Language = "en";

    //set fields that are mandatory in the contract here. This can be done in a better way... /TA
    Model.SetDocumentMandatoryField("ServiceArea");
    Model.SetDocumentMandatoryField("ContractStartDate");
    Model.SetDocumentMandatoryField("InductionStartTime");
    Model.SetDocumentMandatoryField("DateOfNextSalaryReview");
}
<!DOCTYPE html>
<html>
<body>
    <div>     
         @*  // Printing the Date has been moved to UnitedKingdomPdfPage class
        <table style="font-family: Verdana; font-size: 11px; width: 100%;" border="1">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>*@

        @*<p style="text-align: left; font-family: Verdana; font-size: 10px;">*@
            <p style="@UnitedKingdomPdfPage.StyleValue()">
         @*   <strong>PRIVATE & CONFIDENTIAL</strong><br />
            @Html.Partial("_HeaderAddress", Model)*@
            Dear @Model.GetDocumentAnswer("FirstName", true),<br /><br />
            I am very pleased to be able to confirm to you our offer of the permanent position of @Model.GetDocumentAnswer("JobTitle", true) within the @UnitedKingdomPdfPage.GetServiceAreaText("ServiceArea", Model) at the IKEA UK & IE Contact Centre based in Peterborough.
        <br />
            <br />
            The principal Terms and Conditions of your employment will be as follows:<br /><br />
        </p>
        @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();

            var brText = "<br /><br />";

            //1
            string text1 = "Your first day of employment with the UK & IE Contact Centre, " + CustomPdfPage.IsEmpty(Model.Department.StrAddr, "StrAddr") + " will be on " + CustomPdfPage.GetDateInWords("ContractStartDate", Model) + ".";
            list.Add(new PdfListItem { Text = text1 });

            //2
            string text2 = "Please report to reception on your first day at " + CustomPdfPage.GetAmPm("InductionStartTime", Model) + ".";
            list.Add(new PdfListItem { Text = text2 });

            //3
            string text3 = "The " + UnitedKingdomPdfPage.GetServiceAreaText("ServiceArea", Model) + " is your primary area of work. You will on occasions be expected to work in other areas within the Contact Centre to support the business need.";
            list.Add(new PdfListItem { Text = text3 });

            //4
            string text4 = "Your hours of work will be " + Model.GetDocumentAnswer("ContractedHours", true) + " hours per week over 5 days, Sunday – Saturday including evenings and weekends.";
            list.Add(new PdfListItem { Text = text4 });

            //5
            string text5 = "Your starting salary will be &pound;" + Model.GetDocumentAnswer("BasicPayAmount", true);

            //Add PayInfoText
            text5 += UnitedKingdomPdfPage.GetPayInfoText(Model);
            text5 += " Next review date will be " + CustomPdfPage.GetDateInWords("DateOfNextSalaryReview", Model) + ".";
            text5 += "<br />";
            list.Add(new PdfListItem { Text = text5 });

            //6
            string text6 = "Your annual holiday entitlement per calendar year is " + Model.GetDocumentAnswer("HolidayFull", true) + " hours this includes compensatory holiday entitlement (to cover annual public holidays). Holiday entitlement runs from 1st September – 31st August and is calculated on a pro rata basis. Your holiday entitlement for the current holiday year is " + Model.GetDocumentAnswer("HolidayCurrent", true) + " hours.";
            list.Add(new PdfListItem { Text = text6 });

            //7
            string text7 = "Untaken basic holiday can only be carried forward with prior permission from the UK & IE Contact Centre Manager. See the co-worker handbook for details of when holiday can be taken.";
            text7 += "<br /><br/>";
            text7 += "You must save holiday hours for days of Contact Centre closure when you would normally be scheduled to work.";
            list.Add(new PdfListItem { Text = text7 });

            //BENEFITS
            string benefit1Text = UnitedKingdomPdfPage.GetBenefit1Text(Model);

            if (!string.IsNullOrEmpty(benefit1Text))
            {

                benefit1Text.Insert(0, "<br /><br />");
                list.Add(new PdfListItem { Text = benefit1Text });
            }

            string benefit4Text = UnitedKingdomPdfPage.GetBenefit4Text(Model);

            if (!string.IsNullOrEmpty(benefit4Text))
            {
                benefit4Text.Insert(0, "<br /><br />");
                list.Add(new PdfListItem { Text = benefit4Text });
            }
            //BENEFITS END
       

            //8
            string text8 = "Your employment will be probationary for the first six months. During your probationary period, you will be given advice and support to enable you to meet the expectation of the job and your performance will be assessed to determine suitability for the role. The probationary period may be extended at the company’s discretion, but will not, in any case, exceed nine months.  The notice during your probationary period is one week from either side. If it is agreed your probationary period is extended beyond your first six months' then your notice period will remain as one week from either side. Likewise, where you intend to resign from your employment, during your probationary period you will be required to give the company one weeks notice in writing. Beyond the probationary period and up to four years service you will give / be given four weeks notice in writing.";
            list.Add(new PdfListItem { Text = text8 });

            //9
            string text9 = "IKEA reserves the right to terminate your employment, without notice, in cases of gross misconduct. IKEA reserves the right to make a payment in lieu of notice.";
            list.Add(new PdfListItem { Text = text9 });

            //10
            string text10 = "The nature of your work involves access to sensitive personal information, which under the Data Protection Act 1998 must be protected to uphold an individual’s rights. As a data user you have a legal duty to protect the information you handle. You are required to follow IKEA data protection and security policies at all times and are bound by confidentiality.";
            list.Add(new PdfListItem { Text = text10 });


            //MEDICAL INFO
            ////11
            string text11 = "You will be required to complete a Medical Questionnaire (and Food Questionnaire if applicable to your role). Please note that this is offer of employment is subject to a satisfactory outcome.<br />";
            list.Add(new PdfListItem { Text = text11 });
            
            //if (Model.GetDocumentAnswer("BusinessUnit").ToLower() == "IKEA Contact Centre".ToLower())
            //{
                
            //}
            //MEDICAL INFO END    
         

            //12
            string text12 = "In order to comply with Asylum and Immigration Act 1996, this offer is made on the condition that you are legally entitled to work in the UK and that you provide proof of this on or <b>prior</b> to your first day at work. Please bring one of the original documents listed below:";
            list.Add(new PdfListItem { Text = text12 });

            pdfList = new List<PdfListItem>();

            pdfList.Add(new PdfListItem { Text = "Your passport showing British citizenship or right of abode in the United Kingdom" });
            pdfList.Add(new PdfListItem { Text = "A document showing that you are a national of a European Economic Area country or Switzerland (this must be a passport or national identity card)" });
            pdfList.Add(new PdfListItem { Text = "A residence permit issued by the Home Office to a national from a European Economic Area country or Switzerland" });
            pdfList.Add(new PdfListItem { Text = "A passport or other document issued by the Home Office which has an endorsement stating that you have a current right of residence in the United Kingdom as the family member of a national from a European Economic Area country or Switzerland, who is resident in the United Kingdom" });
            pdfList.Add(new PdfListItem { Text = "A passport or other travel document endorsed to show that you can stay indefinitely in the United Kingdom, or has no time limit on their stay" });
            pdfList.Add(new PdfListItem { Text = "A passport or other travel document endorsed to show that you can stay in the United Kingdom; and that the endorsement allows you to do the type of work being offered, if you do not have a work permit" });
            pdfList.Add(new PdfListItem { Text = "An Application Registration Card issued by the Home Office to an Asylum Seeker stating that you are permitted to take employment" });
            list[list.Count - 1].SubList = pdfList;

            string text12b = "If you are unable to provide the original documentation listed above you will be required to bring documentation from a secondary list, the details of which are available from the Human Resources department. If you have any questions relating to the above, please contact the Human Resources department on " + CustomPdfPage.IsEmpty(Model.Department.TelNbr, "TelNbr") + " prior to your first day of work.";
            text12b += "<br />";

            var newList = new List<PdfListItem>();
            newList.Add(new PdfListItem { Text = text12b });

            list[list.Count - 1].SubList2 = newList;


            string text13 = "On your first day please bring along with you the following:";

            text13 += "<table border='0'><tr><td width='5%' valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>1.</td><td valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>Bank/Building Society details.</td>";
            text13 += "<tr><td width='5%' valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>2.</td><td valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>Your P45 if you have one.</td></tr>";
            text13 += "<tr><td width='5%' valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>3.</td><td valign=" + "top" + " CELLPADDING= 1 style='UnitedKingdomPdfPage.StyleValue()'>Official proof of your National Insurance number, for example your National Insurance card or an original letter from a government agency. If you do not have a National Insurance number you must provide proof that you have applied for one within the first month of employment.</td></tr></table>";
            
            list.Add(new PdfListItem { Text = text13 });

            //14
            string text14 = "IKEA reserves the right to vary terms and conditions of employment subject to consultation and reasonable notice.";
            list.Add(new PdfListItem { Text = text14 });
              
        }

        @if (list.Count > 1)
        {
            <table border="0">
            @for (int i = 0; i < list.Count; i++)
            {             
                 <tr>
                    <td width="5%" valign="top" CELLPADDING=4 style="@UnitedKingdomPdfPage.StyleValue()">@(i + 1). </td>                 
                    <td width="95%" valign="top" CELLPADDING=4>                                               
                    <p style="@UnitedKingdomPdfPage.StyleValue()">@Html.Raw(list[i].Text)</p>
                @if (list[i].SubList != null && list[i].SubList.Count > 0)
                {
                    <table border="0">
                    @foreach (var item in list[i].SubList)
                    {
            
                       <tr>
                            <td width="2%" valign="top"> &bull;</td> 
                            <td width="98%" valign="top"><p style="@UnitedKingdomPdfPage.StyleValue()">@Html.Raw(item.Text)</p></td> 
                       </tr>         
            
                    }
                        </table>
                }

                @if (list[i].SubList2 != null && list[i].SubList2.Count > 0)
                {
                    foreach (var item in list[i].SubList2)
                    {
                      <br />            
                      <p style="@UnitedKingdomPdfPage.StyleValue() padding-right: 50px;">@Html.Raw(item.Text)</p>                                             
                    }
                }
                        </td>
                </tr>
            }
        </table>
        }
        else
        {
            for (int i = 0; i == list.Count - 1; i++)
            {           
              <p style="@UnitedKingdomPdfPage.StyleValue()">@Html.Raw(list[i])</p>                
            }
        }

        <br />
        <p style="@UnitedKingdomPdfPage.StyleValue()">
            This letter, together with the Terms and Conditions Appendix and Section 1 of the Co-worker handbook forms the basis of your contract.
        </p>
        <endpage />
    </div>
</body>
</html>
