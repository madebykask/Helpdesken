@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using ECT.Model.Entities;


@functions{           
    public class ContractItems
    {
        public ContractItems(int id, string rule, string answer)
        {
            this.Id = id;
            this.Rule = rule;
            this.Answer = answer;
        }

        public int Id { get; set; }
        public string Rule { get; set; } 
        public string Answer { get; set; }
        
    }
 }

@{
    Layout = null;
    Model.Language = "nl";

    int payscalelevel = 0;

    try
    {
        payscalelevel = int.Parse(Model.GetDocumentAnswer("PayScaleLevel"));
    }
    catch (Exception)
    {
    }

    int allowancesamountunits = 0;

    try
    {
        allowancesamountunits = int.Parse(Model.GetDocumentAnswer("AllowancesAmountUnits"));
    }
    catch (Exception)
    {
    }

}

@functions{
     public static bool dateRange(DateTime? startDate, DateTime? endDate, int months, int days)
                {
                    if (!startDate.HasValue || !endDate.HasValue) return false;
                    DateTime a = startDate.Value.AddMonths(months);
                    a = a.AddDays(days);
                    int result = DateTime.Compare(endDate.Value, a);
                    return result >= 0;
                }
}
<!DOCTYPE html>
<html>
<head>
    @*<link href="@Model.Contract.BaseUrl/FormLibContent/assets/css/documents.css" rel="stylesheet" type="text/css" />*@
    @Model.GetStyleAnswer("GetStyleLink")
    @Html.Partial("../Shared/Pdfs/_Styles", Model)
    @Model.GetStyleAnswer("GetStyles")
</head>
<body>
    <div class="default-page">
        @Html.Partial("../Shared/Pdfs/_Debug", Model)
        @Html.Partial("../Shared/Pdfs/_SectionAddressTop", Model, new ViewDataDictionary { { "HeaderName", "Persoonlijk/Vertrouwelijk" } })
        <p>
            Betreft: arbeidsovereenkomst vakantiekracht<br />
            <br /><br />
            Beste @Model.GetDocumentAnswer("FirstName", true),
        </p>

        <p>Gefeliciteerd met je vakantiebaan! Met dit welkomstpakket verwelkomen we je als nieuwe collega bij IKEA. Met het boekje Mijn IKEA willen we laten zien waar IKEA voor staat en geven we praktische informatie over werken bij IKEA. Daarnaast informeren we je in deze brief graag over jouw indiensttreding en de daarbij behorende documenten.</p>
        <p>Tijdens het sollicitatiegesprek zijn er al een aantal gegevens verzameld. Aan de hand van deze persoonlijke gegevens en de eerder besproken arbeids-voorwaarden is een arbeidsovereenkomst opgesteld. Jouw arbeidsovereenkomst is in tweevoud meegestuurd. Graag ontvangen wij hiervan één getekend exemplaar retour. Het andere exemplaar kan je gebruiken voor je eigen administratie. De IKEA CAO, de IKEA Group Code of Conduct en de regels die zijn opgenomen in Mijn IKEA maken ook onderdeel uit van jouw arbeidsovereenkomst. Mocht je het met één of meerdere bepalingen uit het contract niet eens zijn, dan ontvangen wij je reactie graag schriftelijk binnen 7 dagen.</p>

        Verder vind je nog de volgende zaken bijgesloten:
        <ul class="nomargin_ul">
            @*SG . commented because WO #57242*@
            <li>Een toelichting op je salarisbetaling bij IKEA.</li>
            <li>Daarnaast wil IKEA graag weten of je loonheffingskorting wilt toepassen over het salaris dat je ontvangt. Je kan dit aangeven op de bijgevoegde loonbelastingverklaring.</li>
            <li>Bijlage ‘Altijd toegang tot jouw IKEA’, hier kan je onderstaande zaken bekijken.</li>
            <ul class="dash_ul">
                <li>&nbsp;&nbsp;HR gerelateerde informatie, waaronder de IKEA CAO</li>
                <li>&nbsp;&nbsp;Rooster</li>
            </ul>
        </ul>
                
        <p>Om je indiensttreding volledig te kunnen maken ontvangen wij graag binnen 5 dagen de volgende documenten retour:</p>
            <ul>
                <li>één ondertekend exemplaar van je arbeidsovereenkomst</li>
                <li>een ingevulde loonbelastingverklaring</li>
                <li>een ingevuld formulier persoonsgegevens </li>
            </ul>

<p>Je kan deze documenten retour sturen in de bijgesloten antwoordenvelop.</p>

        <p>Graag willen we je er op wijzen dat zonder deze documenten je arbeidsovereenkomst niet volledig is. Dit heeft gevolgen voor de start van jouw dienstverband en salarisbetaling.</p>

        <p>Om jouw werktijden te registreren krijg je een leenpas van IKEA. Deze pas kun je ophalen bij de receptie van jouw vestiging/unit.</p>

        <p>We hopen je hiermee voldoende te hebben geïnformeerd. Heb je vragen over je contract of over de andere documenten dan kan je contact opnemen met je leidinggevende of de HR afdeling van jouw vestiging.</p>
        <br />

        <p>We wensen je veel succes!</p
       
        <table class="table-full-width">
            <tr>
                <td>@Html.Partial("../Shared/Pdfs/_SignatureOnlyManager", Model)</td>
                <td></td>
            </tr>
            <tr>
                <td colspan="2" style="float:right;">
                @Html.Partial("../Shared/Pdfs/_SectionLineManagerPhoneHoliday", Model)
                </td>
            </tr>
        </table>

       
            @*<table>
                <tr style="page-break-before: always;">
                    <td>&nbsp;</td>
                </tr>
            </table>*@
        
        @Html.Partial("../Shared/Pdfs/_FormPersonalDataHoliday", Model)
            
        <table>
            <tr style="page-break-before: always;">
                <td>&nbsp;</td>
            </tr>
        </table>

            <div>
                @Html.Partial("../Shared/Pdfs/_BarCode", Model)
            </div>
            <br />
            <br />
            <br />
            <h1 id="h1NotBoldAndUnderline">ARBEIDSOVEREENKOMST VOOR VAKANTIEKRACHTEN</h1><br />
            @Html.Partial("../Shared/Pdfs/_SectionAddressHoliday", Model)

            <p>
                Hierna te noemen vakantiekracht, wordt een arbeidsovereenkomst afgesloten waarvan de voorwaarden als volgt luiden:
            </p>

            @{
                var list = new List<PdfListItem>();
                var pdfList = new List<PdfListItem>();
                int Number = 1;
                int Letter = 0;

                //1
                string text1 = "Met ingang van " + Model.GetDocumentAnswer("ContractStartDate", true) + " treedt de vakantiekracht bij de werkgever in dienst.";
                list.Add(new PdfListItem { Text = text1, Number = Number.ToString() });
                Number = Number + 1;

                //2
                string text2 = "De vakantiekracht wordt aangesteld in de vestiging " + Model.GetDocumentAnswer("BusinessUnit", true) + " en is ingedeeld in functieschaal 03.";
                list.Add(new PdfListItem { Text = text2, Number = Number.ToString() });
                Number = Number + 1;

                //3
                string text3 = "Deze arbeidsovereenkomst wordt afgesloten voor bepaalde tijd van " + Model.GetDocumentAnswer("ContractStartDate", true) + " tot en met " + Model.GetDocumentAnswer("ContractEndDate", true) + " en eindigt derhalve van rechtswege aan het einde van de overeengekomen periode, zonder dat hiervoor enige opzegging is vereist.";
                list.Add(new PdfListItem { Text = text3, Number = Number.ToString() });
                Number = Number + 1;

                //4
                //Number = list.Count() + 1;
                string text4 = "Partijen zijn gerechtigd om de arbeidsovereenkomst tussentijds op te zeggen met inachtneming van de wettelijke opzegtermijn.";
                list.Add(new PdfListItem { Text = text4, Number = Number.ToString() });
                Number = Number + 1;

                //5
                //Number = list.Count() + 1;
                string text5 = "Het gemiddeld aantal te werken uren per week bedraagt " + Model.GetDocumentAnswer("ContractedHours", true) + " uur. De vakantiekracht behoort tot de categorie uurloon parttimer. De vakantiekracht is conform de IKEA CAO flexibel in tijd en uren in te roosteren tijdens weekdagen, zaterdagen en op zon- en feestdagen en verklaart zich hiermee uitdrukkelijk akkoord.";
                list.Add(new PdfListItem { Text = text5, Number = Number.ToString() });
                Number = Number + 1;

                //6
                string text6 = "Op grond van de <text style=\"font-style: italic;\"><span>‘Bijlage bij het contract betreffende Protocol 4’ </span></text>die aan de overeenkomst is toegevoegd en eveneens door vakantiekracht is ondertekend, wordt tussen partijen geen maximum verbonden aan het aantal door vakantiekracht te werken koopavonden, zaterdagavonden, zaterdagen, zondagen en feestdagen per jaar.";
                list.Add(new PdfListItem { Text = text6, Number = Number.ToString() });
                Number = Number + 1;

                //7
                string text7 = "Salaris: <br />a: Het salaris bedraagt EUR " + Model.GetDocumentAnswer("BasicPayAmount", true) + " bruto per uur.<br />b: De tegemoetkoming in de reiskosten wordt berekend conform IKEA CAO artikel 29B.";
                list.Add(new PdfListItem { Text = text7, Number = Number.ToString() });
                Number = Number + 1;

                //8
                string text8 = "Op deze arbeidsovereenkomst is de laatst overeengekomen IKEA CAO van toepassing. Daarnaast zijn de IKEA Group Code of Conduct en de regels die zijn opgenomen in Mijn IKEA van toepassing. De IKEA CAO en de IKEA Group Code of Conduct zijn te raadplegen op en downloaden via de internetsite <text style=\"color: blue; text-decoration: underline;\"><span>www.ico-worker.com/nl</span></text>. In de bijgesloten brief staat waar je deze documenten kan vinden. Op verzoek van de vakantiekracht stuurt IKEA een digitale versie per e-mail of een geprinte versie per gewone post toe van de toepasselijke regels. Het boekje Mijn IKEA ontvang je tegelijk met deze arbeidsovereenkomst.";
                list.Add(new PdfListItem { Text = text8, Number = Number.ToString() });
                Number = Number + 1;

                pdfList = new List<PdfListItem>();

                list[list.Count - 1].SubList = pdfList;

            }


            @if (list.Count > 1)
            {
                <table>
                    @for (int i = 0; i < list.Count; i++)
                    {
                        //style="page-break-inside: avoid;"
                        <tr>
                            <td>
                                @if (list[i].Number != null)
                                {<text>@list[i].Number.</text> }
                            </td>
                            <td style="padding-bottom: 10px !important;">
                                @Html.Raw(list[i].Text)
                                @if (list[i].SubList != null && list[i].SubList.Count > 0)
                                {
                                    <table border="0">
                                        @foreach (var item in list[i].SubList)
                                        {
                                            <tr>
                                                <td valign="top">&bull;</td>
                                                <td valign="top">@Html.Raw(item.Text)</td>
                                            </tr>
                                        }

                                    </table>
                                }

                            </td>
                        </tr>
                    }
                </table>
            }

            <table>

                <tr style="page-break-inside: avoid">

                    <td>
                        <table>
                            <tr>
                                <td colspan="2">
                                    De vakantiekracht verklaart hiermee voorafgaande aan ondertekening van de arbeidsovereenkomst kennis te hebben genomen van de IKEA CAO, de IKEA Group Code of Conduct en de regels in Mijn IKEA en verder met het bovenstaande akkoord te gaan.
                                    <br />
                                    <br />@Html.Partial("../Shared/Pdfs/_CityDate", Model)
                                </td>
                            </tr>
                            <tr>

                                <td colspan="2">
                                    @Html.Partial("../Shared/Pdfs/_Signature", Model)
                                </td>

                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            @*@Html.Partial("../Shared/Pdfs/Appendix2", Model)*@
            @Html.Partial("../Shared/Pdfs/Appendix2", Model, new ViewDataDictionary { { "SignatureText", "vakantiekracht" } })

        <table>
            <tr style="page-break-before: always;">
                <td>&nbsp;</td>
            </tr>
        </table>

            @Html.Partial("../Shared/Pdfs/AppendixExplanationSalary", Model)

    </div>
</body>
</html>
