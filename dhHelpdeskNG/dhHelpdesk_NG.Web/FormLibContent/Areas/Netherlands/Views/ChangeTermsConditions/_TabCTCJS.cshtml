@model DH.Helpdesk.EForm.FormLib.Models.FormModel
@using DH.Helpdesk.EForm.FormLib;
@using DH.Helpdesk.EForm.FormLib.Models;

<script>
    var timeIt = function() {
        var o = $("#ContractedHours");

        if (o.length > 0)
            $("#ContractedHours").change();
    }

    setInterval(timeIt, 3000);

    // Fix: Prevent to change saved JobTitle by SetDefJobTitle method S.G
    // ToDo: Should do SetDefJobTitle only after "Selectize.OnClick()"

    var maxLocalJobTitleDefCount = 2;
    var SetDefCount;

    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

    var noticeOldDate = $('#notice_OldDate');
    $('#date_ChangeValidFrom').not(".disabled").datepicker({
        onRender: function (date) {
            return '';
        }
    }).on('changeDate', function (ev) {

        noticeOldDate.hide();

        if (ev.date.valueOf() < now.valueOf())
            noticeOldDate.show();
    }).data('datepicker');

    $('#ChangeValidFrom').change(function () {
        var validFrom = $('#ChangeValidFrom').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dvalidFrom = APIGlobal.DateTime.parseDate(validFrom, format);
        noticeOldDate.hide();
        if (dvalidFrom.valueOf() < now.valueOf())
            noticeOldDate.show();
    });

    $('#NameOfSchool').attr("disabled", true);
    $('#NameOfEducation').attr("disabled", true);
    $('#CityEducationSchool').attr("disabled", true);
    $('#LevelOfEducation').attr("disabled", true);
    $('#MentorAtIKEA').attr("disabled", true);

    //// OrganisationalAssignment
    var lockedbyUserGroup = document.getElementById('LockedByUserGroup').getAttribute('status');
    if ("@Model.ReadOnlyTab("#OrganisationalAssignment")" == 'False' && lockedbyUserGroup == 'False') {
        $(function () {

            if ($('#LocalJobTitle').val() != '')
                SetDefCount = 0;
            else
                SetDefCount = maxLocalJobTitleDefCount;

            function setEmployeeBehavior(value) {
                if (value == 'Permanent') {
                    $('#date_ContractEndDate').datepicker("destroy");
                    $('#date_ContractEndDate').addClass("disabled");
                    $('#ContractEndDate').prop('disabled', true);
                    $('#ContractEndDate').val("");
                }
                else {
                    $('#date_ContractEndDate').datepicker();
                    $('#ContractEndDate').prop('disabled', false);
                    $("#ContractEndDate").removeClass("disabled");
                }
            }

            if ($('#EmploymentCategory').val() == 'Permanent') {
                $('#date_ContractEndDate').datepicker("destroy");
                $('#date_ContractEndDate').addClass("disabled");
                $('#ContractEndDate').prop('disabled', true);
                $('#ContractEndDate').val("");
            }

            BlockApprenticefields();

            $('#EmploymentCategory').change(function () {
                setEmployeeBehavior($(this).val());
                BlockApprenticefields();
                setdeductionvalidto();
            });

            //$("#NewBusinessUnit").change(function () {
              
            //    setTimeout(function () { GetXML('Predefined_BusinessUnit_LocalJobTitle.xml', narrowDownBusinessUnitLocalJobTitle); }, 1);
            //});


        }); // END Function

        function selectIndexChangeLineManagertoTECApprover() {
            document.getElementById('TECApprover').value = document.getElementById('ReportsToLineManager').value;
        }
        document.getElementById('ReportsToLineManager').onchange = selectIndexChangeLineManagertoTECApprover;

        //function selectIndexChangeBusinessUnittoPrimarySite() {
        //    document.getElementById('PrimarySite').value = document.getElementById('NewBusinessUnit').value;
        //}
        //document.getElementById('NewBusinessUnit').onchange = selectIndexChangeBusinessUnittoPrimarySite;

        var changeType = document.getElementById('ChangeType').value;
        if (changeType == 'ONLY extend temporary contract') {
            $("#EmploymentCategory option").each(function () {
                $(this).prop('disabled', true);
            });
            $('#EmploymentCategory').find("option[value*='Temporary']").prop("disabled", false);
        }

        $('#NewBusinessUnit').change(function () {
            setDefaultPrimarySite();
            GetXML('Predefined_BusinessUnit_LineManager.xml', narrowDownBusinessUnitLineManager);
            GetXML('Predefined_BusinessUnit_LocalJobTitle.xml', narrowDownBusinessUnitLocalJobTitle);
        });

        var setDefaultPrimarySite = function () {
            var bu = $("#NewBusinessUnit option:selected").text();
            $('#PrimarySite').val(bu)
        }


        $('#ReportsToLineManager').change(function () {
            var value = $(this).val();
            if ($('#ReportsToLineManager')[0].selectize) {
                var selectedText = $('#ReportsToLineManager')[0].selectize.getItem(value).text();

                if ($('#TECApprover')[0].selectize)
                    $('#TECApprover')[0].selectize.setValue(selectedText);
                else
                    $('#TECApprover').val(selectedText);
            } else {
                var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                if ($('#TECApprover')[0].selectize)
                    $('#TECApprover')[0].selectize.setValue(selectedText);
                else
                    var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                $('#TECApprover').val(selectedText);
            }
        });

        $('#NewDepartment').change(function () {
            GetXML('Predefined_Department_CostCentre.xml', setCostCentre);
            GetXML('Predefined_Department_ReportsToLineManager.xml', setDepartmentLineManager);
        });

        $('#LocalJobTitle').change(function () {
            GetXML('Predefined_LocalJobTitle_JobTitle.xml', setLocalJobTitle);
        });   

        function setDepartmentLineManager(xml) {
            var baseDepartment = $("#NewDepartment option:selected").text();

            $(xml).find('dependent').each(function () {
                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();
                show = $sel.find('show').text();

                if (department == baseDepartment) {

                    if (show != '') {
                        var n = show.indexOf("#");

                        if (n == -1) {
                            if ($('#ReportsToLineManager')[0].selectize)
                                $('#ReportsToLineManager')[0].selectize.setValue(show);
                            else
                                $('#ReportsToLineManager').val(show);
                        } else {
                            var res = show.substring(0, n);
                            if ($('#ReportsToLineManager')[0].selectize)
                                $('#ReportsToLineManager')[0].selectize.setValue(res);
                            else
                                $('#ReportsToLineManager').val(show);
                        }
                        return;
                    }
                }
            });
        }

        function narrowDownBusinessUnitLineManager(xml) {
            var show = '';
            var baseNewBusinessUnit = '';

            if (document.getElementById('NewBusinessUnit')) {
                baseNewBusinessUnit = $("#NewBusinessUnit option:selected").text();
            }

            var report_value;
            report_value = $('#ReportsToLineManager').val();

            $('#ReportsToLineManager').val('');

            var selectize_tags = $("#ReportsToLineManager")[0].selectize
            selectize_tags.clearOptions();


            $(xml).find('dependent').each(function () {
                var $sel = $(this);
                show = '';
                var newBusinessUnit = $sel.find('selected').text();
                show = $sel.find('show').text();

                if (newBusinessUnit == baseNewBusinessUnit) {
                    if (show != '') {
                        //show = ' ,' + show;

                        //temp, replace spaces that occours in the beginning of comma separation.
                        show = show.replace(/\, /g, ",");

                        var optionsarray = show.split(',');
                        optionsarray.unshift('');

                        var items = optionsarray.map(function (x) { return { text: x, value: x }; });
                        selectize_tags.addOption(items);
                        if (report_value != '') {
                            selectize_tags.setValue(report_value);

                        }
                        else
                            selectize_tags.setValue('');
                        return;
                    }
                }
            });
        }       

        function narrowDownBusinessUnitLocalJobTitle(xml) {           

            var show = '';
            var baseBusinessUnit = '';

            if (document.getElementById('NewBusinessUnit')) {
                baseBusinessUnit = $("#NewBusinessUnit option:selected").text();
            }

            //var selectize_tags;

            //selectize_tags = $('#LocalJobTitle')[0].selectize;
            //selectize_tags.clearOptions();

            //$(xml).find('dependent').each(function () {

            //    var $book = $(this);
            //    show = '';
            //    var businessUnit = $book.find('selected').text();
            //    show = $book.find('show').text();

            //    if (businessUnit == baseBusinessUnit) {
            //        if (show != '') {
            //            show = ' ,' + show;

            //            //temp, replace spaces that occours in the beginning of comma separation.
            //            show = show.replace(/\, /g, ",");

            //            var optionsarray = show.split(',');
            //            optionsarray.unshift('');

            //            var items = optionsarray.map(function (x) { return { text: x, value: x }; });
            //            selectize_tags.addOption(items);
            //            selectize_tags.setValue('');
            //            return;
            //        }
            //    }
            //});

            var jobtitle_value;
            jobtitle_value = $('#LocalJobTitle').val();

            //if (document.getElementById('LocalJobTitle')) {
            //    $('#LocalJobTitle').val("");
            //}

            $('#LocalJobTitle').val("");

            var selectize_tags = $("#LocalJobTitle")[0].selectize
            selectize_tags.clearOptions();



            $(xml).find('dependent').each(function () {


                var $sel = $(this);
                show = '';

                var businessunit = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (businessunit == baseBusinessUnit) {

                    if (show != '') {

                        //show = ' ,' + show;

                        //temp, replace spaces that occours in the beginning of comma separation.
                        show = show.replace(/\, /g, ",");

                        var optionsarray = show.split(',');
                        optionsarray.unshift('');

                        //TEMP for Steering Group_Doncaster, Sales (problem with commas in the name) so we use  #
                        if (show.indexOf("#") > -1) {
                            $.each(optionsarray, function (i) {
                                optionsarray[i] = optionsarray[i].replace(/\#/g, ",");
                            });
                        }

                        var items = optionsarray.map(function (x) { return { text: x, value: x }; });

                        selectize_tags.addOption(items);


                        if (jobtitle_value != '') {
                            selectize_tags.setValue(jobtitle_value);

                        }
                        else
                            selectize_tags.setValue('');
                        return;
                    }
                }
            });
        }

        function setLocalJobTitle(xml) {
            SetDefCount += 1;
            if (SetDefCount <= maxLocalJobTitleDefCount)
                return;

            var show = '';
            var baseLocalJobTitle = document.getElementById('LocalJobTitle').value;

            $(xml).find('dependent').each(function () {

                var $book = $(this);
                show = '';
                var localJobTitle = $book.find('selected').text();
                show = $book.find('show').text();

                if (localJobTitle == baseLocalJobTitle) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            $('#JobTitle')[0].selectize.setValue(show);
                        } else {
                            var res = show.substring(0, n);
                            $('#JobTitle')[0].selectize.setValue(res);
                        }
                        return;
                    }
                }
            });
        }

        function setCostCentre(xml) {
            var show = '';
            var baseNewDepartment = $("#NewDepartment option:selected").text();
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var newDepartment = $book.find('selected').text();
                show = $book.find('show').text();
                if (newDepartment == baseNewDepartment) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            $('#HomeCostCentre')[0].selectize.setValue(show);
                            //$('#CrossChargeCostCentre')[0].selectize.setValue(show);
                        } else {
                            var res = show.substring(0, n);

                            $('#HomeCostCentre')[0].selectize.setValue(res);
                          //  $('#CrossChargeCostCentre')[0].selectize.setValue(res);
                        }
                        return;
                    }
                }
            });
        }

        function setAllowanceUnits5(xml) {
            var show = '';
            var dep = document.getElementById('AllowancesType5').value;
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var department = $book.find('selected').text();
                show = $book.find('show').text();

                if (department == dep) {

                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            document.getElementById('AllowancesNetGross5').value = show;
                        } else {
                            var res = show.substring(0, n);
                            document.getElementById('AllowancesNetGross5').value = res;
                        }
                        return;
                    } else {
                        document.getElementById('AllowancesNetGross5').value = '';
                    }
                }
            });
        }

        function setAllowanceUnits4(xml) {
            var show = '';
            var dep = document.getElementById('AllowancesType4').value;
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var department = $book.find('selected').text();
                show = $book.find('show').text();

                if (department == dep) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            document.getElementById('AllowancesNetGross4').value = show;
                        } else {
                            var res = show.substring(0, n);
                            document.getElementById('AllowancesNetGross4').value = res;
                        }
                        return;
                    } else {
                        document.getElementById('AllowancesNetGross4').value = '';
                    }
                }
            });
        }

        function setAllowanceUnits3(xml) {
            var show = '';
            var dep = document.getElementById('AllowancesType3').value;
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var department = $book.find('selected').text();
                show = $book.find('show').text();
                if (department == dep) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            document.getElementById('AllowancesNetGross3').value = show;
                        } else {
                            var res = show.substring(0, n);
                            document.getElementById('AllowancesNetGross3').value = res;
                        }
                        return;
                    } else {
                        document.getElementById('AllowancesNetGross3').value = '';
                    }
                }
            });
        }

        function setAllowanceUnits2(xml) {
            var show = '';
            var dep = document.getElementById('AllowancesType2').value;
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var department = $book.find('selected').text();
                show = $book.find('show').text();
                if (department == dep) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            document.getElementById('AllowancesNetGross2').value = show;
                        } else {
                            var res = show.substring(0, n);
                            document.getElementById('AllowancesNetGross2').value = res;
                        }
                        return;
                    } else {
                        document.getElementById('AllowancesNetGross2').value = '';
                    }
                }
            });
        }

        function setAllowanceUnits(xml) {
            var show = '';
            var dep = document.getElementById('AllowancesType').value;
            $(xml).find('dependent').each(function () {
                var $book = $(this);
                show = '';
                var department = $book.find('selected').text();
                show = $book.find('show').text();
                if (department == dep) {
                    if (show != '') {
                        var n = show.indexOf(",");
                        if (n == -1) {
                            document.getElementById('AllowancesNetGross').value = show;
                        } else {
                            var res = show.substring(0, n);
                            document.getElementById('AllowancesNetGross').value = res;
                        }
                        return;
                    } else {
                        document.getElementById('AllowancesNetGross').value = '';
                    }
                }
            });
        }

        //function ValueChangeContractedHours() {
        //    if (document.getElementById('ContractedHours').value >= '36' && document.getElementById('ContractedHours').value <= '40') {
        //        document.getElementById('ContractType').selectedIndex = 2;
        //    }
        //    if (document.getElementById('ContractedHours').value >= '0' && document.getElementById('ContractedHours').value <= '35') {
        //        document.getElementById('ContractType').selectedIndex = 1;
        //    }
        //}
        //document.getElementById('ContractedHours').onchange = ValueChangeContractedHours;

        function ValueChangeContractedHours() {
            var val = $('#ContractedHours').val()
            if (parseInt(val) >= 36 && parseInt(val) <= 40) {
                    document.getElementById('ContractType').selectedIndex = 2;
                }
            if (parseInt(val) >= 0 && parseInt(val) <= 35) {
                    document.getElementById('ContractType').selectedIndex = 1;
            }

            if (parseInt(val) > 40) {
                document.getElementById('ContractType').selectedIndex = 0;
            }
       
        }
        document.getElementById('ContractedHours').onchange = ValueChangeContractedHours;

        var probationPeriod = $('#ProbationPeriod');

        probationPeriod.change(function () {
            setProbationPeriod();
        });

        function setProbationPeriod() {
    
            var sStart = $('#ChangeValidFrom').val();
            re = /^(0[1-9]|[12][0-9]|3[01])[\.](0[1-9]|1[012])[\.]\d{4}$/;

            var sEnd = $('#ContractEndDate').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dStart = APIGlobal.DateTime.parseDate(sStart, format);
            var dEnd = APIGlobal.DateTime.parseDate(sEnd, format);
            var sStartToSET = APIGlobal.DateTime.parseDate(sStart, format);
            var probationEndDate = $('#ProbationEndDate');
            var noticeProbationDate = $('#probationDate');

            if (probationPeriod.val() == "Yes" && probationPeriod.val() != "") {

                if (sStart != "" && sStart.match(re)) {

                    //if (probationPeriod.val() == "Yes" && probationPeriod.val() != "") {
                        var endDate = new Date(sStartToSET.getFullYear(), sStartToSET.getMonth() + 2, sStartToSET.getDate(), 0, 0, 0, 0);
                        var visibledaate = APIGlobal.DateTime.formatDate(endDate, format);
                        probationEndDate.val(visibledaate.toString());
                }
                else {
                    probationEndDate.val(sStart);
                }
            }
            else {
                probationEndDate.val("");
            }
        };

        $('#date_ChangeValidFrom').change(function () {
            setProbationPeriod();
        });

        $('#date_ChangeValidFrom').not(".disabled").datepicker().on('changeDate', function (ev) {
            setProbationPeriod();
        });

        var BlockApprenticefields = function () {
            var val = $("#EmploymentCategory").val();
            if (val == "Apprentice") {
                $('#NameOfSchool').attr("disabled", false);
                $('#NameOfEducation').attr("disabled", false);
                $('#CityEducationSchool').attr("disabled", false);
                $('#LevelOfEducation').attr("disabled", false);
                $('#MentorAtIKEA').attr("disabled", false);
            } else {
                $('#NameOfSchool').attr("disabled", true);
                $('#NameOfEducation').attr("disabled", true);
                $('#CityEducationSchool').attr("disabled", true);
                $('#LevelOfEducation').attr("disabled", true);
                $('#MentorAtIKEA').attr("disabled", true);
            }
        }
    }// END IF READ ONLY Organisation assignemnt



    function GetXML(xmlFile, url) {
        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';
        path = site.baseUrl + '/FormLibContent/Xmls/Netherlands/Defaults/' + xmlFile

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: url,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }
        });
    }


    /// Payment Tab
    if ("@Model.ReadOnlyTab("#Payment")" == "False" && lockedbyUserGroup == 'False') {

        $(function () {

            //SelectIndexChangePayScaleLevel();

        });// End Function




        function setPaymentDatePickersBehavior() {

            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5,' +
            '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker('destroy');

            var startDate = $('#ChangeValidFrom').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dStart = APIGlobal.DateTime.parseDate(startDate, format);
            var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5,' +
                '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker(
            {
                onRender: function (ev) {
                    return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
                },
            });

            ////set value to the datepicker
            $('#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker("setValue", forcePicker);
            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5').not(".disabled").datepicker("setValue", forcePicker);
            //$('#date_ChangeValidFrom').datepicker("setValue", startDate);

            $('#AllowancesValidFrom,#AllowancesValidFrom2,#AllowancesValidFrom3,#AllowancesValidFrom4,#AllowancesValidFrom5,' +
      '#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3,#DeductionsValidFrom4,#DeductionsValidFrom5').val(startDate);
        }

        // setPaymentDatePickersBehavior();

        $('#date_ChangeValidFrom').on('changeDate', function (ev) {
            setPaymentDatePickersBehavior();
        }).data('datepicker');

        $('#ChangeValidFrom').change(function () {
            setPaymentDatePickersBehavior();
        });

        // Show notice if allowancestype comp.serv.allowance
        function selectIndexChangeAllowancesType() {
            if (this.options[this.selectedIndex].value == 'Comp.Serv.Allowance')
                document.getElementById('notice_AllowancesType').style.display = "block";
            else
                document.getElementById('notice_AllowancesType').style.display = "none";
        };
        document.getElementById('AllowancesType').onchange = selectIndexChangeAllowancesType;

        // Show notice if allowancestype comp.serv.allowance
        function selectIndexChangeAllowancesType2() {
            if (this.options[this.selectedIndex].value == 'Comp.Serv.Allowance') {

                document.getElementById('notice_AllowancesType2').style.display = "block";
            } else {
                document.getElementById('notice_AllowancesType2').style.display = "none";
            }
        }
        document.getElementById('AllowancesType2').onchange = selectIndexChangeAllowancesType2;

        // Show notice if allowancestype comp.serv.allowance
        function selectIndexChangeAllowancesType3() {
            if (this.options[this.selectedIndex].value == 'Comp.Serv.Allowance') {

                document.getElementById('notice_AllowancesType3').style.display = "block";
            } else {
                document.getElementById('notice_AllowancesType3').style.display = "none";
            }
        }
        document.getElementById('AllowancesType3').onchange = selectIndexChangeAllowancesType3;

        // Show notice if allowancestype comp.serv.allowance
        function selectIndexChangeAllowancesType4() {
            if (this.options[this.selectedIndex].value == 'Comp.Serv.Allowance') {

                document.getElementById('notice_AllowancesType4').style.display = "block";
            } else {
                document.getElementById('notice_AllowancesType4').style.display = "none";
            }
        }
        document.getElementById('AllowancesType4').onchange = selectIndexChangeAllowancesType4;

        // Show notice if allowancestype comp.serv.allowance
        function selectIndexChangeAllowancesType5() {
            if (this.options[this.selectedIndex].value == 'Comp.Serv.Allowance') {

                document.getElementById('notice_AllowancesType5').style.display = "block";
            } else {
                document.getElementById('notice_AllowancesType5').style.display = "none";
            }
        }
        document.getElementById('AllowancesType5').onchange = selectIndexChangeAllowancesType5;


        // allowance and deduction datepickers
        var employmentCategory = "";
        $('#EmploymentCategory').change(function () {
            employmentCategory = $(this).val();
        });

        var sEnd = document.getElementById('ChangeValidTo');

        function setAllowancesValidTo(id, choos) {

            sEnd = $('#ChangeValidTo').val();
            var allowancesValidTo = document.getElementById(id);

            var input = $('#' + id);
            if (choos != "" && choos == 'One Time') {
                allowancesValidTo.value = "";
                document.getElementById(id).disabled = true;
                document.getElementById('date_' + id).disabled = true;
            } else {
                document.getElementById(id).disabled = false;
                document.getElementById('date_' + id).disabled = false;

                //var employmentCategory = document.getElementById('EmploymentCategory').value;
                if (choos != "" && choos == 'Recurring')
                    allowancesValidTo.value = sEnd;
            }
        };


        $('#AllowancesPaymentType').change(function () {
            setAllowancesValidTo('AllowancesValidTo', $(this).val());
        });
        //setAllowancesValidTo('AllowancesValidTo', $('#AllowancesPaymentType').val());
        $('#AllowancesPaymentType').change();

        $('#AllowancesPaymentType2').change(function () {
            setAllowancesValidTo('AllowancesValidTo2', $(this).val());
        });

        $('#AllowancesPaymentType2').change();

        $('#AllowancesPaymentType3').change(function () {
            setAllowancesValidTo('AllowancesValidTo3', $(this).val());
        });

        $('#AllowancesPaymentType3').change();

        $('#AllowancesPaymentType4').change(function () {
            setAllowancesValidTo('AllowancesValidTo4', $(this).val());
        });

        $('#AllowancesPaymentType4').change();

        $('#AllowancesPaymentType5').change(function () {
            setAllowancesValidTo('AllowancesValidTo5', $(this).val());
        });

        $('#AllowancesPaymentType5').change();

        $('#AllowancesType').change(function () {
            GetXML('Predefined_AllowanceType_Units.xml', setAllowanceUnits);
        });

        $('#AllowancesType2').change(function () {
            GetXML('Predefined_AllowanceType_Units.xml', setAllowanceUnits2);
        });

        $('#AllowancesType3').change(function () {
            GetXML('Predefined_AllowanceType_Units.xml', setAllowanceUnits3);
        });

        $('#AllowancesType4').change(function () {
            GetXML('Predefined_AllowanceType_Units.xml', setAllowanceUnits4);
        });

        $('#AllowancesType5').change(function () {
            GetXML('Predefined_AllowanceType_Units.xml', setAllowanceUnits5);
        });

        // Deductions date 

        $('#DeductionsPaymentType').change(function () {
            setAllowancesValidTo('DeductionsValidTo', $(this).val());
        });

        $('#DeductionsPaymentType').change();

        $('#DeductionsPaymentType2').change(function () {
            setAllowancesValidTo('DeductionsValidTo2', $(this).val());
        });

        $('#DeductionsPaymentType2').change();

        $('#DeductionsPaymentType3').change(function () {
            setAllowancesValidTo('DeductionsValidTo3', $(this).val());
        });

        $('#DeductionsPaymentType3').change();

        $('#DeductionsPaymentType4').change(function () {
            setAllowancesValidTo('DeductionsValidTo4', $(this).val());
        });

        $('#DeductionsPaymentType4').change();

        $('#DeductionsPaymentType5').change(function () {
            setAllowancesValidTo('DeductionsValidTo5', $(this).val());
        });

        $('#DeductionsPaymentType5').change();

        //Next revisiondate


        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        $('#date_NextRevisionDate').not(".disabled").datepicker(
        {
            onRender: function (ev) {
                return ev.valueOf() <= now.valueOf() ? 'disabled' : '';
            }
        });

        document.getElementById('NextRevisionDate').onkeypress = function () { return true; }

        $('#date_NextRevisionDate2').not(".disabled").datepicker(
        {
            onRender: function (ev) {
                return ev.valueOf() <= now.valueOf() ? 'disabled' : '';
            }
        });

        document.getElementById('NextRevisionDate2').onkeypress = function () { return true; }

        $('#date_NextRevisionDate3').not(".disabled").datepicker(
        {
            onRender: function (ev) {
                return ev.valueOf() <= now.valueOf() ? 'disabled' : '';
            }
        });

        document.getElementById('NextRevisionDate3').onkeypress = function () { return true; }

        $('#date_NextRevisionDate4').not(".disabled").datepicker(
                {
                    onRender: function (ev) {
                        return ev.valueOf() <= now.valueOf() ? 'disabled' : '';
                    }
                });

        document.getElementById('NextRevisionDate4').onkeypress = function () { return true; }

        $('#date_NextRevisionDate5').not(".disabled").datepicker(
                       {
                           onRender: function (ev) {
                               return ev.valueOf() <= now.valueOf() ? 'disabled' : '';
                           }
                       });

        document.getElementById('NextRevisionDate5').onkeypress = function () { return true; }

        //  *********CLAIncrease field has been deleted
        //function SelectIndexChangePayScaleLevel() {
        //    if (document.getElementById('PayScaleLevel').value) {
        //        if (document.getElementById('PayScaleLevel').value <= 12) {
        //            document.getElementById('CLAIncrease').selectedIndex = 1;
        //        }
        //        if (document.getElementById('PayScaleLevel').value >= 13) {
        //            document.getElementById('CLAIncrease').selectedIndex = 2;
        //        }
        //    }

        //}
        //document.getElementById('PayScaleLevel').onchange = SelectIndexChangePayScaleLevel;




    } // End IF READ ONLY TAB Payment

</script>

