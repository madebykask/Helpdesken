@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@{
    const string IsTeWorker = "No";
    const string DefaultCountry = "Netherlands";

    var fillOldVal = TempData["oldValues"];
    var newfill = (List<KeyValuePair<string, string>>)fillOldVal;
}
<div class="tab-pane" id="Personal">
    <div class="span8">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Contact Details")</h4>
                    </td>
                    <td class="tdstrong" >
                        <h4>@Model.Translate("Current record")</h4>

                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TelephoneNumber")</td>
                    <td>@Model.Element("TelephoneNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContactEMailAddress")</td>
                    <td>@Model.Element("ContactEMailAddress")</td>
                     <td>
                        <input type="hidden" class="oldValue"  id="OLD_ContactEMailAddress" name="OLD_ContactEMailAddress" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContactEMailAddress").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_ContactEMailAddress">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_ContactEMailAddress").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <!-- Permanent ADDRESS -->
                    <tr>
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Permanent Address")</h4>
                        </td>
                        <td class="tdstrong">
                            <h4>@Model.Translate("Current record")</h4>
                        </td>
                    </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine1")</td>
                    <td>@Model.Element("PermanentAddressLine1")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine1" name="OLD_PermanentAddressLine1" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine1">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine1").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine2")</td>
                    <td>@Model.Element("PermanentAddressLine2")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine2" name="OLD_PermanentAddressLine2" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine2">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine2").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentAddressLine3")</td>
                    <td>@Model.Element("PermanentAddressLine3")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentAddressLine3" name="OLD_PermanentAddressLine3" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentAddressLine3">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentAddressLine3").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentPostalCode")</td>
                    <td>@Model.Element("PermanentPostalCode")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentPostalCode" name="OLD_PermanentPostalCode" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentPostalCode">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentPostalCode").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCity")</td>
                    <td>@Model.Element("PermanentCity")</td>
                     <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCity" name="OLD_PermanentCity" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCity">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCity").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PermanentCountry")</td>
                    <td>@Model.Element("PermanentCountry")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_PermanentCountry" name="OLD_PermanentCountry" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_PermanentCountry">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_PermanentCountry").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <!-- MAILING ADDRESS -->
                <tr class="mailingaddress" id="mailingaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Mailing Address")
                            <button class="btn btn-mini pull-right" id="btnMailingAddress" data-prefix="Mailing">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingAddressLine1")</td>
                    <td>@Model.Element("MailingAddressLine1")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingAddressLine2")</td>
                    <td>@Model.Element("MailingAddressLine2")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingAddressLine3")</td>
                    <td>@Model.Element("MailingAddressLine3")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingPostalCode")</td>
                    <td>@Model.Element("MailingPostalCode")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingCity")</td>
                    <td>@Model.Element("MailingCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MailingCountry")</td>
                    <td>@Model.Element("MailingCountry")</td>
                </tr>

                <!-- EMERGENCY ADDRESS -->
                <tr class="emergencyaddress" id="emergencyaddress">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Emergency Address")
                            <button class="btn btn-mini pull-right" id="btnEmergencyAddress" data-prefix="Emergency">
                                <i class="icon-share"></i>&nbsp;@Model.Translate("Copy from Permanent Address")
                            </button>
                        </h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressLine1")</td>
                    <td>@Model.Element("EmergencyAddressLine1")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_EmergencyAddressLine1" name="OLD_EmergencyAddressLine1" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyAddressLine1").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmergencyAddressLine1">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyAddressLine1").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressLine2")</td>
                    <td>@Model.Element("EmergencyAddressLine2")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_EmergencyAddressLine2" name="OLD_EmergencyAddressLine2" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyAddressLine2").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmergencyAddressLine2">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyAddressLine2").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyAddressLine3")</td>
                    <td>@Model.Element("EmergencyAddressLine3")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyPostalCode")</td>
                    <td>@Model.Element("EmergencyPostalCode")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_EmergencyPostalCode" name="OLD_EmergencyPostalCode" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyPostalCode").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmergencyPostalCode">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyPostalCode").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCity")</td>
                    <td>@Model.Element("EmergencyCity")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_EmergencyCity" name="OLD_EmergencyCity" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyCity").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmergencyCity">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyCity").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyCountry")</td>
                    <td>@Model.Element("EmergencyCountry")</td>
                    <td>
                        <input type="hidden" class="oldValue"  id="OLD_EmergencyCountry" name="OLD_EmergencyCountry" value="@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyCountry").Select(x => x.Value).FirstOrDefault() : "")"/>
                        <em class="muted" id="emOLD_EmergencyCountry">@((newfill != null) ? newfill.Where(x => x.Key == "OLD_EmergencyCountry").Select(x => x.Value).FirstOrDefault() : "")</em>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyContactNumber")</td>
                    <td>@Model.Element("EmergencyContactNumber")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmergencyContactRelationship")</td>
                    <td>@Model.Element("EmergencyContactRelationship")</td>
                </tr>

                <!-- FAMILY MEMBER / DEPENDENTS -->
                 <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Family Member / Dependents")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMember")</td>
                    <td>@Model.Element("FamilyMember")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberLastName")</td>
                    <td>@Model.Element("FamilyMemberLastName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberFirstName")</td>
                    <td>@Model.Element("FamilyMemberFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberGender")</td>
                    <td>@Model.Element("FamilyMemberGender")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("FamilyMemberDateOfBirth")</td>
                    <td>@Model.Element("FamilyMemberDateOfBirth")</td>
                </tr>
                
                
                  @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                  {
                      <tr class="familyMember@(i.ToString())" id="familyMember@(i.ToString())">
                          <td class="tdstrong" colspan="2">
                              <h4>@Model.Translate("Family Member / Dependents") @i.ToString()</h4>
                          </td>
                      </tr>
                      <tr class="familyMember@(i.ToString())">
                          <td class="tdstrong">@Model.Label("FamilyMember" + i.ToString())</td>
                          <td>
                              @Model.Element("FamilyMember" + i.ToString())</td>
                      </tr>
                      <tr class="familyMember@(i.ToString())">
                          <td class="tdstrong">@Model.Label("FamilyMemberLastName" + i.ToString())</td>
                          <td>
                              @Model.Element("FamilyMemberLastName" + i.ToString())</td>
                      </tr>
                      <tr class="familyMember@(i.ToString())">
                          <td class="tdstrong">@Model.Label("FamilyMemberFirstName" + i.ToString())</td>
                          <td>
                              @Model.Element("FamilyMemberFirstName" + i.ToString())</td>
                      </tr>
                      <tr class="familyMember@(i.ToString())">
                          <td class="tdstrong">@Model.Label("FamilyMemberGender" + i.ToString())</td>
                          <td>
                              @Model.Element("FamilyMemberGender" + i.ToString())</td>
                      </tr>
                      <tr class="familyMember@(i.ToString())">
                          <td class="tdstrong">@Model.Label("FamilyMemberDateOfBirth" + i.ToString())</td>
                          <td>
                              @Model.Element("FamilyMemberDateOfBirth" + i.ToString())</td>
                      </tr>
                  }
                
                <tr id="addFamilyMemberTrr">
                    <td colspan="2">
                        @Model.Element("FamilyMembers")
                        <a id="addFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another family member")</a></td>
                </tr>

                <!-- Global Mobility Employee Documents -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Employee Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentType")</td>
                    <td>@Model.Element("EmployeeDocumentType")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentCountry")</td>
                    <td>@Model.Element("EmployeeDocumentCountry")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentNo")</td>
                    <td>@Model.Element("EmployeeDocumentNo")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssueDate")</td>
                    <td>@Model.Element("EmployeeDocumentIssueDate")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlace")</td>
                    <td>@Model.Element("EmployeeDocumentIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlaceCountry")</td>
                    <td>@Model.Element("EmployeeDocumentIssuePlaceCountry")</td>
                </tr>

                @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="employeeDocument@(i.ToString()) globalmobility" id="employeeDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Employee Documents")  @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentType" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentCountry" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentNo" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentNo" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssueDate" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="employeeDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("EmployeeDocumentIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("EmployeeDocumentIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }
                <tr class="globalmobility-first" id="addEmployeeDocumentTrr">
                    <td colspan="2">
                        @Model.Element("EmployeeDocuments")
                        <a id="addEmployeeDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another employee documents")</a></td>
                </tr>

                <!-- Global Mobility Dependants -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                    <td>@Model.Element("DependantFamilyMember")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("Accompanying")</td>
                    <td>@Model.Element("Accompanying")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsLastName")</td>
                    <td>@Model.Element("DependantsLastName")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsFirstName")</td>
                    <td>@Model.Element("DependantsFirstName")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDateOfBirth")</td>
                    <td>@Model.Element("DependantsDateOfBirth")</td>
                </tr>


                @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility" id="dependantFamilyMember@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantFamilyMember")</td>
                        <td>@Model.Element("DependantFamilyMember" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("Accompanying" + i.ToString())</td>
                        <td>@Model.Element("Accompanying" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsLastName" + i.ToString())</td>
                        <td>@Model.Element("DependantsLastName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsFirstName" + i.ToString())</td>
                        <td>@Model.Element("DependantsFirstName" + i.ToString())</td>
                    </tr>
                    <tr class="dependantFamilyMember@(i.ToString()) globalmobility ">
                        <td class="tdstrong">@Model.Label("DependantsDateOfBirth" + i.ToString())</td>
                        <td>@Model.Element("DependantsDateOfBirth" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addDependantFamilyMembersTrr">
                    <td colspan="2">
                        @Model.Element("DependantFamilyMembers")
                        <a id="addDependantFamilyMember" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant")</a></td>
                </tr>


                <!-- Global Mobility Dependants Documents -->
                <tr class="globalmobility-first">
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Global Mobility - Dependants Documents")</h4>
                    </td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentType")</td>
                    <td>@Model.Element("DependantsDocumentType")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentCountry")</td>
                    <td>@Model.Element("DependantsDocumentCountry")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentNo")</td>
                    <td>@Model.Element("DependantsDocumentNo")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssueDate")</td>
                    <td>@Model.Element("DependantsDocumentIssueDate")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlace")</td>
                    <td>@Model.Element("DependantsDocumentIssuePlace")</td>
                </tr>
                <tr class="globalmobility-first">
                    <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlaceCountry")</td>
                    <td>@Model.Element("DependantsDocumentIssuePlaceCountry")</td>
                </tr>


                @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility" id="globalMobilityDependantDocument@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Global Mobility - Dependants Documents") @i.ToString()</h4>
                        </td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentType" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentType" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentCountry" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentNo" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentNo" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssueDate" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssueDate" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlace" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssuePlace" + i.ToString())</td>
                    </tr>
                    <tr class="globalMobilityDependantDocument@(i.ToString()) globalmobility">
                        <td class="tdstrong">@Model.Label("DependantsDocumentIssuePlaceCountry" + i.ToString())</td>
                        <td>@Model.Element("DependantsDocumentIssuePlaceCountry" + i.ToString())</td>
                    </tr>
                }

                <tr class="globalmobility-first" id="addGlobalMobilityDependantDocumentTrr">
                    <td colspan="2">
                        @Model.Element("DependantsDocuments")
                        <a id="addGlobalMobilityDependantDocument" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another global mobility dependant document")</a></td>
                </tr>

                <!-- Bank Account Details -->
                @Html.Partial("_SectionBank", Model)


                <!-- FISCAL DATA AND SOCIAL INSURANCE -->
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Fiscal Data")</h4>
                    </td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("TaxDeduction")</td>
                    <td>@Model.Element("TaxDeduction")</td>
                </tr>

                <!-- Nationality / Language -->

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Nationality / Language")</h4>
                    </td>
                </tr>

                <tr>
                    <td class="tdstrong">@Model.Label("Language")</td>
                    <td>@Model.Element("Language")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Nationality")</td>
                    <td>@Model.Element("Nationality")</td>
                </tr>

                <!-- Education - COMMENTED OUT BECAUSE THIS IS NOT VALID FOR NETHERLANDS -->

                @*<tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Education")</h4>
                    </td>
                </tr>  
                <tr>
                    <td class="tdstrong">@Model.Label("EducationalEstablishment")</td>
                    <td>@Model.Element("EducationalEstablishment")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("InstituteLocation")</td>
                    <td>@Model.Element("InstituteLocation")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Certificate")</td>
                    <td>@Model.Element("Certificate")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DurationOfCourse")</td>
                    <td>@Model.Element("DurationOfCourse")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BranchOfStudy")</td>
                    <td>@Model.Element("BranchOfStudy")</td>
                </tr>
                
                @for (int i = 2; i <= 4; i++)
                  {
                      <tr class="education@(i.ToString())" id="education@(i.ToString())">
                          <td class="tdstrong" colspan="2">
                              <h4>@Model.Translate("Education") @i.ToString()</h4>
                          </td>
                      </tr>
                      <tr class="education@(i.ToString())">
                          <td class="tdstrong">@Model.Label("EducationalEstablishment" + i.ToString())</td>
                          <td>
                              @Model.Element("EducationalEstablishment" + i.ToString())</td>
                      </tr>
                    
                    <tr class="education@(i.ToString())">
                          <td class="tdstrong">@Model.Label("InstituteLocation" + i.ToString())</td>
                          <td>
                              @Model.Element("InstituteLocation" + i.ToString())</td>
                      </tr>
                    <tr class="education@(i.ToString())">
                          <td class="tdstrong">@Model.Label("Certificate" + i.ToString())</td>
                          <td>
                              @Model.Element("Certificate" + i.ToString())</td>
                      </tr>
                    <tr class="education@(i.ToString())">
                          <td class="tdstrong">@Model.Label("DurationOfCourse" + i.ToString())</td>
                          <td>
                              @Model.Element("DurationOfCourse" + i.ToString())</td>
                      </tr>
                    <tr class="education@(i.ToString())">
                          <td class="tdstrong">@Model.Label("BranchOfStudy" + i.ToString())</td>
                          <td>
                              @Model.Element("BranchOfStudy" + i.ToString())</td>
                      </tr>
                }
                <tr id="addEducationTr">
                    <td colspan="2">
                        @Model.Element("Educations")
                        <a id="addEducation" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another education")</a></td>
                </tr>

                
                <!-- Other / Previous employers -->
                
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Other / Previous employers")</h4>
                    </td>
                </tr>  
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployer")</td>
                    <td>@Model.Element("OtherPreviousEmployer")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployerCity")</td>
                    <td>@Model.Element("OtherPreviousEmployerCity")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployerCountry")</td>
                    <td>@Model.Element("OtherPreviousEmployerCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployerIndustry")</td>
                    <td>@Model.Element("OtherPreviousEmployerIndustry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployerJob")</td>
                    <td>@Model.Element("OtherPreviousEmployerJob")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OtherPreviousEmployerWorkContract")</td>
                    <td>@Model.Element("OtherPreviousEmployerWorkContract")</td>
                </tr>

                @for (int i = 2; i <= 4; i++)
                  {
                      <tr class="otherpreviousemployers@(i.ToString())" id="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong" colspan="2">
                              <h4>@Model.Translate("Other / Previous Employers") @i.ToString()</h4>
                          </td>
                      </tr>
                      <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployer" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployer" + i.ToString())</td>
                      </tr>
                    <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployerCity" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployerCity" + i.ToString())</td>
                      </tr>
                    <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployerCountry" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployerCountry" + i.ToString())</td>
                      </tr>
                    <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployerIndustry" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployerIndustry" + i.ToString())</td>
                      </tr>
                    <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployerJob" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployerJob" + i.ToString())</td>
                      </tr>
                    <tr class="otherpreviousemployers@(i.ToString())">
                          <td class="tdstrong">@Model.Label("OtherPreviousEmployerWorkContract" + i.ToString())</td>
                          <td>
                              @Model.Element("OtherPreviousEmployerWorkContract" + i.ToString())</td>
                      </tr>
                }
                <tr id="addOtherPreviousEmployersTr">
                    <td colspan="2">
                        @Model.Element("OtherPreviousEmployers")
                        <a id="addOtherPreviousEmployers" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another previous employer")</a></td>
                </tr>*@

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Name Change")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewFirstName")</td>
                    <td>@Model.Element("NewFirstName")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewPrefix")</td>
                    <td>@Model.Element("NewPrefix")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewLastName")</td>
                    <td>@Model.Element("NewLastName")</td>
                </tr>
               @* <tr>
                    <td class="tdstrong">@Model.Label("PreferedName")</td>
                    <td>@Model.Element("PreferedName")</td>
                </tr>*@


                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Documents")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentType")</td>
                    <td>@Model.Element("DocumentType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentCountry")</td>
                    <td>@Model.Element("DocumentCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentNO")</td>
                    <td>@Model.Element("DocumentNO")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DocumentValidUntil")</td>
                    <td>@Model.Element("DocumentValidUntil")
                        <div id="notice_ValidUntilDate" style="display: none;" class="notice">
                            @Model.Translate("Please choose a date in the future")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Marital status/ Partner information")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("MaritalStatus")</td>
                    <td>@Model.Element("MaritalStatus")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PartnerName")</td>
                    <td>@Model.Element("PartnerName")</td>
                </tr>

                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Other")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Gender")</td>
                    <td>@Model.Element("Gender")</td>
                </tr>

            </tbody>
        </table>
    </div>

    <input type="hidden" id="CustomerId" value="@Model.Form.CustomerId" />
    <input type="hidden" id="MultipleEntrySectionsNr" value="@FormLibConstants.FormField.MultipleEntrySectionsNr" />
    <input type="hidden" id="BusinessUnitId" name="BusinessUnitId" value="0" />

</div>


<script>

    if ($('#TECoWorker').val() == '@IsTeWorker') {
        $(".globalmobility-first").hide();
    }

    var lockedbyUserGroup = document.getElementById('LockedByUserGroup').getAttribute('status');
    if ("@Model.ReadOnlyTab("#Personal")" == 'False' && lockedbyUserGroup == 'False') {



        function setGlobalMobilityBehavior(value) {
            if (value == '@IsTeWorker') {

                jQuery(".globalmobility-first").hide();
                jQuery("[class*=globalmobility]").hide();
                $("[class*=globalmobility] input:not(input[type=hidden])").val("");
                jQuery("[class*=globalmobility-first]").hide();
                jQuery("[class*=globalmobility] input[type=text][name*='Country']").val('@DefaultCountry');
                jQuery("[class*=globalmobility] select option:not([value])").prop('selected', true);
            } else if (!(value == '@IsTeWorker')) {
                jQuery(".globalmobility-first").show();
            }

            $("[class*=globalmobility-first] input[type=hidden]").val("1");

        };

        $(function () {


            $('#TECoWorker').change(function () {
                setGlobalMobilityBehavior($(this).val());
            });

            if ($('#TECoWorker').val() == '@IsTeWorker') {
                $(".globalmobility-first").hide();
            }

            $("#FirstName,#Co-WorkerGlobalviewID").change(function () {
                SetDefaultPayee();
            });
            $("#LastName,#Co-WorkerGlobalviewID").change(function () {
                SetDefaultPayee();
            });

            function SetDefaultPayee () {

                var payeevalue = $("#FirstName").val() + " " + $("#LastName").val();

                //set first
                $("#Payee").val(payeevalue);
                $("#Payee2").val(payeevalue);
            };

        });



        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

        var noticValidUntil = $('#notice_ValidUntilDate');
        $('#date_DocumentValidUntil').not(".disabled").datepicker({
            onRender: function (date) {
                return date.valueOf() < now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {

            noticValidUntil.hide();

            if (ev.date.valueOf() < now.valueOf())
                noticValidUntil.show();
        }).data('datepicker');

        $('#DocumentValidUntil').change(function () {
            var lastDayOfEmployment = $('#DocumentValidUntil').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dlastDayOfEmployment = APIGlobal.DateTime.parseDate(lastDayOfEmployment, format);
            var nowTemp = new Date();
            var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
            noticValidUntil.hide();
            if (dlastDayOfEmployment.valueOf() < now.valueOf())
                noticValidUntil.show();
        });

    }
</script>
