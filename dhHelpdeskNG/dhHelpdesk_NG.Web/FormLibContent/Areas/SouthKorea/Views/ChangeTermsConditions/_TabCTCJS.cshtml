@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@{
    const string ContractType = "Permanent";
}
<script>
    var ect = new Ect();
    var lockedbyUserGroup = document.getElementById('LockedByUserGroup').getAttribute('status');

    if ("@Model.ReadOnlyTab("#Payment")" == 'False' && lockedbyUserGroup == 'False') {

        $(function () {
            $("#NewBusinessUnit").change(function () {
                setTimeout(function () {
                    ect.copyValueFrom($('#NewBusinessUnit'), $('#Primarysite'));
                }, 30);

                setTimeout(function () {
                    ect.getRelations('Relation_BusinessUnit_PositionTitle.xml', '', $('#NewBusinessUnit'), $('#PositionTitle'));
                }, 1);
            });

        });

        function setPaymentDatePickersBehavior() {

            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5,' +
            '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5,#date_CalculationStartDate').not(".disabled").datepicker('destroy');

            var startDate = $('#ChangeValidFrom').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dStart = APIGlobal.DateTime.parseDate(startDate, format);
            var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5,' +
                '#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5,#date_CalculationStartDate').not(".disabled").datepicker(
            {
                onRender: function (ev) {
                    return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
                },
            });

            ////set value to the datepicker
            $('#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker("setValue", forcePicker);
            $('#date_AllowancesValidFrom,#date_AllowancesValidFrom2,#date_AllowancesValidFrom3,#date_AllowancesValidFrom4,#date_AllowancesValidFrom5,#date_CalculationStartDate').not(".disabled").datepicker("setValue", forcePicker);
            $('#date_ChangeValidFrom').datepicker("setValue", startDate);

            $('#AllowancesValidFrom,#AllowancesValidFrom2,#AllowancesValidFrom3,#AllowancesValidFrom4,#AllowancesValidFrom5,' +
      '#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3,#DeductionsValidFrom4,#DeductionsValidFrom5,#CalculationStartDate').val(startDate);
        }

        $('#date_ChangeValidFrom').on('changeDate', function (ev) {
            setPaymentDatePickersBehavior();
        }).data('datepicker');

        $('#ChangeValidFrom').change(function () {
            setPaymentDatePickersBehavior();
        });

        $('#ChangeValidFrom').not(".disabled").change(function () {
            SetProbationEndDate($('#ProbationPeriod').val());       
        });
        $('#ProbationPeriod').change(function () {
            SetProbationEndDate($(this).val());
        });

        var SetProbationEndDate = function (value) {
            var probationEndDate = $('#Probationenddate');
            if (value == 'Yes') {
                var sStart = $('#ChangeValidFrom').val();
                var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
                var dStart = APIGlobal.DateTime.parseDate(sStart, format);

                var endDate = new Date(dStart.getFullYear(), dStart.getMonth() + 3, dStart.getDate() - 1, 0, 0, 0, 0);
                var visibleDate = APIGlobal.DateTime.formatDate(endDate, format);
                probationEndDate.val(visibleDate.toString());
            }
            else {
                probationEndDate.val("");
            }
        };


        $('#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3,#DeductionsValidFrom4,#DeductionsValidFrom5').change(function () {

            $('#date_' + $(this).attr("id")).datepicker("setValue", $(this).val());
        });

        $('#AllowancesValidFrom,#AllowancesValidFrom2,#AllowancesValidFrom3,#AllowancesValidFrom4,#AllowancesValidFrom5').change(function () {

            $('#date_' + $(this).attr("id")).datepicker("setValue", $(this).val());
        });

        $("#EmploymentCategory").change(function () {
            setEmployeeBehavior($(this).val());
        });

        $("#ContractedHours").change(function () {
            GetXML('default_AnnualLeaveEntitlement.xml', SetDefaultAnnualLeave);
            SetContractType();
        });
        var SetContractType = function () {
            if ($('#ContractedHours').val() < 40) {
                $('#ContractType').val('Part time')
            }
            else {
                $('#ContractType').val('Full Time')
            }
        }
       
        $("#NewDepartment").change(function () {
            GetXML('default_costcentre.xml', SetDefaultCostCentre);
        });

        $("#PositionTitle").change(function () {
            GetXML('default_jobtitle.xml', SetDefaultJobTitle);
        });

        var SetDefaultCostCentre = function (xml) {
            var functiondepartment;
            functiondepartment = $("#NewServiceArea option:selected").text() + "_" + $("#NewDepartment option:selected").text();
            $(xml).find('dependent').each(function () {
                var $sel = $(this);
                show = '';

                var department = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (department == functiondepartment) {

                    if (show != '') {
                        var n = show.indexOf("#");

                        if (n == -1) {
                            if ($('#CostCentre')[0].selectize) {
                                $('#CostCentre')[0].selectize.setValue(show);
                            }
                            else {
                                $('#CostCentre').val(show);
                            }
                        }
                        else {
                            var res = show.substring(0, n);
                            if ($('#CostCentre')[0].selectize) {
                                $('#CostCentre')[0].selectize.setValue(res);
                            }
                            else {
                                $('#CostCentre').val(show);
                            }
                        }
                        return;
                    }
                }
            })
        }

        var SetDefaultJobTitle = function (xml) {
            var positiontitle;
            positiontitle = $("#PositionTitle").val();
            $(xml).find('dependent').each(function () {
                var $sel = $(this);
                show = '';

                var jobtitle = $sel.find('selected').text();

                show = $sel.find('show').text();

                if (jobtitle == positiontitle) {
                    if (show != '') {
                        var n = show.indexOf("#");

                        if (n == -1) {

                            $('#JobTitle')[0].selectize.setValue(show);
                        }
                        else {
                            var res = show.substring(0, n);

                            $('#JobTitle')[0].selectize.setValue(res);
                        }
                        return;
                    }
                }
            })
        }

        
        $('#PayrollCategory').change(function () {
            SetDefaultPaidPer();
        });

        var SetDefaultPaidPer = function () {
            var pay = $('#PayrollCategory').val();

            if (pay == 'Salaried - Monthly' || pay == 'Flex - Monthly' || pay == 'Dual Payroll (ZY)') {
                $('#PaidPer').val('month');
            }
            else if (pay == 'Salaried - Hourly' || pay == 'Flex - Hourly') {
                $('#PaidPer').val('hour');
            }
        }


        function setEmployeeBehavior(value) {
            if (value == '@ContractType') {
                $('#date_ContractEndDate').datepicker("destroy");
                $('#date_ContractEndDate').addClass("disabled");
                $('#ContractEndDate').prop('disabled', true);
                $('#ContractEndDate').val("");
            }
            else {
                $('#date_ContractEndDate').datepicker();
                $('#ContractEndDate').prop('disabled', false);
                $("#ContractEndDate").removeClass("disabled");
            }
        }

        if ($('#ContractType').val() == '@ContractType') {
            $('#date_ContractEndDate').datepicker("destroy");
            $('#date_ContractEndDate').addClass("disabled");
            $('#ContractEndDate').prop('disabled', true);
            $('#ContractEndDate').val("");
        }

        $('#date_ContractEndDate').not(".disabled").datepicker().on('changeDate', function (ev) {
            $('#ChangeValidTo').val($('#ContractEndDate').val());
        });

        $('#ContractEndDate').change(function () {
            $('#ChangeValidTo').val($('#ContractEndDate').val());
        });
    }
    else {
        // set Annualleaveentitlement on SSC Use Only Tab via Contracted Houres
        var contracHoures = document.getElementById('ContractedHours').value;

        if (contracHoures) {
            GetAnnualXML();
        }

        function GetAnnualXML() {

                path = '';
                var path = window.location.protocol + '//';
                path = path + window.location.host + '/';

                path = site.baseUrl + '/FormLibContent/Xmls/SouthKorea/defaults/default_AnnualLeaveEntitlement.xml'

                $.ajax({
                    type: "GET",
                    url: path,
                    dataType: "xml",
                    success: SetDefaultAnnualLeave,
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                        alert(textStatus);
                        alert(errorThrown);
                    }

                });
        }

        function SetDefaultAnnualLeave(xml) {

            var show = ''

            var dep = '';
         
            var temp = '';

            $(xml).find('dependent').each(function () {


                var $sel = $(this);

                show = '';


                var department = $sel.find('selected').text();

                show = $sel.find('show').text();
            

                    if (show != '') {

                        $('#Annualleaveentitlement').val(show);

                        return;
                    }
               
            });

        }

    }

    function GetXML(xmlFile, url) {
        //////////
        //Gets XML File
        //////////

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/SouthKorea/Defaults/' + xmlFile

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: url,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });
    }
</script>