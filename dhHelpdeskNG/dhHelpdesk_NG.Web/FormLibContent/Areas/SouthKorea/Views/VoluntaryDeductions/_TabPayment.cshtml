@model DH.Helpdesk.EForm.FormLib.Models.FormModel
@using DH.Helpdesk.EForm.FormLib;
@using DH.Helpdesk.EForm.FormLib.Models;
<div class="tab-pane" id="Payment">
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Deductions")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionChangeType")</td>
                    <td>
                        @Model.Element("DeductionChangeType")
                        
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsType")</td>
                    <td>
                        @Model.Element("DeductionsType")
                        
                    </td>
                </tr>
             
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsAmountUnits")</td>
                    <td>
                        @Model.Element("DeductionsAmountUnits")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Deductedper")</td>
                    <td>
                        @Model.Element("Deductedper")
                    </td>
                </tr>
                
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsValidFrom")</td>
                    <td>
                        @Model.Element("DeductionsValidFrom")
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("DeductionsValidTo")</td>
                    <td>
                        @Model.Element("DeductionsValidTo")
                    </td>
                </tr>



                 @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
                {
                    <tr class="deduction@(i.ToString())" id="deduction@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Deductions") @(i.ToString())</h4>
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionChangeType" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionChangeType" + i.ToString())
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsType" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsType" + i.ToString())
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsAmountUnits" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsAmountUnits" + i.ToString())
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Deductedper" + i.ToString())</td>
                        <td>
                            @Model.Element("Deductedper" + i.ToString())
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsValidFrom" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsValidFrom" + i.ToString())
                        </td>
                    </tr>
                     <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionsValidTo" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionsValidTo" + i.ToString())
                        </td>
                    </tr>
                 }
                <tr id="addDeductionTrr">
                    <td colspan="2">
                        @Model.Element("Deductions")
                        <a id="addDeduction" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another Deduction")</a></td>
                </tr>
             



            </tbody>
        </table>
    </div>
    <input type="hidden" id="MultipleEntrySectionsNr" value="@FormLibConstants.FormField.MultipleEntrySectionsNr" />

</div>



<script>
    function setPaymentDatePickersBehavior() {

        $('#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker('destroy');

        var startDate = $('#ChangeValidFrom').val();
        var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
        var dStart = APIGlobal.DateTime.parseDate(startDate, format);
        var forcePicker = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate(), 0, 0, 0, 0);
        $('#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker(
        {
            onRender: function (ev) {
                return ev.valueOf() < forcePicker.valueOf() ? 'disabled' : '';
            }
        });

        ////set value to the datepicker
        $('#date_DeductionsValidFrom,#date_DeductionsValidFrom2,#date_DeductionsValidFrom3,#date_DeductionsValidFrom4,#date_DeductionsValidFrom5').not(".disabled").datepicker("setValue", forcePicker);
        $('#date_ChangeValidFrom').datepicker("setValue", startDate);

 

        $('#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3,#DeductionsValidFrom4,#DeductionsValidFrom5').val(startDate);
    }

    $('#date_ChangeValidFrom').on('changeDate', function (ev) {
        setPaymentDatePickersBehavior();

    }).data('datepicker');

    $('#ChangeValidFrom').change(function () {
        setPaymentDatePickersBehavior();
    });


    $('#DeductionsValidFrom,#DeductionsValidFrom2,#DeductionsValidFrom3,#DeductionsValidFrom4,#DeductionsValidFrom5').change(function () {

        $('#date_' + $(this).attr("id")).datepicker("setValue", $(this).val());
    });








</script>
