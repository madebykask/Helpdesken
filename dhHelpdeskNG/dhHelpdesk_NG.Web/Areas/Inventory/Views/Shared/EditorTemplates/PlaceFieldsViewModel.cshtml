@using System.Web.Optimization
@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Inventory.Models.EditModel.Shared.PlaceFieldsViewModel
@Scripts.Render("~/bundles/inventory/place-cascading")

<script>
    $(function () {
        var parameters = {
            floorsSearchUrl: '@Url.Action("SearchFloorsByBuildingId")',
            roomsSearchUrl: '@Url.Action("SearchRoomsByFloorId")'
        };

        applyCascadingBehivarior(parameters);
    });
</script>
@if (Model.PlaceFieldsModel.RoomId.Show || Model.PlaceFieldsModel.Location.Show)
{
    <h4>@Translation.GetCoreTextTranslation("Placering")</h4>
    <div class="row">
        <div class="span12">
            <table class="tableform">
                @if (Model.PlaceFieldsModel.RoomId.Show)
                {
                    @Html.EditorFor(m => m.PlaceFieldsModel.BuildingId, "Fields/ListInt",
                   new
                   {
                       Source = Model.Buildings,
                       id = "buildings_dropdown",
                       Label = Translation.GetCoreTextTranslation("Byggnad"),
                       Model.PlaceFieldsModel.RoomId.IsReadOnly
                   })
                    @Html.EditorFor(m => m.PlaceFieldsModel.FloorId, "Fields/ListInt",
                   new {
                       Source = Model.Floors,
                       id = "floors_dropdown",
                       Label = Translation.GetCoreTextTranslation("Våning"),
                       Model.PlaceFieldsModel.RoomId.IsReadOnly
                   })
                }
                @Html.EditorFor(m => m.PlaceFieldsModel.RoomId, "Fields/List", new { Source = Model.Rooms, id = "rooms_dropdown" })
                @Html.EditorFor(m => m.PlaceFieldsModel.Location, "Fields/Text")
            </table>
        </div>
    </div>
}
