@using System.Web.Optimization
@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Inventory.Models.EditModel.Shared.PlaceFieldsViewModel
@Scripts.Render("~/bundles/inventory/place-cascading")

<script>
    $(function () {
        var parameters = {
            floorsSearchUrl: '@Url.Action("SearchFloorsByBuildingId")',
            roomsSearchUrl: '@Url.Action("SearchRoomsByFloorId")'
        };

        applyCascadingBehivarior(parameters);
    });
</script>
@if (Model.PlaceFieldsModel.RoomId.Show
        || Model.PlaceFieldsModel.Location.Show)
{
    <h4>@Translation.Get("Placering")</h4>
    <div class="row">
        <div class="span12">
            <table class="tableform">
                @if (Model.PlaceFieldsModel.RoomId.Show)
                {
                    <tr>
                        <td class="span3">
                            <label>@Translation.Get("Byggnad")</label>
                        </td>
                        <td class="span9">
                            @Html.DropDownListFor(m => m.PlaceFieldsModel.BuildingId, Model.Buildings, string.Empty, new { id = "buildings_dropdown" })
                        </td>
                    </tr>
                    <tr>
                        <td class="span3">
                            <label>@Translation.Get("Våning")</label>
                        </td>
                        <td class="span9">
                            @Html.DropDownListFor(m => m.PlaceFieldsModel.FloorId, Model.Floors, string.Empty, new { id = "floors_dropdown" })
                        </td>
                    </tr>
                }
                @Html.EditorFor(m => m.PlaceFieldsModel.RoomId, "NotReadonlyFields/List", new { Source = Model.Rooms, id = "rooms_dropdown" })
                @Html.EditorFor(m => m.PlaceFieldsModel.Location, "NotReadonlyFields/Text")
            </table>
        </div>
    </div>
}
