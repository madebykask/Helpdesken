@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Inventory.Models.EditModel.Computer.ComputerEditViewModel
@{
    Layout = "~/Areas/Inventory/Views/Workstation/_EditWorkstationLayout.cshtml";
}

@section Actions
{
    <ul class="secnav">
        <li id="menu1">
            <input type="submit" value="@Translation.Get("Spara")" class="btn" onclick=" $('#workstation_edit_form').submit(); "/>
        </li>
        <li id="menu3">@Html.ActionLink(Translation.Get("Ta bort"), "Delete", new { id = Model.ComputerViewModel.Id }, new { @class = "btn" })</li>
        <li id="menu2">@Html.ActionLink(Translation.Get("Avbryt"), "Index", null, new { @class = "btn" })</li>
    </ul>
}

@using (Html.BeginForm("Edit", "Workstation", FormMethod.Post, new { id = "workstation_edit_form" }))
{
    @Html.HiddenFor(m => m.ComputerViewModel.Id)
    @Html.EditorFor(m => m.ComputerViewModel.WorkstationFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.ChassisFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.InventoryFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.OperatingSystemFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.ProccesorFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.MemoryFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.GraphicsFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.CommunicationFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.SoundFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.ContractFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.OtherFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.ContactInformationFieldsModel, new { ComputerId = Model.ComputerViewModel.Id })
    @Html.EditorFor(m => m.ComputerViewModel.OrganizationFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.PlaceFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.ContactFieldsModel)
    @Html.EditorFor(m => m.ComputerViewModel.StateFieldsViewModel)
    @Html.EditorFor(m => m.ComputerViewModel.DateFieldsModel)
    if (Model.ComputerViewModel.CreatedDate.Show || Model.ComputerViewModel.ChangedDate.Show)
    {
        <h4>@Translation.Get("Status")</h4>
    }
    <div class="row">
        <div class="span12">
            <table class="tableform">
                @if (Model.ComputerViewModel.CreatedDate.Show)
                {
                    <tr>
                        <td class="span3">
                            <label>@Translation.Get(Model.ComputerViewModel.CreatedDate.Caption)</label>
                        </td>
                        <td class="span9">
                            @Html.DisplayFor(m => m.ComputerViewModel.CreatedDate.Value, "Date")
                        </td>
                    </tr>
                }
                @if (Model.ComputerViewModel.ChangedDate.Show)
                {
                    <tr>
                        <td class="span3">
                            <label>@Translation.Get(Model.ComputerViewModel.ChangedDate.Caption)</label>
                        </td>
                        <td class="span9">
                            @Html.DisplayFor(m => m.ComputerViewModel.ChangedDate.Value, "Date")
                        </td>
                    </tr>
                    if (Model.ComputerViewModel.ChangedByUserName != null)
                    {
                        <tr>
                            <td class="span3">
                                <label>@Translation.Get("Changed by")</label>
                            </td>
                            <td class="span9">
                                @Html.DisplayFor(m => m.ComputerViewModel.ChangedByUserName.FirstName) @Html.DisplayFor(m => m.ComputerViewModel.ChangedByUserName.LastName)
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
}

