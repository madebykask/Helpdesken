@using DH.Helpdesk.Web.Areas.Inventory.Models
@using DH.Helpdesk.Web.Infrastructure
@model InventoryGridModelForDynamicInventory
@Model.InventoryGridModel.Inventories.Count
@{    
    var userPermission = false;
    var isForDialog = false;
    string userId = null;
    if (ViewData.Keys.Contains("InventoryAdminPermission"))
    {
        userPermission = (bool)ViewData["InventoryAdminPermission"];
    }
    if (ViewData.Keys.Contains("IsForDialog"))
    {
        isForDialog = (bool)ViewData["IsForDialog"];
    }
    if (ViewData.Keys.Contains("UserId"))
    {
        userId = (string)ViewData["UserId"];
    }
 }
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            @foreach (var header in Model.InventoryGridModel.Headers)
            {
                <th>@Translation.Get(header.Caption)</th>
            }
            <th>
                @Translation.Get(" ")
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var inventory in Model.InventoryGridModel.Inventories)
        {
            if (isForDialog)
            {
                <tr>
                    @{
                        var fields = inventory.Fields.ToList();
                        for (var i = 0; i < fields.Count; i++)
                        {
                            var inventoryField = Model.InventoryGridModel.Headers[i];
                            var inventoryFieldValue = fields.Single(v => v.FieldName == inventoryField.FieldName);

                            <td>@inventoryFieldValue.Value.GetDisplayValue()</td>
                        }
                    }
                    <td>
                        @if (userPermission)
                        {
                            @Html.ActionLink(Translation.GetCoreTextTranslation("Ta bort"), "DeleteInventoryFromComputer", new {computerId = Model.ParentId, inventoryId = inventory.Id, dialog = isForDialog, userId }, new {@class = "btn"})
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr onclick='window.location.href = "@Url.Action("Edit", "CustomInventory", new {id = inventory.Id, inventoryTypeId = Model.InventoryGridModel.CurrentMode})"'>
                    @{
                        var fields = inventory.Fields.ToList();
                        for (var i = 0; i < fields.Count; i++)
                        {
                            var inventoryField = Model.InventoryGridModel.Headers[i];
                            var inventoryFieldValue = fields.Single(v => v.FieldName == inventoryField.FieldName);

                            <td class="tdpointer">@inventoryFieldValue.Value.GetDisplayValue()</td>
                        }
                    }
                    <td>
                        @if (userPermission)
                        {
                            @Html.ActionLink(Translation.GetCoreTextTranslation("Ta bort"), "DeleteInventoryFromComputer", new {computerId = Model.ParentId, inventoryId = inventory.Id}, new {@class = "btn"})
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
