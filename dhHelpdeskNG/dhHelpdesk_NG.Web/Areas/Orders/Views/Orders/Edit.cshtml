@using System.Web.Optimization
@using DH.Helpdesk.Web
@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions
@using DH.Helpdesk.Web.Infrastructure.UrlHelpers.Api.Orders
@model DH.Helpdesk.Web.Areas.Orders.Models.Order.OrderEdit.FullOrderEditModel
@{
    Layout = "~/Areas/Orders/Views/Shared/_OrderLayout.cshtml";
}

@section Actions
{
    <ul class="secnav">
    @if (Model.UserHasAdminOrderPermission)
    {
    <li>
        @Html.ActionLink(Translation.GetCoreTextTranslation("Spara"), null, null, new { id = "btnSave", @class = "btn" })
    </li>
    <li>
        @Html.ActionLink(Translation.GetCoreTextTranslation("Ta bort"), "Delete", "Orders", new { id = Model.Id },
        new { @class = "btn deleteDialog", deleteDialogText = Translation.GetCoreTextTranslation("Are you sure?") })
    </li>
    }
        <li>
            @if (Model.IsReturnToCase && Model.Other.CaseNumber.Value.HasValue && Model.Other.CaseId.Value.HasValue)
            {
                <a href="@Url.Content("~/Cases/Edit/" + Model.Other.CaseId.Value.Value)" class="btn">@Translation.GetCoreTextTranslation("Avbryt")</a>
            }
            else
            {
                @Html.ActionLink(Translation.GetCoreTextTranslation("Avbryt"), "Index", "Orders", null, new { @class = "btn" })
            }
        </li>
    <li>
        <i id="actionIndicator" class="gif-loader" style="display: none">&nbsp;</i>
    </li>
    @if (Model.UserHasAdminOrderPermission)
    {
        <li class="secspace"></li>
        <li>
            @Html.ActionLink(" ", "ExportOrder", "Orders", new {id = Model.Id}, new { @class = "export-order", title = Translation.GetCoreTextTranslation("Export fil") })
        </li>
    <li class="secspace"></li>
    <li>
        @Html.CheckBoxFor(m => m.InformOrderer, new { id = "informOrderer_action"})
    </li>
    <li>
        @Html.Label("informOrderer_action", Translation.GetCoreTextTranslation("informera beställare"))
    </li>
    <li class="secspace"></li>
    <li>
        @Html.CheckBoxFor(m => m.InformReceiver, new { id = "informReceiver_action"})
    </li>
    <li>
        @Html.Label("informReceiver_action", Translation.GetCoreTextTranslation("Informera mottagare"))
    </li>
    <li class="secspace"></li>
    if (Model.Other.CaseNumber.Value == null || Model.Other.CaseNumber.Value == 0)
    {
    <li>
        @Html.CheckBoxFor(m => m.CreateCase, new { id = "createCase_action"})
    </li>
    <li>
        @Html.Label("createCase_action", Translation.GetCoreTextTranslation("Skapa ärende"))
    </li>
    }

    }
</ul>        
}

@section Content
{
    @using (Html.BeginForm("Edit", "Orders", FormMethod.Post, new { id = "edit_form" }))
    {
        @Html.EditorFor(m => m)
    }
}

@section Scripts {
    @Scripts.Render(BundleConfig.ScriptNames.Orders.EditOrder)

    <script type="text/javascript">
        $(function () {

            var pageObject = new EditOrder(
                {
                    isOrdererUnitVisible: @((Model.UserInfo.Unit.Show && Model.UserInfo.Units != null).ToJavaScriptBool()),
                    isUserDepartmentVisible: @((Model.UserInfo.DepartmentId1.Show).ToJavaScriptBool()),
                    @if (Model.UserInfo.Units != null && Model.UserInfo.Unit.Show)
                    {
                        @Html.Raw(string.Format("units: {0},", Html.SerializeObjectToJson(Model.UserInfo.Units.Items)))
                    }
                    @if (Model.Statuses != null)
                    {
                        @Html.Raw(string.Format("statuses: {0},", Html.SerializeObjectToJson(Model.Statuses)))
                    }
                    searchDepartmentsByRegionIdUrl: "@Url.Action("SearchDepartmentsByRegionId", "Orders")",
                    valuesSplitter: "&,",
                    pairSplitter: "&;"
                });
            pageObject.init();
         });
    </script>
}