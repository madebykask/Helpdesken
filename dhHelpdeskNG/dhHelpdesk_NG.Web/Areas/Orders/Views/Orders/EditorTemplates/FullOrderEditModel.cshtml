@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Orders.Models.Order.OrderEdit.FullOrderEditModel

@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.CustomerId, new { id = "order_customerId"})
@Html.HiddenFor(m => m.OrderTypeId)

@Html.HiddenFor(m => m.InformOrderer, new { id = "informOrderer"})
@Html.HiddenFor(m => m.InformReceiver, new { id = "informReceiver"})
@if (Model.Other.CaseNumber.Value == null || Model.Other.CaseNumber.Value == 0) { 
   @Html.HiddenFor(m => m.CreateCase, new { id = "createCase"})
}

<ul class="nav nav-tabs">
    @if (Model.Other.CaseNumber.Value.HasValue && Model.Other.CaseId.Value.HasValue)
    {
        <li>
            <a href="@Url.Content("~/Cases/Edit/" + Model.Other.CaseId.Value.Value)" id="case-url">@Translation.GetCoreTextTranslation("Ärende")</a>
        </li>
    }
    <li class="active">
        <a href="#tab-1">@Translation.GetCoreTextTranslation("Beställning")</a>
    </li>
    @if (Model.Log.HasShowableFields())
    {
        <li>
            <a href="#tab-2">@Translation.GetCoreTextTranslation("Logg")</a>
        </li>
    }
    @if (!Model.IsNew)
    {
        <li>
            <a href="#tab-3">@Translation.GetCoreTextTranslation("Historik")</a>
        </li>
    }
</ul>

<div class="tab-content">
    <div id="tab-1" class="tab-pane tab-pane-border active">
        <div class="container">
            <div class="row">
                <div class="span12">  
                    @if (Model.General.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.General)
                    }
                    @if (Model.User.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.User)
                    }
                    @if (Model.UserInfo.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.UserInfo)
                    }
                    @if (Model.Order.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Order)
                    }
                    @if (Model.Contact.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Contact)
                    }
                    @if (Model.Receiver.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Receiver)
                    }
                    @if (Model.Supplier.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Supplier)
                    }
                    @if (Model.Delivery.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Delivery)
                    }
                    @if (Model.Other.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Other)
                    }
                    @if (Model.Program.HasShowableFields())
                    {
                        @Html.EditorFor(m => m.Program)
                    }
                    </div>
                </div>
            </div>
        </div>
        @if (Model.Log.HasShowableFields())
        {
            <div id="tab-2" class="tab-pane tab-pane-border">
                <div class="container">
                    <div class="row">
                        <div class="span12">                        
                           @(Model.IsNew ? Html.EditorFor(m => m.Log, "NewLogEditModel") : Html.EditorFor(m => m.Log))                
                        </div>
                    </div>
                </div>
            </div>                            
        }
        @if (!Model.IsNew)
        {
            <div id="tab-3" class="tab-pane tab-pane-border">
                <div class="container">
                    <div class="row">
                        <div class="span12">
                            @Html.DisplayFor(m => m.History)
                        </div>
                    </div>
                </div>
            </div>            
        }
</div>
