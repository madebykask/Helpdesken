@using LinqLib.Operators
@model DH.Helpdesk.Web.Areas.Orders.Models.Order.FieldModels.ConfigurableFieldModel<string>

@if (!Model.Show)
{
    return;
}

@{
    var valuesSplitter = "&,";
    var pairSplitter = "&;";
    Model.Value = Model.Value ?? "";
    var multiTextValues = Model.Value
        .Split(new[] {pairSplitter}, StringSplitOptions.None)
        .Where(s => !string.IsNullOrWhiteSpace(s))
        .Select(s =>
        {
            var values = s.Split(new[] {valuesSplitter}, StringSplitOptions.None);
            return new {Id = values[0] ?? "", Name = values.Length == 2 ? values[1] ?? "" : ""};
        });
    if(!multiTextValues.Any())
    {
        multiTextValues = new[] {new {Id = "", Name = ""}};
    };
    var multiTextValuesArr = multiTextValues.ToArray();
}
@Html.HiddenFor(m => m.IsRequired)
@Html.HiddenFor(m => m.Value, new { multitext = "" })
@for (var i = 0; i < multiTextValuesArr.Length; i++)
{
    <tr class="multitext" data-field-id="@Html.IdFor(m => m.Value)">
        <td class="span3">
            @Html.FieldCaption(Model) <span class="number">@(i + 1)</span>
        </td>
        <td class="span6">
            @Html.TextBox("id", multiTextValuesArr[i].Id)
            @Html.TextBox("name", multiTextValuesArr[i].Name)
            <i class="icon-plus-sign" name="add"></i>
            <i class="icon-minus-sign" name="remove"></i>
        </td>
        <td class="span3">
            @*@if (i == multiTextValuesArr.Length - 1)
            {
                @Model.Help
            }*@
        </td>
    </tr>
}