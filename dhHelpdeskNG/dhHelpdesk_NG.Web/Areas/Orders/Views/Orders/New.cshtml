@using System.Web.Optimization
@using DH.Helpdesk.Web
@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions
@using DH.Helpdesk.Web.Infrastructure.UrlHelpers.Api.Orders
@model DH.Helpdesk.Web.Areas.Orders.Models.Order.OrderEdit.FullOrderEditModel
@{
    Layout = "~/Areas/Orders/Views/Shared/_OrderLayout.cshtml";
}

@section Actions
{
    <ul class="secnav">               
        <li>
            @Html.ActionLink(Translation.GetCoreTextTranslation("Spara"), null, null, new { id = "btnSave", @class = "btn" })
        </li>
        <li>
            @Html.ActionLink(Translation.GetCoreTextTranslation("Avbryt"), "Index", "Orders", null, new {@class = "btn" })
        </li>
        <li>
            <i id="actionIndicator" class="gif-loader" style="display: none">&nbsp;</i>
        </li>
        <li class="secspace"></li>      
        <li>
            @Html.CheckBoxFor(m => m.InformOrderer, new { id = "informOrderer_action"})
        </li>
        <li>
            @Html.Label("informOrderer_action", Translation.GetCoreTextTranslation("Informera beställare"))
        </li>
        <li class="secspace"></li>      
        <li>
            @Html.CheckBoxFor(m => m.InformReceiver, new { id = "informReceiver_action"})
        </li>
        <li>
            @Html.Label("informReceiver_action", Translation.GetCoreTextTranslation("Informera mottagare"))
        </li>
        <li class="secspace"></li>      
        <li>
            @Html.CheckBoxFor(m => m.CreateCase, new { id = "createCase_action"})
        </li>
        <li>
            @Html.Label("createCase_action", Translation.GetCoreTextTranslation("Skapa ärende"))
        </li>        
    </ul>        
}
@section Content
{
    @using (Html.BeginForm("New", "Orders", FormMethod.Post, new { id = "edit_form" }))
    {
        if (!string.IsNullOrEmpty(Model.OrderTypeDescription))
        {
            <label class="alert alert-info cursor-default mb10">@Html.Raw(Model.OrderTypeDescription)</label>
        }
        if (Model.OrderTypeDocument.Item1.HasValue)
        {
            <a href="@Url.Action("DownloadDocument", new {documentId = Model.OrderTypeDocument.Item1.Value})" class="btn mb10" title="@Model.OrderTypeDocument.Item2">
                <span class="icon-file"></span>
            </a>
        }
        @Html.EditorFor(m => m)
    }
}

@section Scripts {
    @Scripts.Render(BundleConfig.ScriptNames.Orders.EditOrder)

    <script type="text/javascript">
        $(function () {

            var pageObject = new EditOrder(
                {
                    isOrdererUnitVisible: @((Model.UserInfo.Unit.Show && Model.UserInfo.Units != null).ToJavaScriptBool()),
                    isUserDepartmentVisible: @((Model.UserInfo.DepartmentId1.Show).ToJavaScriptBool()),
                    @if (Model.UserInfo.Units != null && Model.UserInfo.Unit.Show)
                    {
                        @Html.Raw(string.Format("units: {0},", Html.SerializeObjectToJson(Model.UserInfo.Units.Items)))
                    }
                    @if (Model.Statuses != null)
                    {
                        @Html.Raw(string.Format("statuses: {0},", Html.SerializeObjectToJson(Model.Statuses)))
                    }
                    searchDepartmentsByRegionIdUrl: "@Url.ApiOrdersAction(WebApiOrdersUrlName.Orders.SearchDepartmentsByRegionId, WebApiOrdersUrlName.Orders.Controller)",
                    valuesSplitter: "&,",
                    pairSplitter: "&;"
                });
            pageObject.init();
            window.scrollTo(0, 0);
        });
    </script>    
}