@using DH.Helpdesk.Web.Infrastructure
@using System.Web.Optimization
@model DH.Helpdesk.Web.Areas.Admin.Models.LockedCaseOverviewModel

<script type="text/javascript">

    window.partialparams = {                
        unLockCaseUrl: '@Url.Content("~/Admin/Users/UnlockCase")',
        filterLockedCaseUrl: '@Url.Content("~/Admin/Users/FilterLockedCases")',
        releaseButtonsPrefixName: 'releaseButton_',
        lockTimeTextPrefixName: 'currentCaseLockedTime_',
        lockedCasePartialName: '#lockedCasePartial',
        customerFilter: '#filterbycustomerid',
        caseNumberFilter: '#FilterCaseNumber',
        textFilter: '#FilterText',
        filterButton: '#doSearch'
    };

</script>

@Scripts.Render("~/bundles/admin/users/index_lockedcases")

<div id="lockedCasePartial">
    <div class="container">
        <div class="row">
            <div class="span7">
                <table class="tableform" id="tblLockedCase" >
                    <tr>
                        <td style="width:120px">
                            @Translation.Get("Kund", Enums.TranslationSource.TextTranslation)
                        </td>
                        <td>
                            @Html.DropDownListFor(model => Model.FilterCustomerId, Model.Customers, "", new { id = "filterbycustomerid" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Translation.Get("Ärende", Enums.TranslationSource.TextTranslation) @Translation.Get("nummer", Enums.TranslationSource.TextTranslation)
                        </td>
                        <td>
                            @Html.EditorFor(model => Model.FilterCaseNumber, new { id = "filterbycasenumber" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Translation.Get("Sök", Enums.TranslationSource.TextTranslation)
                        </td>
                        <td>
                            @Html.EditorFor(model => Model.FilterText, new { id = "filterbytext" })
                            <input type="button" id="doSearch" value="@Translation.Get("Sök", Enums.TranslationSource.TextTranslation)" class="btn" />
                        </td>                      
                    </tr>                    
                </table>
            </div>
        </div>
    </div>

    @using (Html.BeginForm("index", "users", FormMethod.Post, new { id = "searchLockedCases" }))
    {            
        <div class="container">
            <table class="table table-striped table-bordered table-hover table-cases" id="tblUserLockedCases">
                <thead>
                    <tr>                                        
                        <th>
                            @Translation.Get("Användar ID", Enums.TranslationSource.TextTranslation)
                        </th>
                        <th>
                            @Translation.Get("Namn", Enums.TranslationSource.TextTranslation)
                        </th>                     
                        <th>
                            @Translation.Get("Kund", Enums.TranslationSource.TextTranslation)
                        </th>                    
                        <th>
                            @Translation.Get("Ärende", Enums.TranslationSource.TextTranslation)
                        </th>                    
                        <th>
                            @Translation.Get("Låst", Enums.TranslationSource.TextTranslation)
                        </th>
                        <th>
                            @Translation.Get("Lås upp", Enums.TranslationSource.TextTranslation)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var lc in Model.LockedCasesModels)
                    {
                        if (lc.LockedInfo != null)
                        {
                            foreach (var li in lc.LockedInfo.OrderBy(l => l.CreatedTime))
                            {
                                var buttonName = "releaseButton_" + lc.User_Id.ToString();
                                var lockTimeTextName = "currentCaseLockedTime_" + lc.User_Id.ToString();
                                // Convert server time to the user local time
                                var lockTime = TimeZoneInfo.ConvertTime(li.CreatedTime, TimeZoneInfo.FindSystemTimeZoneById(SessionFacade.CurrentUser.TimeZoneId));
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => lc.UserId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => lc.UserFirstName) @Html.DisplayFor(modelItem => lc.UserSureName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => li.CustomerName)                                        
                                    </td>
                                    <td>
                                        @Convert.ToInt64(li.CaseNumber)
                                    </td>
                                    <td>
                                         @Html.DisplayFor(modelItem => lockTime)                                                                             
                                    </td>
                                    <td>
                                        <input type="button" id="@buttonName" selectedcaseid="@li.CaseId" value="@Translation.Get("Lås upp", Enums.TranslationSource.TextTranslation)" class="btn releasecase" />
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>        
    }
</div>