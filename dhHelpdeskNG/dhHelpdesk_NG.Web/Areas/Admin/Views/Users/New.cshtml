@using System.Web.Optimization
@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Admin.Models.UserInputViewModel
@{
    ViewBag.Title = "";
}
@using (Html.BeginForm("new", "users", new { id = Model.User.Id }, FormMethod.Post, new { id = "target" }))
{
    <div class="secnavs fixed">
        <div class="pull-left">
            <ul class="secnav">
                <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation), "new", null, new { onclick = "$('#target').submit();return false;", @class = "btn" })</li>
                <li>@Html.ActionLink(Translation.Get("Avbryt", Enums.TranslationSource.TextTranslation), "index", null, new { @class = "btn" })</li>
            </ul>
        </div>
    </div>
    @Html.Partial("_Input", Model)

}
<script type="text/javascript">
    $(function () {
        var submitted = false;
        var RemoveCustomerIDRequiredMessage = function () {
            $('.validation-summary-errors li:contains("Customer_Id")').remove();
        };
        RemoveCustomerIDRequiredMessage();

        $("#target").validate({
            ignore: '',
            rules: {
                "User.UserID": {
                    required: true
                },
                "User.FirstName": {
                    required: true
                },
                "User.SurName": {
                    required: true
                },
                "User.Email": {
                    required: true
                }
                ,
                "User.Customer_Id": {
                    required: true
                },

                "NewPassword": {
                    required: true
                },

                "ConfirmPassword": {
                    equalTo: "#NewPassword"
                }
            },
            messages: {
                "User.UserID": {
                    required: "@Translation.GetForJS("Du måste ange ett Användar ID")"
                },
                "User.FirstName": {
                    required: "@Translation.GetForJS("Du måste ange ett förnamn")"
                },
                "User.SurName": {
                    required: "@Translation.GetForJS("Du måste ange ett efternamn")"
                },
                "User.Email": {
                    required: "@Translation.GetForJS("Du måste ange en e-post adress")"
                }
                ,
                "User.Customer_Id": {
                    required: "@Translation.GetForJS("Du måste ange en standardkund")"
                },
                "NewPassword": {
                    required: "@Translation.GetForJS("Du måste ange ett lösenord")"
                },

                "ConfirmPassword": {
                    equalTo: "@Translation.GetForJS("Kontrollera att lösenord och bekräftat lösenord stämmer överens")"
                }
            },
            showErrors: function(errorMap, errorList) {
                if (submitted) {
                    var liSet = '';
                    $('li[tab]').removeClass('error');
                    $.each(errorList, function () {
                        const tabId = $(this.element).parents('.tab-pane')[0].id;
                        $('li[tab="' + tabId + '"]').addClass('error');
                        liSet += '<li>' + this.message + '</li>';
                    });
                    $('.validation-summary-valid ul').html(liSet);
                    submitted = false;
                }
                this.defaultShowErrors();
            },          
            invalidHandler: function(form, validator) {
                submitted = true;
            },
            submitHandler: function (form) {
                submitForm();
                form.submit();
            }
        });
    });

    $("input:text:visible:first").focus();

</script>

@Scripts.Render("~/bundles/admin/users")