@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Areas.Admin.Models.UserInputViewModel

@{
    var passChangeText = Translation.Get("Lösenordet har ändrats", Enums.TranslationSource.TextTranslation);    
    
    var passChangeError = Translation.Get("De lösenord du angav stämmer inte överens med varandra. Försök igen", Enums.TranslationSource.TextTranslation);
}
<div class="formContainer">
    <table class="tableform">
        <tr>
            <td class="span3">
                @Translation.Get("Förnamn", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.FirstName, new { maxlength = "20" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Efternamn", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.SurName, new { maxlength = "30" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Adress", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Address, new { maxlength = "50" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Postadress", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.PostalCode, new { maxlength = "5", style = "width: 60px;" })
                @Html.TextBoxFor(model => model.User.PostalAddress, new { maxlength = "30", style = "width: 222px;" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Telefon", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Phone, new { maxlength = "20" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Mobil", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.CellPhone, new { maxlength = "20" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("E-post", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Email, new { maxlength = "50" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Aktiv", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                <input type="checkbox" name="User.IsActive" @(Model.User.IsActive == 1 ? "checked=checked" : "") value="1"/>
                <input type="hidden" name="User.IsActive" value="0" />
            </td>
        </tr>
        @if (Model.User.Id == null || Model.User.Id == 0 || Model.User.Id == -1)
        {
            <tr>
                <td>
                    @Translation.Get("Lösenord", Enums.TranslationSource.TextTranslation)
                </td>
                <td>
                    @Html.PasswordFor(model => model.NewPassword, new { maxlength = "20" })
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Bekräfta lösenord", Enums.TranslationSource.TextTranslation)
                </td>
                <td>
                    @Html.PasswordFor(model => model.ConfirmPassword, new { maxlength = "20" })
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td>
                    @Translation.Get("Byt lösenord", Enums.TranslationSource.TextTranslation)
                </td>
                <td>
                    <input type="button" value="@Translation.Get("Byt lösenord", Enums.TranslationSource.TextTranslation)" name="changePassword" class="changePassword btn"
                        onclick="ChangePassword()" onmouseover="javascript:this.style.cursor='hand'; javascript:this.style.cursor='pointer';"/>
                </td>
            </tr>
        }
    </table>

</div>
<div id="divPasswordDialog" class="modal hide fade">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>@Translation.Get("Byt lösenord", Enums.TranslationSource.TextTranslation)</h3>
    </div>
    <div class="modal-body">
        @Html.Partial("_ChangePassword", Model)
    </div>
</div>
<script type="text/javascript">

    function ChangePassword() {

        var mod = $('#divPasswordDialog').modal('show');

        mod.find("#btnClose").on("click", function (e) {
            mod.modal('hide');
        });

        mod.find("#btnSavePassword").on("click", function (e) {
            if ($('#NewPassword').val() != $('#ConfirmPassword').val()) {
                var e = '@passChangeError';
                ShowToastMessage(e, "Error");
                //alert('@Translation.Get("De lösenord du angav stämmer inte överens med varandra. Försök igen", Enums.TranslationSource.TextTranslation)');
            } else {
                $.post('/users/EditUserPassword/', { id: $('#id_user').val(), newPassword: $('#NewPassword').val(), confirmPassword: $('#ConfirmPassword').val() }, function (data) {
                    var e = '@passChangeText';
                    ShowToastMessage(e, "Alert");
                    //alert('@Translation.Get("Lösenordet har ändrats", Enums.TranslationSource.TextTranslation)');

                $('#NewPassword').val('');
                $('#ConfirmPassword').val('');
            });
            }
            mod.modal('hide');
        });

        mod.on("hide", function () {
            $("#divPasswordDialog #btnSavePassword").off("click");
            $("#divPasswordDialog #btnClose").off("click");
        });
    }

    function ShowToastMessage(message, msgType) {
        $().toastmessage('showToast', {
            text: message,
            sticky: true,
            position: 'top-center',
            type: msgType,
            closeText: '',
            stayTime: 10000,
            inEffectDuration: 1000,
            width: 500,
            close: function () {
                //console.log("toast is closed ...");
            }
        });
    }

</script>
