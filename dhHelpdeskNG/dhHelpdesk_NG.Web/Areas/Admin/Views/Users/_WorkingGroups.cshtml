@using DH.Helpdesk.BusinessData.Enums.Users
@model DH.Helpdesk.Web.Areas.Admin.Models.UserInputViewModel

@{
    var admPostFix = WorkingGroupUserPermission.ADMINSTRATOR.ToString();
    var memberPostFix = "3";
    var readPostFix = WorkingGroupUserPermission.READ_ONLY.ToString();
    var customerName = "";

    var workingGroupsByCustomer = Model.ListWorkingGroupsForUser.GroupBy(p => new {CustomerId = p.CustomerId, CustomerName = p.CustomerName}).OrderBy(gr => gr.Key.CustomerName).Select(gr => new
    {
        gr.Key.CustomerId,
        gr.Key.CustomerName,
        WorkingGroups = gr.OrderBy(wg => wg.WorkingGroupName).ToList()
    }).ToList();

    var i = 0;
    var j = 0;
}

<div class="container">
    @*for (var i = 0; i < Model.ListWorkingGroupsForUser.Count; i++)*@
    @foreach (var customerGroup in workingGroupsByCustomer)
    {
        j = 0;
        <table class="tableform"> 
            <thead>
            <tr>
                <th class="span3">
                    @Translation.GetCoreTextTranslation("Kund")
                </th>
                <th class="span3">
                    @Translation.GetCoreTextTranslation("Driftgrupp")
                </th>
                <th class="span3">
                    <input type="checkbox" class="allAdministrators" @(Model.ListWorkingGroupsForUser.Where(u => u.CustomerName == customerGroup.CustomerName).All(u => u.RoleToUWG == WorkingGroupUserPermission.ADMINSTRATOR) ? "checked=checked" : "")/>&nbsp;@Translation.GetCoreTextTranslation("Handläggarrättighet")
                </th>
                <th class="span3">
                    <input type="checkbox" class="allWorkGroupMember" @(Model.ListWorkingGroupsForUser.Where(u => u.CustomerName == customerGroup.CustomerName).All(u => u.IsMemberOfGroup) ? "checked=checked" : "")/>&nbsp;@Translation.GetCoreTextTranslation("Medlem i grupp")
                </th>
                <th class="span3">
                    <input type="checkbox" class="allReadPermissions" @(Model.ListWorkingGroupsForUser.Where(u => u.CustomerName == customerGroup.CustomerName).All(u => u.RoleToUWG == WorkingGroupUserPermission.READ_ONLY) ? "checked=checked" : "")/>&nbsp;@Translation.GetCoreTextTranslation("Läsrättighet")
                </th>
                <th class="span3">
                    @Translation.GetCoreTextTranslation("Standard")
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var uwg in customerGroup.WorkingGroups)
            {
                var enabledDefWG = uwg.RoleToUWG == WorkingGroupUserPermission.READ_ONLY || uwg.RoleToUWG == WorkingGroupUserPermission.ADMINSTRATOR;
                <tr>
                    <td>
                        @if (j == 0)
                        {
                            @uwg.CustomerName
                            <input type="radio" style="display: none;" data-field="userWorkingGroup" name="@uwg.CustomerId" value="-1"/>
                        }
                    </td>
                    <td>
                        <span class='@(!uwg.IsActive ? "disabled" : "")'> @Translation.GetCoreTextTranslation(uwg.WorkingGroupName) </span>
                    </td>
                    <td>
                        <input type="checkbox" name="@string.Format("UserWorkingGroups[{0}].UserRole", i)" id="UserWorkingGroup_[@i]_@admPostFix" @(uwg.RoleToUWG == WorkingGroupUserPermission.ADMINSTRATOR ? "checked=checked" : "") data-field-id="@i" class="userRole" value="@admPostFix"/>
                        <input type="hidden" name="@string.Format("UserWorkingGroups[{0}].User_Id", i)" value="@uwg.User_Id"/>
                        <input type="hidden" name="@string.Format("UserWorkingGroups[{0}].WorkingGroup_Id", i)" value="@uwg.WorkingGroup_Id"/>
                    </td>
                    <td>
                        <input type="checkbox" name="@string.Format("UserWorkingGroups[{0}].IsMemberOfGroup", i)" id="UserWorkingGroup_[@i]_@memberPostFix" @(uwg.IsMemberOfGroup ? "checked=checked" : "") data-field-id="@i" class="userRole" value="true"/>
                    </td>
                    <td>
                        <input type="checkbox" name="@string.Format("UserWorkingGroups[{0}].UserRole", i)" id="UserWorkingGroup_[@i]_@readPostFix" @(uwg.RoleToUWG == WorkingGroupUserPermission.READ_ONLY ? "checked=checked" : "") data-field-id="@i" class="userRole" value="@readPostFix"/>
                    </td>
                    <td>
                        <input type="radio" name="@uwg.CustomerId" data-field="userWorkingGroup" data-field-id="@i" value="@uwg.IsStandard" @(uwg.IsStandard == 1 && enabledDefWG ? "checked=checked" : "") @(enabledDefWG ? "" : "disabled") id="UserWorkingGroup_[@i]_Def"/>
                        <input type="hidden" name="@string.Format("UserWorkingGroups[{0}].IsDefault", i)" data-field="@string.Format("userWorkingGroup{0}", i)" value="@(enabledDefWG ? uwg.IsStandard : '0')" id="UserWorkingGroup_[@i]_Defhid"/>
                    </td>
                </tr>
                i++;
                j++;
            }
            </tbody>
        </table>
    }
</div>
<script type="text/javascript">

    $(function () {
        var admPostFix = '@admPostFix';
        var memberPostFix = '@memberPostFix';
        var readPostFix = '@readPostFix';
        var toggleChecboxesFunc = function (e, colnum) {
            var checkboxes = $(e.target).parents('table').first()
                .find('tbody tr td:nth-child(' + colnum + 'n) input[type="checkbox"]');
            for (var i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = e.target.checked;
                $(checkboxes[i]).trigger('change', true);
            }
        }

        $('.allAdministrators').on('click', function (e) { toggleChecboxesFunc(e, 3) });
        $('.allWorkGroupMember').on('click', function (e) { toggleChecboxesFunc(e, 4) });
        $('.allReadPermissions').on('click', function (e) { toggleChecboxesFunc(e, 5) });

        function updateAllCheckbox($control, idNum) {
            var name = '';
            var colnum = 0;
            var isChecked = true;
            switch (idNum) {
                case readPostFix: {
                        name = 'allReadPermissions';
                        colnum = 5;
                        break;
                    }
                case admPostFix: {
                        name = 'allAdministrators';
                        colnum = 3;
                        break;
                    }
                case memberPostFix: {
                        name = 'allWorkGroupMember';
                        colnum = 4;
                        break;
                    }
                default:
                    return;
            }
            //find if any checkbox is false
            var parentRoot = $control.parents('table').first();
            var checkboxes = parentRoot
                .find('tbody tr td:nth-child(' + colnum + 'n) input[type="checkbox"]');
            for (var i = 0; i < checkboxes.length; i++) {
                if (!checkboxes[i].checked) {
                    isChecked = false;
                    break;
                }
            }
            parentRoot.find('thead th .' +name)[0].checked = isChecked;
        }

        $('.userRole').on('change', function (e, isTriggeredByAllChk) {
            var $control = $(e.target);

            var id = $control.attr('id');
            var baseName = id.substring(0, id.length - 1);
            var idNum = id.substring(id.length - 1);

            var readCtrl = document.getElementById(baseName + readPostFix);
            var memberCtrl = document.getElementById(baseName + memberPostFix);
            var admCtrl = document.getElementById(baseName + admPostFix);

            if ((idNum === admPostFix || idNum === memberPostFix) && $control.is(':checked') === true) {
                readCtrl.checked = false;
                admCtrl.checked = memberCtrl.checked = true;
            }
            if (idNum === admPostFix && $control.is(':checked') === false) {
                memberCtrl.checked = false;
            }
            if (idNum === readPostFix && $control.is(':checked') === true) {
                admCtrl.checked = false;
                memberCtrl.checked = false;
            }

            var r = baseName + 'Def';
            var rh = baseName + 'Defhid';

            document.getElementById(r).disabled = !(admCtrl.checked || memberCtrl.checked || readCtrl.checked);
            if (!admCtrl.checked &&
                    !memberCtrl.checked &&
                    !readCtrl.checked) {
                document.getElementById(r).checked = false;
                document.getElementById(rh).value = '0';
            }
            if (!isTriggeredByAllChk)
                updateAllCheckbox($control, idNum);

        });
    });


</script>
