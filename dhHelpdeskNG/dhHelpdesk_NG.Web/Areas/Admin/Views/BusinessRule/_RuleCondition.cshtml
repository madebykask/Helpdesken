@using DH.Helpdesk.Web.Areas.Admin.Models.BusinessRule
@model BRConditionModel
@{
    ViewBag.Title = "";
}

<h4>@Translation.Get("Conditions")</h4>

<table id="BRCondition1" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th style="width:10%">
                Field
            </th>
            <th style="width:25%">
                From value
            </th>
            <th style="width:25%">
                To value
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>

        <tr>
            <td>
                @Translation.Get("Process")
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.ProcessesFromValue, (List<DdlModel>)@ViewBag.ProcessList, new { @id = "lstProcessFrom", @name = "lstProcessFrom", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.ProcessesFromValue)
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.ProcessesToValue, (List<DdlModel>)@ViewBag.ProcessList, new { @id = "lstProcessTo", @name = "lstProcessTo", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.ProcessesToValue)
            </td>
            <td></td>
        </tr>

        <tr>
            <td>
                @Translation.Get("Status")
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.StatusesFromValue, (List<DdlModel>)@ViewBag.Status, new { @id = "lstStatusFrom", @name = "lstStatusFrom", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.StatusesFromValue)
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.StatusesToValue, (List<DdlModel>)@ViewBag.Status, new { @id = "lstStatusTo", @name = "lstStatusTo", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.StatusesToValue)
            </td>

            <td></td>
        </tr>

        <tr>
            <td>
                @Translation.Get("SubStatus")
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.SubStatusesFromValue, (List<DdlModel>)@ViewBag.SubStatus, new { @id = "lstSubStatusFrom", @name = "lstSubStatusFrom", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.SubStatusesFromValue)
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.SubStatusesToValue, (List<DdlModel>)@ViewBag.SubStatus, new { @id = "lstSubStatusTo", @name = "lstSubStatusTo", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.SubStatusesToValue)
            </td>

            <td></td>
        </tr>

    </tbody>
</table>


<table id="BRCondition2" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th style="width:15%">
                Attribute
            </th>
            <th style="width:20%">
                Equals
            </th>
            <th style="width:25%">

            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @Translation.Get("Domän/E-postmönster")
                <span class="icon-info-sign ml15" rel="tooltip"
                      title=""
                      data-original-title='@Translation.GetCoreTextTranslation("Ange en domän (t.ex. 'gmail.com') eller specifika e-postadresser separerade med semikolon (t.ex. 'user@example.com; another@example.com').")'></span>
            </td>
            <td>
                @Html.TextAreaFor(m => Model.Equals, new { id = "lstEquals", @class = "BR-text", maxlength = "1000" })
            </td>
            <td></td>

            <td></td>
        </tr>

    </tbody>
</table>


<table id="BRCondition3" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th style="width:10%">
                Field
            </th>
            <th style="width:25%">
                From value
            </th>
            <th style="width:25%">
                To value
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @Translation.Get("Status")
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.StatusesFromValue, (List<DdlModel>)@ViewBag.Status, new { @id = "lstStatusFrom2", @name = "lstStatusFrom2", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.StatusesFromValue)
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.StatusesToValue, (List<DdlModel>)@ViewBag.Status, new { @id = "lstStatusTo2", @name = "lstStatusTo2", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.StatusesToValue)
            </td>

            <td></td>
        </tr>
        <tr>
            <td>
                @Translation.Get("SubStatus")
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.SubStatusesFromValue, (List<DdlModel>)@ViewBag.SubStatus, new { @id = "lstSubStatusFrom2", @name = "lstSubStatusFrom2", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.SubStatusesFromValue)
            </td>
            <td>
                @Html.ListBoxExtendedOptionsFor(x => x.SubStatusesToValue, (List<DdlModel>)@ViewBag.SubStatus, new { @id = "lstSubStatusTo2", @name = "lstSubStatusTo2", @class = "BR-chosen-select", @multiple = "" }, x => ((DdlModel)x).Disabled ? "DisabledChosen" : "")
                @Html.ValidationMessageFor(model => model.SubStatusesToValue)
            </td>

            <td></td>
        </tr>
    </tbody>
</table>


