@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions
@model DH.Helpdesk.Web.Areas.Admin.Models.OUInputViewModel
@if (TempData["Error"] != null)
{
    <div class="alert alert-error">@Translation.Get("Organisationsenhet", Enums.TranslationSource.TextTranslation)
        @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
    </div>    
}
<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Organisationsenhet", Enums.TranslationSource.TextTranslation)  @Model.Customer.Name</a></li>
        </ul>
    <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-error">@Translation.Get("Organisationsenhet", Enums.TranslationSource.TextTranslation)
                            @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
                        </div>    
                    }
                    <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Område", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="span9">
                                        <select id="OU_Department_Region_Id" name="OU_Department_Region_Id" >
                                            @foreach (var selectListItem in Model.Regions)
                                            {
                                                <option @((Model.OU.Department != null && Model.OU.Department.Region_Id == int.Parse(selectListItem.Value)) ? "selected='selected'" : "") value="@selectListItem.Value">@selectListItem.Text</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.OU.Department_Id, Model.Departments, string.Empty)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Förälderenhet", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.OU.Parent_OU_Id, Model.OUs, "")
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Organisationsenhet", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OU.Name, new { maxlength = "50" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Kortbeteckning", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OU.OUId, new { maxlength = "20" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("LDAP sökväg", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OU.Path, new { maxlength = "200", style = "width: 600px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Hemkatalog", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OU.HomeDirectory, new { maxlength = "200", style = "width: 600px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Inloggningsskript", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.OU.ScriptPath, new { maxlength = "100", style = "width: 600px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Synkronisering", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td><label class="checkbox">
                                        <input type="checkbox" name="OU.ADSync" @(Model.OU.ADSync == 1 ? "checked=checked" : "") value="1"/>
                                        <input type="hidden" name="OU.ADSync" value="0" />
                                        &nbsp;@Translation.Get("användare som ingår i organisationsenheten", Enums.TranslationSource.TextTranslation)
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td><label class="checkbox">
                                        <input type="checkbox" name="OU.Show" @(Model.OU.Show == 1 ? "checked=checked" : "") value="1"/>
                                        <input type="hidden" name="OU.Show" value="0" />
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Aktivera", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td><label class="checkbox">
                                        <input type="checkbox" name="OU.IsActive" @(Model.OU.IsActive == 1 ? "checked=checked" : "") value="1"/>
                                        <input type="hidden" name="OU.IsActive" value="0" />
                                        </label>
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.OU.Id)
                            @Html.HiddenFor(model => model.OU.Parent_OU_Id)
                            <input type="hidden" id="sdepartments" value="@Model.SDepartments.ToJavaScriptObject()" />
                            <input type="hidden" id="allAvailableOrganizationUnits" value="@Model.AllAvailableOrganizationUnits.ToJavaScriptObject()" />
                            <input type="hidden" id="parentId" value="@Model.OU.Parent_OU_Id" />
                        </div>
                    </div>
                </div>

                @if (Model.OU.ComputerUserGroups != null && Model.OU.ComputerUserGroups.Any())
                {
                    <h4>@Translation.Get("Grupper", Enums.TranslationSource.TextTranslation)</h4>
                    
                    <div class="container">
                        <table class="table table-striped table-bordered table-hover" id="tblComputerUserGroups">
                            <thead>
                                <tr>
                                    <th>
                                        @Translation.Get("AD grupper", Enums.TranslationSource.TextTranslation)
                                    </th>
                                    <th>
                                        @Translation.Get("LDAP sökväg", Enums.TranslationSource.TextTranslation)
                                    </th>
                                    <th>
                                        @Translation.Get("Standard", Enums.TranslationSource.TextTranslation)
                                    </th>
                                    <th>
                                        @Translation.Get("Visa på startsidan", Enums.TranslationSource.TextTranslation)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OU.ComputerUserGroups)
                                {
                                    <tr>
                                        <td>
                                            @item.Name
                                        </td>
                                        <td>
                                            @item.Path
                                        </td>
                                        <td>
                                            @Translation.Get(item.IsDefault.TranslateBit(), Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Translation.Get(item.ShowOnStartPage.TranslateBit(), Enums.TranslationSource.TextTranslation)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $("#OU_Department_Region_Id").focus();
      
        var departments = jQuery.parseJSON($("#sdepartments").val());
        var $selDepartments = $("#OU_Department_Id");
        var $orgUnits = $("#OU_Parent_OU_Id");

        var changeRegion = function () {
            var regionId = $("#OU_Department_Region_Id").val();
            var selDepartmentId = $selDepartments.val();
            var selected;

            $selDepartments.empty()
                .append($("<option />").val("").text(""));

            jQuery.each(departments, function (i, v) {
                selected = "";
                if (selDepartmentId == v.Id)
                    selected = "selected='selected'";

                if (regionId == undefined || regionId == "")
                    $selDepartments.append($("<option />").val(v.Id).text(v.Name));
                else if (regionId == v.Region_Id)
                    $selDepartments.append($("<option " + selected + " />").val(v.Id).text(v.Name));
            });
        };

        var changeDepartment = function () {
            var deptId = $("#OU_Department_Id").val();
            var currentOrgUnitId = parseInt($("#OU_Id").val(), 10);
            var isCreatingNew = currentOrgUnitId === 0;
            var orgUnits = jQuery.parseJSON($('#allAvailableOrganizationUnits').val()) || [];
            var out = ['<option value=""></option>'];
            var parentId = parseInt($('#parentId').val(), 10);
            if (deptId != null) {
                jQuery.each(orgUnits, function (i, unit) {
                    if (unit.departmentId == deptId && (isCreatingNew || (!isCreatingNew && unit.id != currentOrgUnitId))) {
                        var selected = !isNaN(parentId) && parentId == unit.id ? 'selected="selected"' : '';
                        out.push(['<option value="', unit.id, '" ', selected, '>', unit.name, '</option>'].join(''));
                    }
                });
            }
            $orgUnits.empty().html(out.join(''));
        }

        changeRegion();
        changeDepartment();

        var validator = $("#target").validate({
            rules: {
                "OU.Name": {
                    required: true
                },
                "OU.Department_Id": {
                    required: true
                },
            },
            messages: {
                "OU.Name": {
                    required: "@Translation.Get("Du måste ange en organisationsenhet", Enums.TranslationSource.TextTranslation)"
                },
                "OU.Department_Id": {
                     required: "@Translation.Get("Du måste ange en avdelning", Enums.TranslationSource.TextTranslation)"
                }
            },
            submitHandler: function (form) {
                form.submit();
            }
        });

        $("#OU_Department_Region_Id").change(changeRegion);
        $("#OU_Department_Id").change(changeDepartment);
    });

</script>
