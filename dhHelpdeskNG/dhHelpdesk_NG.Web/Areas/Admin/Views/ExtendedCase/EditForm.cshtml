@using DH.Helpdesk.Web
@using DH.Helpdesk.Web.Models.Faq.Output

@model DH.Helpdesk.BusinessData.Models.Case.CustomerCaseSolutions

@Scripts.Render(BundleConfig.ScriptNames.ConfirmationDialog)
<div class="secnavs fixed">
    <div class="pull-left">
        <ul class="secnav">
            @*<li>@Html.ActionLink(Translation.GetCoreTextTranslation("Spara"), "Edit", "ExtendedCase", new { customerId = @Model.Id }, new { onclick = "submitForm();return false;", @class = "btn" })</li>*@
            <li><input type="button" class="btn" value=@Translation.GetCoreTextTranslation("Spara") onclick="submitForm()"></li>
            <li><input disabled type="button" class="btn" value="@Translation.GetCoreTextTranslation("Ta bort")" id="delete_button"></li>
            <li>@Html.ActionLink(Translation.GetCoreTextTranslation("Avbryt"), "Edit", new { area = "admin", controller = "Customer", action = "Edit", id = @Model.Customer.Id }, new { @class = "btn" })</li>
        </ul>
    </div>
</div>
<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#subfragment-1">@Translation.GetCoreTextTranslation("Avdelning") - @Model.Customer.Name</a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th colspan="2">
                                    @Translation.GetCoreTextTranslation("Allmänt")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    @Translation.GetCoreTextTranslation("Formulär")  @Translation.GetCoreTextTranslation("Namn")
                                </td>
                                <td>
                                    <input id="formName" required type="text" maxlength="100" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Translation.GetCoreTextTranslation("Formulär")  @Translation.GetCoreTextTranslation("Beskrivning")
                                </td>
                                <td>
                                    <input id="formDescription" type="text" maxlength="500" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Translation.GetCoreTextTranslation("Ärendemallar")
                                </td>
                                <td>
                                    <select required id="drpCaseSolutions" class="chosen-select" multiple placeholder=@Translation.GetCoreTextTranslation("Välj en eller flera")>
                                        @*<option value="">Please select</option>*@
                                        @foreach (var item in Model.CaseSolutionSelections)
                                        {
                                            <option value="@item.Id" @((item.IsChecked == true) ? "selected" : "")>@item.Name</option>
                                        }
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Translation.GetCoreTextTranslation("Aktiv")
                                </td>
                                <td>
                                    <input id="formActive" type="checkbox" checked />
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>
                                    @Translation.GetCoreTextTranslation("Formulär") editor
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <div id="fields" class="dragndrop">
                                        <ul id="source">
                                            <li data-type="section"><i class="fa fa-header" aria-hidden="true"></i> Section Name</li>
                                            <li data-type="textbox"><i class="fa fa-font" aria-hidden="true"></i> Text Field</li>
                                            <li data-type="textarea"><i class="fa fa-text-width" aria-hidden="true"></i> Text Area</li>
                                            <li data-type="date"><i class="fa fa-calendar-o" aria-hidden="true"></i> Date Field</li>
                                            @*<li data-type="select"><i class="fa fa-list-ul" aria-hidden="true"></i> Template</li>*@
                                            <li data-type="html"><i class="fa fa-file-word-o" aria-hidden="true"></i> Info Field</li>
                                        </ul>
                                        <input id="btnClear" class="btn" type="button" onclick="clearItems()" value="Clear" />
                                    </div>
                                    <ul id="dropzone" class="dragndrop"></ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/font-awesome.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript">

    const IDNAME = "firstSectionId";
    let divHeaderActions = (idName) => "<div class='header-actions'><a class='fa fa-pencil fa-lg' data-toggle='collapse' href='#" + idName + "' role='button' title='Edit' aria-hidden='true'></a><a class='fa fa-trash fa-lg' href='#" + idName + "' title='Remove Element' role='button' aria-hidden='true'></a></div>";
    let divHeaderLabel = (labelClass, labelName, idName) => "<div class='header-label'><label class='" + labelClass + "' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>" + labelName + "</label></div>";
    let editFieldHtml = (idName, placeHolder, hasLabelName, hasRequiredChk) => {
        var res =
            "<div class='collapse' id = '" + idName + "'><div><table class='table borderless' style='margin-left:10px;margin-right:10px'><tbody>"
        if (hasLabelName) {
            res = res + "<tr><td><label for='" + idName + "label" + "'>Label</label></td><td><input class='labelName' type='text' id='" + idName + "label" + "' placeholder='" + placeHolder + "'></td></tr>"
        }

        if (hasRequiredChk) {
            res = res + "<tr><td><label for='" + idName + "required" + "' class=''>Required</label></td><td><input type='checkbox' class='chkRequired' id='" + idName + "required" + "'></td></tr>";
        }
        res = res +"</table></div ></div>";
        return res;
    }
    let sectionHtmlDiv = (editFieldHtml, idName, labelClass, labelName) => "<div class='field'><div class='header'>" + divHeaderLabel(labelClass, labelName, idName) + divHeaderActions(idName) + "</div><br/>" + editFieldHtml + "</div>";
    let sectionHtml = () => "<li data-type='section' class='ui-draggable' style='display: list-item'>" + sectionHtmlDiv(editFieldHtml(IDNAME, "Section Name", true, false), IDNAME, "field-label sectionLabel", "Section Name") + "</li>";

    $(document).ready(function () {
        var draggedFrom = "";
        var draggedItem;

        //let templates = {};
        // templates = getTemplates();

        $("#source li").draggable({
            connectToSortable: "#dropzone", helper: "clone", revert: 'invalid',
            start: function (e, ui) {
              $(ui.helper).css('width', "10%");
                draggedItem = ui.item;
                draggedFrom = $(this).closest(".dragndrop").attr("id");
            },
            stop: function (event, ui) {
                $(ui.helper).css('width', "100%");
            },
            opacity: 0.75
        });

        $("#dropzone").sortable({
            revert: true,
            receive: function (event, ui) {
                let idName = createUUID();
                if (draggedFrom == "fields") {
                    switch (draggedItem.data('type')) {
                        case "section":
                            draggedItem.html(sectionHtmlDiv(editFieldHtml(idName, "Section Name", true, false), idName, "field-label sectionLabel", "Section Name"));
                            break;

                        case "textbox":
                            draggedItem.html("<div class='field'><div class='header'><div class='header-label'><label class='field-label' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>Text Field</span> <span class='required' id='" + idName + "requiredSpan" + "'>*</span></label></div>" + divHeaderActions(idName) + "</div><div class='control'><input type='text' class='form-control form-control-width' readonly></div>" + editFieldHtml(idName, "Text Field", true, true) + "</div>")
                            break;

                        case "textarea":
                            draggedItem.html("<div class='field'><div class='header'><div class='header-label'><label class='field-label' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>Text Area</span> <span class='required' id='" + idName + "requiredSpan" + "'>*</span></label></div>" + divHeaderActions(idName) + "</div><div class='control'><textarea class='form-control form-control-width' readonly></textarea></div>" + editFieldHtml(idName, "Text Area", true, true) + "</div>")
                            break;

                        case "date":
                            draggedItem.html("<div class='field'><div class='header'><div class='header-label'><label class='field-label' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>Date Field</span> <span class='required' id='" + idName + "requiredSpan" + "'>*</span></label></div>" + divHeaderActions(idName) + "</div><div class='control'><input type='date' class='form-control form-control-width' readonly></div>" + editFieldHtml(idName, "Date Field", true, true) + "</div>")
                            break;

                        //case "select":

                        //    templates = getTemplates();
                        //    draggedItem.html("<div class='field'><div class='header'><div class='header-label'><label class='field-label' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>Template</span> <span class='required' id='" + idName + "requiredSpan" + "'>*</span></label></div>" + divHeaderActions(idName) + "</div><div class='control'><select class='form-control form-control-width' data-placeholder='Choose a template...'><option>Template1</option><option>Template2</option><option>Template3</option></select></div>" + editFieldHtml(idName, "Template") + "</div>")
                        //    break;

                        case "html":
                            draggedItem.html("<div class='field'><div class='header'><div class='header-label'><label class='field-label' id='" + idName + "header" + "'><span id= '" + idName + "headerName" + "'>Info Field</span> <span class='required' id='" + idName + "requiredSpan" + "'>*</span></label></div>" + divHeaderActions(idName) + "</div><div class='control' style='padding:10px'><input type='text' class='form-control form-control-width form-control-tinymce'></div></div>")
                            tinymce.init({
                                selector: '.form-control-tinymce',
                                plugins: "lists",
                                toolbar: "numlist bullist | undo redo | bold italic",
                                width: "100%%",
                                height: "150px",
                                entity_encoding: "raw",
                                readonly: 0,
                            });
                            break;

                        default:
                            draggedItem.html(draggedItem.data('type'));
                    }

                    draggedFrom = "";
                }
            },
            start: function (e, ui) {
                draggedItem = ui.item;
            }
        });

        $(document).on("mouseenter", ".field", function (e) {
            $(this).children(".header").children(".header-actions").css("visibility", "visible");
        });

        $(document).on("mouseleave", ".field", function (e) {
            $(this).children(".header").children(".header-actions").css("visibility", "hidden");
        });

        $(document).on("mouseenter", ".fa-pencil", function (e) {
            //if ($(this).attr('class').includes("fa-lg")) {
            //    $(this).attr('class', 'fa fa-pencil fa-2x');
            //}

            $(this).parent().parent().parent().css("background", "#99ccff");
        });

        $(document).on("mouseleave", ".fa-pencil", function (e) {
            //if ($(this).attr('class').includes("fa-2x")) {
            //    $(this).attr('class', 'fa fa-pencil fa-lg');
            //}

            $(this).parent().parent().parent().css("background", "#e8dfdf");
        });

        $(document).on("mouseenter", ".fa-trash", function (e) {
            //if ($(this).attr('class').includes("fa-lg")) {
            //    $(this).attr('class', 'fa fa-trash fa-2x');
            //}

            $(this).parent().parent().parent().css("background", "pink");
        });

        $(document).on("mouseleave", ".fa-trash", function (e) {
            //if ($(this).attr('class').includes("fa-2x")) {
            //    $(this).attr('class', 'fa fa-trash fa-lg');
            //}
            $(this).parent().parent().parent().css("background", "#e8dfdf");
            $(this).parent().parent().parent().attr('class', 'field');
        });

        $(document).on("click", ".fa-trash", function (e) {
            $(this).parent().parent().parent().html('');
        });

        $("#dropzone").html(sectionHtml(sectionHtmlDiv(editFieldHtml(IDNAME, "Section Name"), IDNAME, "field-label sectionLabel", "Section Name")));

        $(document).on("keyup", ".labelName", function (e) {
            var id = $(this).attr('id').replace('label', 'headerName');
            document.getElementById(id).innerHTML = $(this).attr('value');
        });

        $(document).on("change", ".chkRequired", function (e) {
            var id = $(this).attr('id').replace('required', 'requiredSpan');
            if ($(this).prop("checked")) {
                document.getElementById(id).style.visibility = "visible";
            }
            else {
                document.getElementById(id).style.visibility = "hidden";
            }
        });

            $(function () {
        $('#delete_button').click(function (e) {
            e.stopImmediatePropagation();
            var dlg = new ConfirmationDialog();
            var opts = {
                dlgText: '@Html.Raw(Translation.GetForJS("Är du säker på att du vill ta bort aktuell FAQ"))',
                btnYesText: '@Translation.GetForJS("Ja")',
                btnNoText: '@Translation.GetForJS("Nej")',
                onClick: function (button) {
                    if (button === ConfirmationDialog.YES) {
                        @*$.post('@Url.Action("DeleteFaq")', { id: '@Model.Id' }, function () {
                            window.location.href = '@Url.Action("Index")';
                        });*@
                    } else {
                        dlg.hide();
                    }
                }
            }
            dlg.init(opts);
            dlg.show();
        });
    });

    });

    function clearItems() {
        //$("#dropzone").html('');
        $("#dropzone").html(sectionHtml(sectionHtmlDiv(editFieldHtml(IDNAME, "Section Name"), IDNAME, "field-label sectionLabel", "Section Name")));
    }

    function submitForm() {

        if (document.getElementById("formName").value == "" || document.getElementById("formName").value.match(/^ *$/) !== null) {
            document.getElementById("formName").value = "";
            document.getElementById("formName").focus();
            return;
        }

        var selectedCaseSolutions = [];
        $.each($("#drpCaseSolutions option:selected"), function () {
            selectedCaseSolutions.push($(this).val());
        });

        if (selectedCaseSolutions.length == 0) {
            $("#drpCaseSolutions").focus();
            ShowToastMessage('@Html.Raw(Translation.GetForJS("Vänligen välj minst en ärendemall"))', "error")
            return;
        }
            let sectionId, sectionName, id, type, label, valueBinding, required;
            let items = [
                {
                    sectionId,
                    sectionName,
                    controls: [
                        id,
                        type,
                        label,
                        required,
                        valueBinding
                    ]
                }
            ];
            var getNextUntil = function (elem, selector) {

                // Setup siblings array and get next sibling
                var siblings = [];
                var next = elem.nextElementSibling;

                // Loop through all siblings
                while (next) {

                    // If the matching item is found, quit
                    if (next.matches(selector)) break;

                    // Otherwise, push to array
                    siblings.push(next);

                    // Get the next sibling
                    next = next.nextElementSibling

                }

                return siblings;

            };

            $('.sectionLabel').each(function (i, obj) {
                items[i] = {};
                items[i].id = document.getElementById(obj.id + "Name").innerText;
                items[i].sectionName = document.getElementById(obj.id + "Name").innerText;
                items[i].controls = [];

                getNextUntil(obj.parentElement.parentElement.parentElement.parentElement, "[data-type='section']").forEach(function (obj, n) {
                    if (obj.querySelector('.field-label') != null) {
                        var id = obj.querySelector('.field-label').id;
                        var contentTinyMce = obj.querySelectorAll('.form-control-tinymce');
                        var label = document.getElementById(id.replace('header', 'headerName')) ? document.getElementById(id.replace('header', 'headerName')).innerText : "infoField";
                        var required = document.getElementById(id.replace('header', 'required')) ? document.getElementById(id.replace('header', 'required')).checked : false;
                        var content = contentTinyMce[0] ? 'function(m) { return ' + tinymce.get(contentTinyMce[0].id).getContent() + ' }' : ""

                        items[i].controls[n] = {
                            id: label,
                            type: obj.getAttribute('data-type'),
                            label: label,
                            required: required,
                            valueBinding: content
                        }
                    }
                });

            });

            let url = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + location.pathname
            url = url.substr(0, url.lastIndexOf("/")) + "/EditForm";

            var dataToSend = {
                customerId: getUrlVars()["customerId"],
                languageId: getUrlVars()["languageId"],
                name: document.getElementById("formName").value,
                description: document.getElementById("formDescription").value,
                status: $("#formActive").is(":checked") ? "true" : "false",
                caseSolutionIds: selectedCaseSolutions,
                sections: items
            };

            //console.log(dataToSend)

            $.ajax({
                url: url,
                type: "POST",
                data: JSON.stringify(dataToSend),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //console.log(data);
                    if (data.result == true) {
                        ShowToastMessage('@Html.Raw(Translation.GetForJS("Sparat"))')
                    }

                    else {
                        ShowToastMessage(data.error, "error")
                    }
                }
                //,
                //error: function (request) {

                //    ShowToastMessage(, "error");
                //}
            });

    }

    function getUrlVars() {
        var vars = [],
            hash
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&')
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=')
            vars.push(hash[0])
            vars[hash[0]] = hash[1]
        }
        return vars
    }

    function createUUID() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }

    function getTemplates() {
        let templates = {};

        let url = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '') + location.pathname
        url = url.substr(0, url.lastIndexOf("/")) + "/Templates" + "?customerId=" + getUrlVars()["customerId"];


        $.get(url, function (data) {

            for (var i = 0; i < data.length; i++) {
                templates.data[i];
            }
        });

        return templates;
    }

</script>

<script src="https://cdn.tiny.cloud/1/1sfk2dp6yt1qy3dpohzyv6wro6kpk8szzkijgcpnepc4mazx/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
@*Use this to apply changes in tinymce ?cachebuster=123*@
@*<script type="text/javascript" src="@Url.Content("~/Content/js/tinymce/tinymce.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/js/tinymce/tinymce.initiate.js")"></script>*@
<style>
    #fields {
        margin: 0;
        padding: 0;
        width: 15%;
        margin-right: 20px;
        float: left;
        border: 1px thin;
        border-radius: 5px;
    }

    input[type=text] {
        width: 97%
    }

    .header-actions {
        opacity: 0.5;
        visibility: hidden;
    }

        .header-actions a {
            margin-right: 15px
        }


    #source {
        list-style: none;
        margin: 0;
        padding: 0;
        border: 1px solid #dddddd;
        border-radius: 10px;
    }

    .field {
        background-color: #e8dfdf;
        border-radius: 10px;
    }

    .header-label {
        width: 80%;
        float: left
    }

    .header-actions {
        /*width: 20%;*/
        display: flex;
        justify-content: flex-end;
        margin: 5px;
        padding-top: 5px;
    }

    .field-label {
        font-family: inherit;
        font-size: large;
        margin: 5px;
        padding-top: 5px;
        padding-right: 10px
    }

    .form-control {
        margin: 10px;
    }

    .form-control-width {
        width: 97%;
    }

    #btnClear {
        margin-top: 15px;
        margin-left: 5px;
    }

    #source li {
        cursor: move;
        padding: 10px;
        border: 1px solid #dddddd;
        background: #f5f5f5;
    }

    .label {
        font-size: large;
    }

    .sectionLabel {
        padding: 5px;
        font-size: x-large;
        font-weight: 600;
    }

    #dropzone {
        min-height: 400px;
        height: auto;
        float: none;
        overflow: hidden;
        border: 1px dashed black;
    }

    li {
        list-style-type: none; /* Remove bullets */
        padding: 0; /* Remove padding */
        margin: 5px; /* Remove margins */
    }

    .fa {
        margin: 5px;
    }

    .required {
        color: red;
        visibility: hidden;
    }
</style>