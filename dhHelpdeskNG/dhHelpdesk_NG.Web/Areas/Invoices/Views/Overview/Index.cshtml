@using DH.Helpdesk.Domain.Invoice
@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions.HtmlHelperExtensions
@using DH.Helpdesk.Web.Infrastructure.UrlHelpers.Api.Invoices
@model DH.Helpdesk.Web.Areas.Invoices.Models.InvoiceOverviewFilterModel
@section Actions {
	@if (true)
	{
		<ul class="secnav">
			<li>
				<input type="button" value="@Translation.Get("Spara")" class="btn" id="btnInvoiceAction"/>
			</li>
			<li>
				@Html.ActionLink(Translation.Get("Export"), "InvoiceExport", new RouteValueDictionary {
													  {"DepartmentId", Model.DepartmentId},
													  {"DateFrom", Model.DateFrom},
													  {"DateTo.CompanyName", Model.DateTo},
													  {"Status", Model.Status},
												  }, new { @class = "btn", target = "_blank"})
			</li>
		</ul>
	}
}
<div>
	<table class="tableform" id="invoiceFilter">
		<tr>
			<td class="span3">@Translation.Get("Avdelning")</td>
			<td>@Html.DropDownListFor(m => m.DepartmentId, (List<SelectListItem>)ViewBag.Departments, Translation.Get("Selektera ut"), new { id = "ddlDepartment", @class = "inputw300" })</td>
		</tr>
		<tr>
			<td class="span3">
				@Translation.Get("Period")
			</td>
			<td>
				@Html.EditorFor(m => m.DateFrom, "DatePicker", new { id = "dateFrom" })
				@Html.EditorFor(m => m.DateTo, "DatePicker", new { id = "dateTo" })
			</td>
		</tr>
		<tr>
			<td class="span3">@Translation.Get("Visa")</td>
			<td>
				@Html.DropDownListFor(m => m.Status, (List<SelectListItem>)ViewBag.Statuses, Translation.Get("Selektera ut"), new { id = "ddlStatus", @class = "inputw300" })
				<input type="button" value="@Translation.Get("Sök")" class="btn" id="btnSearch" />
			</td>
		</tr>
	</table>
</div>
<div>
	<div>@Translation.GetCoreTextTranslation("poster i sökresultat"): <span id="totalRows"></span></div>
	<table id="invoiceGrid" class="table table-striped table-bordered table-hover table-cases">
		<thead>
			<tr>
				<th></th>
				<th>@Translation.GetCoreTextTranslation("Ärende")</th>
				<th>@Translation.GetCoreTextTranslation("Text")</th>
				<th>@Translation.GetCoreTextTranslation("Cat")</th>
				<th>@Translation.GetCoreTextTranslation("Avslutsdatum")</th>
				<th>@Translation.GetCoreTextTranslation("Dept")</th>
				<th>@Translation.GetCoreTextTranslation("Arbete") @Translation.GetCoreTextTranslation("timmar")</th>
				<th>@Translation.GetCoreTextTranslation("Övertid") @Translation.GetCoreTextTranslation("timmar")</th>
				<th>@Translation.GetCoreTextTranslation("Arbete") @Translation.GetCoreTextTranslation("belopp")</th>
				<th>@Translation.GetCoreTextTranslation("Material")</th>
				<th>@Translation.GetCoreTextTranslation("Pris")</th>
				<th>@Translation.GetCoreTextTranslation("Fakturor")</th>
				<th>@Translation.GetCoreTextTranslation("Debitering")</th>
				@*<th>@Translation.GetCoreTextTranslation("Status")</th>*@
				<th>@Translation.GetCoreTextTranslation("Debiterade")</th>
				<th>@Translation.GetCoreTextTranslation("Ej Debiterade")</th>
			</tr>
		</thead>
		<tbody></tbody>
	</table>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/invoicesoverview")

	<script type="text/javascript">
		$(function () {
			var pageObj = new InvoicesOverview({
				perPageText: '@Translation.GetForJS("Antal per sida")',
				perShowingText: '@Translation.GetForJS("Visar sida")',
				hourText: '@Translation.GetForJS("tim")',
				minText: '@Translation.GetForJS("min")',
				saveText: '@Translation.GetForJS("Spara")',
				cancelText: '@Translation.GetForJS("Avbryt")',
				copyText: '@Translation.GetForJS("Kopiera")',
				statusList: @Html.SerializeObject(new Dictionary<int, string>
							{
								{ (int)InvoiceStatus.Invoiced, Translation.GetCoreTextTranslation("Debiterade") },
								{ (int)InvoiceStatus.NotInvoiced, Translation.GetCoreTextTranslation("Ej Debiterade") }
							}),
				getListUrl: "@Url.ApiAction(WebApiInvoicesUrlName.Invoices.GetInvoicesOverviewList, WebApiInvoicesUrlName.Invoices.Controller)",
				saveValuesUrl: "@Url.ApiAction(WebApiInvoicesUrlName.Invoices.SaveInvoiceValues, WebApiInvoicesUrlName.Invoices.Controller)",
				actionUrl: "@Url.ApiAction(WebApiInvoicesUrlName.Invoices.InvoiceAction, WebApiInvoicesUrlName.Invoices.Controller)",
			});
			window.pageObj = pageObj;
		});

	</script>
}






