@model DH.Helpdesk.BusinessData.Models.CaseDocument.CaseDocumentModel
@using DH.Helpdesk.Common.Extensions.String
@using DH.Helpdesk.BusinessData.Models.CaseDocument
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    @(Model.CaseDocumentTemplate != null ? Model.CaseDocumentTemplate.Style.ToHtmlString() : new HtmlString(""))
</head>
<body>
    <div class="default-page">
        @if (Model.CaseDocumentParagraphs != null)
        {
            foreach (var item in Model.CaseDocumentParagraphs.OrderBy(x => x.SortOrder))
            {
                if (item.CaseDocumentParagraph.CaseDocumentTexts != null)
                {
                    //TODO: OrderBy
                    //Check ParagraphType
                    if (item.CaseDocumentParagraph.ParagraphType == (int)CaseDocumentParagraphType.Text)
                    {
                        <p style="text-align: justify;">
                            @foreach (var paragraphText in item.CaseDocumentParagraph.CaseDocumentTexts.OrderBy(x => x.SortOrder))
                            {
                                if (!string.IsNullOrEmpty(paragraphText.Text))
                                {
                                    @paragraphText.Text.ToHtmlString()
                                }
                            }
                        </p>
                    }
                    if (item.CaseDocumentParagraph.ParagraphType == (int)CaseDocumentParagraphType.TableNumeric)
                    {
                        int nr = 1;

                        <table class="table-full-width table-numeric">
                            @foreach (var paragraphText in item.CaseDocumentParagraph.CaseDocumentTexts.OrderBy(x => x.SortOrder))
                            {
                                //Dont list empty
                                if (!string.IsNullOrEmpty(paragraphText.Text))
                                {
                                    <tr style="page-break-inside: avoid">
                                        <td style="padding-right:10px;margin-right:10px; text-align:unset;"><strong>@nr.</strong></td>
                                        <td style="padding-right:10px;margin-right:10px; text-align:unset; width: 130px; "><strong>@paragraphText.Headline.ToHtmlString()</strong></td>
                                        <td style="text-align: justify;">@paragraphText.Text.ToHtmlString()</td>
                                    </tr>
                                    nr = nr + 1;
                                }
                            }
                        </table>

                    }
                    if (item.CaseDocumentParagraph.ParagraphType == (int)CaseDocumentParagraphType.Logo)
                    {
                        <img src="~/img-profile/IKEA_logo_RGB_2.jpg" style="width:200px;" />
                    }

                    if (item.CaseDocumentParagraph.ParagraphType == (int)CaseDocumentParagraphType.TableTwoColumns)
                    {
                        <table class="table-full-width table-two-colums">
                            @foreach (var paragraphText in item.CaseDocumentParagraph.CaseDocumentTexts.OrderBy(x => x.SortOrder))
                            {
                                //Dont list empty
                                if (!string.IsNullOrEmpty(paragraphText.Text))
                                {
                                    <tr style="page-break-inside: avoid">
                                        <td style="padding-right:10px;margin-right:10px;">APA@paragraphText.Headline.ToHtmlString()</td>
                                        <td>@paragraphText.Text.ToHtmlString()</td>
                                    </tr>
                                }
                            }
                        </table>
                    }
                }
            }
        }
    </div>
</body>
</html>