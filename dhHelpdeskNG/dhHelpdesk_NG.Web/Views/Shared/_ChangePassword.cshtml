@model DH.Helpdesk.Web.Models.Shared.ChangePasswordModel
<div id="divPasswordDialog" class="modal hide fade" role="dialog">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>@Translation.GetCoreTextTranslation("Byt lösenord")</h3>
    </div>
    <div class="modal-body">
        <div class="container">            
            <form id="changePasswordForm">
                <table class="tableform">
                    <tr>
                        <td class="span3">@Translation.GetCoreTextTranslation("Nytt lösenord")</td>
                        <td><input type="password" id="NewPassword" name="NewPassword" maxlength="20"/></td>
                    </tr>
                    <tr>
                        <td>@Translation.GetCoreTextTranslation("Bekräfta lösenord")</td>
                        <td><input type="password" id="ConfirmPassword" name="ConfirmPassword" maxlength="20"/></td>
                    </tr>
                    <tr>
                        <td colspan="2" id="validation-summary" class="validation-summary-errors"></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <button id="btnSavePassword" class="btn">@Translation.GetCoreTextTranslation("Spara")</button>
                            <button id="btnClose" class="btn" data-dismiss="modal">@Translation.GetCoreTextTranslation("Avbryt")</button>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/changepassword")

<script type="text/javascript">
    //Ready
    $(function () {
        var settings = {
            UserId: @Model.UserId,
            CheckPasswordUniqueActionUrl: '@Url.Action("CheckPasswordUnique", "Password")',
            PasswordChangeActionUrl: '@Url.Action("ChangePassword", "Password")',
            UseComplexPassword: @Json.Encode(Model.UseComplexPassword),
            PasswordMinLength: @Model.MinPasswordLength,     
            ComplexPasswordRules: {
                MinLength: 8,
                MinUpperCase: 1,
                MinLowerCase: 1,
                MinDigits: 1,
                MinSpecial: 1,
                SpecialChars: '!@@#=$&?*'
            },
            Translations: {
                PasswordChangedConfirmMessage: '@Translation.GetForJS("Lösenordet har ändrats")',
                PasswordChangeErrorMessage: '@Translation.GetForJS("Det nya lösenordet bekräftades inte korrekt. Kontrollera att nytt lösenord och bekräftat lösenord stämmer överens")',
                PasswordRequiredValMessage: '@Translation.GetForJS("Fält") \'@Translation.GetCoreTextTranslation("Nytt lösenord")\' @Translation.GetForJS("måste anges")',
                ConfirmPasswordRequiredValMessage: '@Translation.GetForJS("Fält") \'@Translation.GetCoreTextTranslation("Bekräfta lösenord")\' @Translation.GetForJS("måste anges")',
                PasswordMinLengthValMessage: '@Translation.GetForJS("Lösenord är inte giltigt. Minst antal tecken är: ")' + '{0}',
                StrongPasswordValMessage: '@Translation.GetForJS("Lösenord är inte giltigt. Minst 8 tecken, varav en stor bokstav, en liten bokstav, en siffra och ett special tecken (!@#=$&?*).")',
                ConfirmPasswordMatchValMessage: '@Translation.GetForJS("Det nya lösenordet bekräftades inte korrekt. Kontrollera att nytt lösenord och bekräftat lösenord stämmer överens")',
                PasswordEqualsExistingValMessage: '@Translation.GetForJS("Nytt lösenord kan inte vara samma som nuvarande lösenord")'
            }
        };
        window.ChangePasswordDialog.Init(settings);
    });
</script>
