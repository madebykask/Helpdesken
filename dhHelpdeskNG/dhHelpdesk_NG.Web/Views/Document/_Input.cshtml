@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Models.DocumentInputViewModel

<div class="content">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-error">@Translation.Get("Dokument", Enums.TranslationSource.TextTranslation)
            @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
        </div>    
    }
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Dokument", Enums.TranslationSource.TextTranslation)</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.Document.DocumentCategory_Id, Model.DocumentCats, "")
                                        
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Namn", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => model.Document.Name, new { maxlength = "100" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Beskrivning", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(model => model.Document.Description, new { style = "height:50px;", maxlength = "2000" })
                                    </td>
                                </tr>
                                 <tr>
                                    <td>
                                        @Translation.Get("Visa", Enums.TranslationSource.TextTranslation)                                        
                                    </td>
                                     <td class="checkbox" style="padding-left: 20px">
                                         @Html.CheckBoxFor(m => m.Document.ShowOnStartPage)                                        
                                         &nbsp;@Translation.Get("Visa på startsidan", Enums.TranslationSource.TextTranslation)                                        
                                     </td>
                                </tr>
                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                @if (string.IsNullOrWhiteSpace(Model.Document.FileName) || Model.Document.FileName == null)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Filnamn", Enums.TranslationSource.TextTranslation):
                                        </td>
                                        <td>
                                            <input type="file" id="fileUploadedName" name="fileUploadedName" />                                                                                        
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Sedan tidigare bifogad fil", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>                                            
                                            <input type="text" name="FileName" value="@Model.Document.FileName"/>
                                            <input type="hidden" name="FileName" id="FileName" value="@Model.Document.FileName" />
                                            <input type="hidden" name="Id" id="Id" value="@Model.Document.Id" />
                                            <input type="button" value="@Translation.Get("Ta bort", Enums.TranslationSource.TextTranslation)" name="remove" id="remove" class="btn" onclick="deleteFile(@Model.Document.Id)" />
                                        </td>
                                    </tr> 
                                }
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Säkerhet", Enums.TranslationSource.TextTranslation)</h4>
                    @Translation.Get("Lås dokumentet till", Enums.TranslationSource.TextTranslation)
                    <div class="row">
                        <div class="span12">
                            <table class="tableform" id="security">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Translation.Get("Tillgängliga", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td></td>
                                    <td>
                                        @Translation.Get("Valda", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        @Html.ListBox("WGsAvailable", Model.WGsAvailable, new { style = "width: 320px; height: 100px" })
                                    </td>
                                    <td>
                                        <input type="button" class="btn" value="&gt;" id="addWGs" />
                                        <input type="button" class="btn" value="&lt;" id="removeWGs" />
                                    </td>
                                    <td>
                                        @Html.ListBox("WGsSelected", Model.WGsSelected, new { style = "width: 320px; height: 100px" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Användare", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Translation.Get("Tillgängliga", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td></td>
                                    <td>
                                        @Translation.Get("Valda", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        @Html.ListBox("UsAvailable", Model.UsAvailable, new { style = "width: 320px; height: 100px" })
                                    </td>
                                    <td>
                                        <input type="button" class="btn" value="&gt;" id="addUs" />
                                        <input type="button" class="btn" value="&lt;" id="removeUs" />
                                    </td>
                                    <td>
                                        @Html.ListBox("UsSelected", Model.UsSelected, new { style = "width: 320px; height: 100px" })
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.Document.Customer_Id)
                            @Html.HiddenFor(model => model.Document.Id)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

   
        var validator = $("#target").validate({
            rules: {
                "Document.Name": {
                    required: true
                },
                "Document.Description": {
                    required: true
                },
                "Document.FileName": {
                    required: true
                }
            },
            messages: {
                "Document.Name": {
                    required: '@Translation.Get("Du måste välja ett dokumentnamn", Enums.TranslationSource.TextTranslation)'
                },
                "Document.Description": {
                    required: '@Translation.Get("Du måste fylla i beskrivning-fältet", Enums.TranslationSource.TextTranslation)'
                },
                "Document.FileName": {
                    required: '@Translation.Get("Du måste bifoga en fil", Enums.TranslationSource.TextTranslation)'
                }
            }
            //            ,
            //            submitHandler: function (form) {
            //                form.submit();
            //            }
        });    

    function submitForm() {
        $("#UsSelected option").attr("selected", "selected");
        $("#WGsSelected option").attr("selected", "selected");
        $("#target").submit();
    }

    $("#addUs").click(function () {
        $("#UsAvailable option:selected").remove().appendTo("#UsSelected");
        $("#UsAvailable").get(0).selectedIndex = -1;
        $("#UsSelected").get(0).selectedIndex = -1;
        return false;
    });

    $("#removeUs").click(function () {
        $("#UsSelected option:selected").remove().appendTo("#UsAvailable");
        $("#UsAvailable").get(0).selectedIndex = -1;
        $("#UsAvailable").get(0).selectedIndex = -1;
        return false;
    });

    $("#addWGs").click(function () {
        $("#WGsAvailable option:selected").remove().appendTo("#WGsSelected");
        $("#WGsAvailable").get(0).selectedIndex = -1;
        $("#WGsSelected").get(0).selectedIndex = -1;
        return false;
    });

    $("#removeWGs").click(function () {
        $("#WGsSelected option:selected").remove().appendTo("#WGsAvailable");
        $("#WGsAvailable").get(0).selectedIndex = -1;
        $("#WGsAvailable").get(0).selectedIndex = -1;
        return false;
    });

    function deleteFile(id) {
        if (confirm('@Translation.Get("Vill du verkligen ta bort bifogad fil?", Enums.TranslationSource.TextTranslation)')) {
            $.post('/Document/DeleteUploadedFile/' + id, function (result) {
                window.location.reload()
            });
        }
    }      

</script>
