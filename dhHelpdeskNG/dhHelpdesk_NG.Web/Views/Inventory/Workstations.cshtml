@model DH.Helpdesk.Web.Models.Inventory.SearchModels.WorkstationSearchViewModel
<table class="tableform">
    @using (Ajax.BeginForm("WorkstationsGrid", "Inventory", null, new AjaxOptions { UpdateTargetId = "grid_container" }))
    {
        if (Model.Settings.DepartmnetFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get("Område")</td>
                <td>@Html.DropDownListFor(m => m.Filter.RegionId, Model.Regions)</td>
            </tr>
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.DepartmnetFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.DropDownListFor(m => m.Filter.DepartmentId, Model.Departments)</td>
            </tr>
        }
        if (Model.Settings.ComputerTypeFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ComputerTypeFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.DropDownListFor(m => m.Filter.ComputerTypeId, Model.ComputerTypes)</td>
            </tr>
        }
        if (Model.Settings.ContractStatusFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ContractStatusFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.DropDownListFor(m => m.Filter.ContractStatusId, Model.ContractStatuses)</td>
            </tr>
        }
        if (Model.Settings.ContractStartDateFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ContractStartDateFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.EditorFor(m => m.Filter.ContractStartDate.DateFrom, "DatePicker", new { id = "contractStartDateFrom_datepicker" })</td>
                <td class="span3">-</td>
                <td>@Html.EditorFor(m => m.Filter.ContractStartDate.DateTo, "DatePicker", new { id = "contractStartDateTo_datepicker" })</td>
            </tr>
        }
        if (Model.Settings.ContractEndDateFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ContractEndDateFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.EditorFor(m => m.Filter.ContractEndDate.DateFrom, "DatePicker", new { id = "contractEndDateFrom_datepicker" })</td>
                <td class="span3">-</td>
                <td>@Html.EditorFor(m => m.Filter.ContractEndDate.DateTo, "DatePicker", new { id = "contractEndDateTo_datepicker" })</td>
            </tr>
        }
        if (Model.Settings.ScanDateFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ScanDateFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.EditorFor(m => m.Filter.ScanDate.DateFrom, "DatePicker", new { id = "scanDateFrom_datepicker" })</td>
                <td class="span3">-</td>
                <td>@Html.EditorFor(m => m.Filter.ScanDate.DateTo, "DatePicker", new { id = "scanDateTo_datepicker" })</td>
            </tr>
        }
        if (Model.Settings.ScrapDateFieldSetting.IsShow)
        {
            <tr>
                <td class="span3">@Translation.Get(Model.Settings.ScrapDateFieldSetting.Caption, Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.EditorFor(m => m.Filter.ScrapDate.DateFrom, "DatePicker", new { id = "scrapDateFrom_datepicker" })</td>
                <td class="span3">-</td>
                <td>@Html.EditorFor(m => m.Filter.ScrapDate.DateTo, "DatePicker", new { id = "scrapDateTo_datepicker" })</td>
            </tr>
        }
        <tr>
            <td class="span3">
                @Html.LabelFor(m => m.Filter.IsShowScrapped)
            </td>
            <td>
                @Html.CheckBoxFor(m => m.Filter.IsShowScrapped)
            </td>
        </tr>
        <tr>
            <td class="span3">
                @Html.LabelFor(m => m.Filter.SearchFor)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Filter.SearchFor)
            </td>
        </tr>
        <tr>
            <td class="span3">
                @Html.LabelFor(m => m.Filter.RecordsOnPage)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Filter.RecordsOnPage)
            </td>
        </tr>
        <tr>
            <td class="span3">&nbsp;
            </td>
            <td>
                <input type="submit" value="@Translation.Get("Sök", Enums.TranslationSource.TextTranslation)" class="btn" />
            </td>
        </tr>
    }
</table>
<div id="grid_container">
    @Html.Action("WorkstationsGrid", "Inventory", new { area = string.Empty, filter = Model.Filter })
</div>
