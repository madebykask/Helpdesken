@using DH.Helpdesk.Web.Enums.Inventory
@using DH.Helpdesk.Web.Models.Inventory
@using DH.Helpdesk.Web.Models.Inventory.EditModel
@using DH.Helpdesk.Web.Models.Inventory.EditModel.Computer
@model ComputerEditViewModel
@{
    const string Hotfix = "Hotfix";

    var computerTabClass = Model.ActiveTab == TabName.Computer ? "active" : null;
    var computerLogTabClass = Model.ActiveTab == TabName.ComputerLog ? "active" : null;
    var inventoryTabClass = Model.ActiveTab == TabName.Inventory ? "active" : null;
}
<div class="secnavs fixed">
    <div class="pull-left">
        <ul class="secnav">
            <li id="menu1">
                <input type="submit" value="@Translation.Get("Spara")" class="btn" onclick=" $('#workstation_edit_form').submit(); "/>
            </li>
            <li id="menu2">@Html.ActionLink(Translation.Get("Avbryt"), "Index", null, new { @class = "btn" })</li>
            <li id="menu3">@Html.ActionLink(Translation.Get("Ta bort"), "DeleteWorkstation", new { id = Model.ComputerViewModel.Id }, new { @class = "btn" })</li>
        </ul>
    </div>
</div>

<div class="content">
    <div class="container">
        <ul class="nav nav-tabs">
            <li id="computer_tab" class="@computerTabClass">
                <a href="#fragment-1">@Translation.Get("Arbetsstation")</a>
            </li>
            <li>
                <a href="#fragment-2">@Translation.Get("Lagring")</a>
            </li>
            <li>
                <a href="#fragment-3">@Translation.Get("Program")</a>
            </li>
            <li>
                <a href="#fragment-4">@Translation.Get("Hotfix")</a>
            </li>
            <li id="log_tab" class="@computerLogTabClass">
                <a href="#fragment-5">@Translation.Get("Logg")</a>
            </li>
            <li id="inventory_tab" class="@inventoryTabClass">
                <a href="#fragment-6">@Translation.Get("Tillbehör")</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border @computerTabClass" id="fragment-1">
                @using (Html.BeginForm("EditWorkstation", "Inventory", FormMethod.Post, new { id = "workstation_edit_form" }))
                {
                    @Html.EditorFor(m => m.ComputerViewModel.WorkstationFieldsViewModel, "Computer/WorkstationFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.ChassisFieldsModel, "Shared/ChassisModel")
                    @Html.EditorFor(m => m.ComputerViewModel.InventoryFieldsModel, "Shared/InventoryModel")
                    @Html.EditorFor(m => m.ComputerViewModel.OperatingSystemFieldsViewModel, "Shared/OperatingSystemFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.ProccesorFieldsViewModel, "Shared/ProccesorFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.MemoryFieldsViewModel, "Shared/MemoryFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.GraphicsFieldsModel, "Computer/GraphicsFieldsModel")
                    @Html.EditorFor(m => m.ComputerViewModel.SoundFieldsModel, "Computer/SoundFieldsModel")
                    @Html.EditorFor(m => m.ComputerViewModel.ContractFieldsViewModel, "Computer/ContractFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.OtherFieldsModel, "Computer/OtherFieldsModel")
                    @Html.EditorFor(m => m.ComputerViewModel.ContactInformationFieldsModel, "Computer/ContactInformationFieldsModel")
                    @Html.EditorFor(m => m.ComputerViewModel.OrganizationFieldsViewModel, "Computer/OrganizationFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.PlaceFieldsViewModel, "Computer/PlaceFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.ContactFieldsModel, "Computer/ContactFieldsModel")
                    @Html.EditorFor(m => m.ComputerViewModel.StateFieldsViewModel, "Computer/StateFieldsViewModel")
                    @Html.EditorFor(m => m.ComputerViewModel.DateFieldsModel, "Computer/DateFieldsModel")
                    <table class="tableform">
                        @if (Model.ComputerViewModel.CreatedDate.Show || Model.ComputerViewModel.ChangedDate.Show)
                        {
                            <tr>
                                <th colspan="2" class="header">@Translation.Get("Status")</th>
                            </tr>
                        }
                        @if (Model.ComputerViewModel.CreatedDate.Show)
                        {
                            <tr>
                                <td class="span3">
                                    <label>@Translation.Get(Model.ComputerViewModel.CreatedDate.Caption)</label>
                                </td>
                                <td class="span9">
                                    @Html.DisplayFor(m => m.ComputerViewModel.CreatedDate.Value, "Date")
                                </td>
                            </tr>
                        }
                        @if (Model.ComputerViewModel.ChangedDate.Show)
                        {
                            <tr>
                                <td class="span3">
                                    <label>@Translation.Get(Model.ComputerViewModel.ChangedDate.Caption)</label>
                                </td>
                                <td class="span9">
                                    @Html.DisplayFor(m => m.ComputerViewModel.ChangedDate.Value, "Date")
                                </td>
                            </tr>
                        }
                    </table>
                }
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-2">
                @Html.Partial("StorageGrid", Model.LogicalDrives)
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-3">
                @Html.Partial("SoftwareGrid", Model.Softwaries.Where(x => !x.Name.Contains(Hotfix)).OrderBy(x => x.Name).ToList())
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-4">
                <table id="tblCases" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>@Translation.Get("Program")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var models = Model.Softwaries.Where(x => x.Name.Contains(Hotfix)).Select(x => x.Name).OrderBy(x => x);

                            foreach (var model in models)
                            {
                            <tr>
                                <th>@Html.DisplayFor(x => model);
                                </th>
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="tab-pane tab-pane-border @computerLogTabClass" id="fragment-5">
                @using (Html.BeginForm("NewComputerLog", "Inventory", FormMethod.Post, new { id = "log_edit_form" }))
                {
                    @Html.Partial("EditorTemplates/ComputerLogModel", new ComputerLogModel { ComputerId = Model.ComputerViewModel.Id })
                    <input type="submit" value="@Translation.Get("Nytt logg")" class="btn"/>
                }
                @Html.Partial("LogGrid", Model.ComputerLogs)
            </div>
            <div class="tab-pane tab-pane-border @inventoryTabClass" id="fragment-6">
                <table>
                    @{
                        foreach (var model in Model.InventoryGridModels)
                        {
                            @Translation.Get(model.CurrentModeName)
                            @Html.Partial("InventoryGridWithDeleteButton", new InventoryGridModelForDynamicInventory(model, Model.ComputerViewModel.Id))
                        }
                    }
                </table>
                @Translation.Get("Lägg till")
                <div>
                    @Html.DropDownListFor(x => x.DropDownViewModel.Selected, Model.DropDownViewModel.Values, new { id = "inventoryType_drop_down" })
                </div>
                @using (Html.BeginForm("ConnectInventoryToComputer", "Inventory", new { computerId = Model.ComputerViewModel.Id }, FormMethod.Post, new { id = "log_edit_form" }))
                {
                    <div id="inventory_drop_down">
                        @Html.Action("SearchNotConnectedInventory", "Inventory", new { area = string.Empty, selected = Model.DropDownViewModel.Selected, computerId = Model.ComputerViewModel.Id })
                    </div>
                    <input type="submit" value="@Translation.Get("Lägg till")" class="btn" id="inventory_button" />
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $('#inventoryType_drop_down').change(function () {
        var selectedValue = $(this).val();
        $.get('@Url.Action("SearchNotConnectedInventory")', { selected: selectedValue, computerId: @Model.ComputerViewModel.Id }, function(dropDownMarkup) {
            $('#inventory_drop_down').html(dropDownMarkup);

            if ($('#inventory_drop_down select').val() == null) {
                $('#inventory_button').hide();
            } else {
                $('#inventory_button').show();
            }
        });
    });

    $('#computer_tab').click(function() {
        $.post('@Url.Action("RememberTab", "Service")', { topic: '@PageName.ComputerEdit', tab: '@TabName.Computer' });
    });

    $('#log_tab').click(function() {
        $.post('@Url.Action("RememberTab", "Service")', { topic: '@PageName.ComputerEdit', tab: '@TabName.ComputerLog' });
    });

    $('#inventory_tab').click(function() {
        $.post('@Url.Action("RememberTab", "Service")', { topic: '@PageName.ComputerEdit', tab: '@TabName.Inventory' });
    });

</script>
