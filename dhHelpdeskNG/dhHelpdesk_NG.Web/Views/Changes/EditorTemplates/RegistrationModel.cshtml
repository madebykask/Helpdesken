@using dhHelpdesk_NG.DTO.Enums.Changes
@model dhHelpdesk_NG.Web.Models.Changes.Edit.RegistrationModel
           
<div class="container">
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#contact_1_tab">@Translation.Get("Contact 1", Enums.TranslationSource.TextTranslation)</a>
        </li>
        <li>
            <a href="#contact_2_tab">@Translation.Get("Contact 2", Enums.TranslationSource.TextTranslation)</a>
        </li>
        <li>
            <a href="#contact_3_tab">@Translation.Get("Contact 3", Enums.TranslationSource.TextTranslation)</a>
        </li>
        <li>
            <a href="#contact_4_tab">@Translation.Get("Contact 4", Enums.TranslationSource.TextTranslation)</a>
        </li>
        <li>
            <a href="#contact_5_tab">@Translation.Get("Contact 5", Enums.TranslationSource.TextTranslation)</a>
        </li>
        <li>
            <a href="#contact_6_tab">@Translation.Get("Contact 6", Enums.TranslationSource.TextTranslation)</a>
        </li>
    </ul>
    <div class="tab-content">
    </div>
</div>           

<table class="tableform">
    <tr>
        <td class="span3">
            @Html.LabelFor(m => m.Owner)
        </td>
        <td class="span9">
            @Html.DropDownListFor(m => m.OwnerId, Model.Owner)
        </td>
    </tr>
    @if (Model.ProcessesAffected.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.ProcessesAffected)
            </td>
            <td>
                @Html.DropDownListFor(m => m.ProcessAffectedIds, Model.ProcessesAffected.Value, new { @class = "multiselect multiselect-search", multiple = "multiple" })
            </td>
        </tr>
    }
    @if (Model.DepartmentsAffected.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.DepartmentsAffected)
            </td>
            <td>
                @Html.DropDownListFor(m => m.DepartmentAffectedIds, Model.DepartmentsAffected.Value, new { @class = "multiselect multiselect-search", multiple = "multiple" })
            </td>
        </tr>
    }
    @if (Model.Description.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.Description)
            </td>
            <td>
                @Html.TextAreaFor(m => m.Description.Value)
            </td>
        </tr>
    }
    @if (Model.BusinessBenefits.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.BusinessBenefits)
            </td>
            <td>
                @Html.TextAreaFor(m => m.BusinessBenefits.Value)
            </td>
        </tr>
    }
    @if (Model.Consequence.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.Consequence)
            </td>
            <td>
                @Html.TextAreaFor(m => m.Consequence.Value)
            </td>
        </tr>
    }
    @if (Model.Impact.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.Impact)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Impact.Value)
            </td>
        </tr>
    }
    @if (Model.DesiredDate.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.DesiredDate)
            </td>
            <td>
                <div class="input-append date dateie" data-date="">
                    @Html.TextBoxFor(m => m.DesiredDate.Value, new { id = "registration_desired_date_datepicker" })
                    <span class="add-on">
                        <i class="icon-calendar"></i>
                    </span>
                </div>
            </td>
        </tr>
    }
    @if (Model.Verified.Show)
    {
        <tr>
            <td>
                @Html.LabelFor(m => m.Verified)
            </td>
            <td>
                @Html.CheckBoxFor(m => m.Verified.Value)
            </td>
        </tr>
    }
    <tr>
        <td>
            @Html.LabelFor(m => m.AttachedFilesContainer)
        </td>
        <td>
            @Html.Partial("AttachedFilesContainer", Model.AttachedFilesContainer)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(m => m.Approved)
        </td>
        <td>
            @Html.DropDownListFor(m => m.ApprovedValue, Model.Approved, new { id = "registration_approve_dropdown" })
        </td>
    </tr>
    @if (Model.Approved.SelectedValue != null && (RegistrationApproveResult)Model.Approved.SelectedValue == RegistrationApproveResult.Rejected)
    {
        <tr id="registration_reject_explanation_textarea">
            <td>
                @Html.LabelFor(m => m.ApprovableExplanation)
            </td>
            <td>
                @Html.TextAreaFor(m => m.ApprovableExplanation)            
            </td>
        </tr>
    }
    else
    {
        <tr id="registration_reject_explanation_textarea" style="display: none;">
            <td>
                @Html.LabelFor(m => m.ApprovableExplanation)
            </td>
            <td>
                @Html.TextAreaFor(m => m.ApprovableExplanation)            
            </td>
        </tr>
    }
</table>