
@using System.Web.Optimization
@model DH.Helpdesk.Web.Models.Changes.InventoryDialog.InventoryDialogModel
        
@Scripts.Render("~/bundles/changes/inventory")

<script type="text/javascript">
    $(function() {
        var parameters = {};
        parameters.okButtonText = '@Translation.Get("OK")';
        parameters.cancelButtonText = '@Translation.Get("Cancel")';

        applyInventoryDialogBehavior(parameters);

        $('#general_inventory_dialog').show();
    });
</script>

<div id="general_inventory_dialog" title="@Translation.Get("Inventory")" style="display: none;">
    @for (var i = 0; i < Model.InventoryTypes.Count; i++)
    {
        @Model.InventoryTypes[i].Name

        <select class="inventory-selection-dropdown multiselect multiselect-search" multiple="multiple">
            @foreach (var inventory in Model.InventoryTypes[i].Inventories)
            {
                <option value="@inventory.Value">@inventory.Text</option>
            }
        </select>
    }

    <input type="button" id="flush_selected_inventories_button" class="btn" value="-->" />
    <select id="chosen_inventories_listbox" multiple="multiple"></select>
    <input type="button" id="delete_chosen_inventory_button" class="btn" value="@Translation.Get("Delete")" />
    @Html.DropDownListFor(m => m.SelectedInventories, Model.SelectedInventories.Select(i => new SelectListItem { Value = i }).ToList(), new { id = "chosen_inventories_cache", multiple = "multiple", style = "display: none;" })
</div>