
@using DH.Helpdesk.BusinessData.Enums.Changes
@model DH.Helpdesk.Web.Models.Changes.ChangeEdit.AnalyzeModel
     
<table class="tableform">
    @if (Model.Categories.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.Categories.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.DropDownListFor(m => m.CategoryId, Model.Categories.Value)        
            </td>
        </tr>
    }
    <tr>
        <td class="span3">
            @Html.LabelFor(m => m.RelatedChanges)
        </td>
        <td class="span9">
            @Html.DropDownListFor(m => m.RelatedChangeIds, Model.RelatedChanges, new { @class = "multiselect multiselect-search", multiple = "multiple" })
        </td>
    </tr>
    @if (Model.Priorities.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.Priorities.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.DropDownListFor(m => m.PriorityId, Model.Priorities.Value)
            </td>
        </tr>
    }
    @if (Model.Responsibles.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.Responsibles.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.DropDownListFor(m => m.ResponsibleId, Model.Responsibles.Value)
            </td>
        </tr>
    }
    @Html.EditorFor(m => m.Solution, "Fields/WideText")
    @Html.EditorFor(m => m.Cost, "Fields/Number")
    @Html.EditorFor(m => m.YearlyCost, "Fields/Number")
    @if (Model.Currencies.Show)
    {
        <tr>
            <td class="span3">
                @Html.LabelFor(m => m.Currencies)
            </td>
            <td class="span9">
                @Html.DropDownListFor(m => m.CurrencyId, Model.Currencies.Value)
            </td>
        </tr>
    }
    @Html.EditorFor(m => m.EstimatedTimeInHours, "Fields/Number")
    @Html.EditorFor(m => m.Risk, "Fields/Text")
    @if (Model.StartDate.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.StartDate.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.EditorFor(m => m.StartDate, "Fields/Date", new { id = "analyze_start_date_datepicker" })
                @Html.EditorFor(m => m.StartTime, "Fields/Time", new { id = "analyze_start_time_timepicker" })
            </td>
        </tr>
    }
    @if (Model.FinishDate.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.FinishDate.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.EditorFor(m => m.FinishDate, "Fields/Date", new { id = "analyze_finish_date_datepicker" })
                @Html.EditorFor(m => m.FinishTime, "Fields/Time", new { id = "analyze_finish_time_timepicker" })
            </td>
        </tr>
    }
    @Html.EditorFor(m => m.HasImplementationPlan, "Fields/Flag")
    @Html.EditorFor(m => m.HasRecoveryPlan, "Fields/Flag")
    @if (Model.AttachedFiles.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.AttachedFiles.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>    
            <td c8lass="span9">
                <a href="#analyze_files_uploader_popup" role="button" class="btn" data-toggle="modal">@Translation.Get("Upload")</a>
                <div id="analyze_files_uploader_popup" role="dialog" class="modal hide fade" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h3>&nbsp;</h3>
                    </div>
                    <div class="modal-body">
                        <div id="analyze_files_uploader"></div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn" data-dismiss="modal" aria-hidden="true">@Translation.Get("Close")</button>
                    </div>
                </div>
            </td>    
        </tr>
        <tr>
            <td></td>
            <td>
                @Html.Partial("AttachedFiles", Model.AttachedFiles.Value)
            </td>
        </tr>
    }
    @if (Model.Logs.Show)
    {
        <tr>
            <td class="span3">
                <label>@Translation.Get(Model.Logs.Caption, Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                <div id="analyze_logs_container">
                    @Html.Partial("Logs", Model.Logs.Value)
                </div>        
            </td>
        </tr>
        <tr>
            <td class="span3">
                <label>@Translation.Get("Log Note", Enums.TranslationSource.TextTranslation)</label>
            </td>
            <td class="span9">
                @Html.TextAreaFor(m => m.Logs.Value.Text)
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <a id="analyze_send_to_button" class="btn">
                    @Translation.Get("Send to...", Enums.TranslationSource.TextTranslation)
                </a>
                @Html.Partial("_SendToDialog", Model.Logs.Value.SendToDialog, new ViewDataDictionary(new ViewDataDictionary { { "Id", "analyze_send_to_dialog" }, { "Callback", "fillAnalyzeSendLogNoteToEmailsTextArea" } }))
                @Html.TextAreaFor(m => m.Logs.Value.Emails, new { id = "analyze_send_to_emails_textarea", @readonly = "readonly" })
                <a id="analyze_invite_to_cab_button" class="btn">
                    @Translation.Get("Invite to CAB...", Enums.TranslationSource.TextTranslation)
                </a>
                @Html.Partial("_SendToDialog", Model.InviteToCab.SendToDialog, new ViewDataDictionary(new ViewDataDictionary { { "Id", "analyze_invite_to_cab_dialog" }, { "Callback", "fillAnalyzeInviteToCabEmailsTextArea" } }))
                @Html.TextAreaFor(m => m.InviteToCab.Emails, new { id = "analyze_invite_to_cab_emails_textarea", @readonly = "readonly" })
            </td>
        </tr>
    }
@*    @if (Model.ApprovalResults.Show)*@
@*    {*@
@*        <tr>*@
@*            <td class="span3">*@
@*                <label>@Translation.Get(Model.ApprovalResults.Caption, Enums.TranslationSource.TextTranslation)</label>*@
@*            </td>*@
@*            <td class="span9">*@
@*                @Html.DropDownListFor(m => m.ApprovalValue, Model.ApprovalResults.Value, new { id = "analyze_approval_dropdown" })*@
@*            </td>*@
@*        </tr>*@
@*        if (Model.ApprovalResults.Value.SelectedValue != null && (StepStatus)Model.ApprovalResults.Value.SelectedValue == StepStatus.Rejected)*@
@*        {*@
@*            <tr id="analyze_reject_explanation_textarea">*@
@*                <td>*@
@*                    <label>@Translation.Get(Model.RejectExplanation.Caption, Enums.TranslationSource.TextTranslation)</label>*@
@*                </td>*@
@*                <td>*@
@*                    @Html.TextAreaFor(m => m.RejectExplanation.Value)       *@
@*                </td>*@
@*            </tr>*@
@*        }*@
@*        else*@
@*        {*@
@*            <tr id="analyze_reject_explanation_textarea" style="display: none;">*@
@*                <td>*@
@*                    <label>@Translation.Get(Model.RejectExplanation.Caption, Enums.TranslationSource.TextTranslation)</label>*@
@*                </td>*@
@*                <td>*@
@*                    @Html.TextAreaFor(m => m.RejectExplanation.Value)        *@
@*                </td>*@
@*            </tr>*@
@*        }*@
@*    }*@
</table>