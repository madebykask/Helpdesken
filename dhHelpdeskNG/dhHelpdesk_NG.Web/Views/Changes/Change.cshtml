
@using DH.Helpdesk.BusinessData.Enums.Changes
@using DH.Helpdesk.BusinessData.Enums.Changes.ApprovalResult
@model DH.Helpdesk.Web.Models.Changes.ChangeEdit.InputModel

<script type="text/javascript" src="@Url.Content("~/Scripts/Changes/change.js")"></script>

<script type="text/javascript">
    var parameters = {
        id: '@Model.ChangeId',
        indexUrl: '@Url.Action("Index")',
        deleteChangeUrl: '@Url.Action("Delete")',
        uploadFileUrl: '@Url.Action("UploadFile")',
        deleteFileUrl: '@Url.Action("DeleteFile")',
        deleteLogUrl: '@Url.Action("DeleteLog")',
        registrationSubtopic: '@Subtopic.Registration',
        analyzeSubtopic: '@Subtopic.Analyze',
        implementationSubtopic: '@Subtopic.Implementation',
        evaluationSubtopic: '@Subtopic.Evaluation',
        registrationRejectValue: '@RegistrationApprovalResult.Rejected',
        analyzeRejectValue: '@AnalyzeApprovalResult.Rejected'
    };

    $(function() {
        window.change = dhHelpdesk.change(parameters);
    });
    
    function saveChange() {
        
    }
</script>

@using (Ajax.BeginForm("Change", new AjaxOptions { OnSuccess = "saveChange" }))
{
    <div class="secnavs">
        <div class="pull-left">
            <ul class="secnav">
                <li>
                    <input type="submit" class="btn" value="@Translation.Get("Save", Enums.TranslationSource.TextTranslation)" />
                </li>
                <li>
                    <a id="save_and_close_button" class="btn">@Translation.Get("Save and Close", Enums.TranslationSource.TextTranslation)</a>
                </li>
                <li>
                    @Html.ActionLink(Translation.Get("Cancel", Enums.TranslationSource.TextTranslation), "Index", "Changes", new { @class = "btn" })
                </li>
                <li>
                    <a id="delete_button" class="btn">@Translation.Get("Delete", Enums.TranslationSource.TextTranslation)</a>
                </li>
            </ul>
        </div>
    </div>
    @Html.EditorFor(m => m)
}