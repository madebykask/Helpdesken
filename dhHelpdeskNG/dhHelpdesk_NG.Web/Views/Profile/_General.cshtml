@using DH.Helpdesk.Web.Infrastructure
@model DH.Helpdesk.Web.Models.Profile.ProfileInputViewModel

@{
    var passChangeText = Translation.Get("Lösenordet har ändrats", Enums.TranslationSource.TextTranslation);

    var passChangeError = Translation.Get("Det nya lösenordet bekräftades inte korrekt. Kontrollera att nytt lösenord och bekräftat lösenord stämmer överens", Enums.TranslationSource.TextTranslation);
}

<div class="formContainer">
    <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
    <table class="tableform">
        <tr>
            <td class="span3">
                @Translation.Get("Id", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.DisplayFor(model => model.User.UserID)
            </td>
        </tr>
        <tr>
            <td class="span3">
                @Translation.Get("Förnamn", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.FirstName, new { maxlength = "20" })                
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Efternamn", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.SurName, new { maxlength = "30" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Adress", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Address, new { maxlength = "50" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Postadress", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.PostalCode, new { maxlength = "5", style = "width: 60px;" })
                @Html.TextBoxFor(model => model.User.PostalAddress, new { maxlength = "30", style = "width: 222px;" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Telefon", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Phone, new { maxlength = "20" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Mobil", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.CellPhone, new { maxlength = "20" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("E-post", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.Email, new { maxlength = "50" })
            </td>
        </tr>
        <tr>
            <td>
                @Translation.Get("Time zone", Enums.TranslationSource.TextTranslation) <span class="mandatorystar">*</span>
            </td>
            <td>
                @Html.DropDownListFor(model => model.SelectedTimeZone, Model.AvailvableTimeZones,  new { style = "width: auto;" })
            </td>
        </tr>
        @if (Model.User.Id == null || Model.User.Id == 0 || Model.User.Id == -1)
        {
            <tr>
                <td>@Translation.Get("Lösenord", Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.PasswordFor(model => model.NewPassword, new { maxlength = "20" })</td>
            </tr>
            <tr>
                <td>@Translation.Get("Bekräfta lösenord", Enums.TranslationSource.TextTranslation)</td>
                <td>@Html.PasswordFor(model => model.ConfirmPassword, new { maxlength = "20" })</td>
            </tr>
        }
        else
        {
            <tr>
                <td>
                    @Translation.Get("Byt lösenord", Enums.TranslationSource.TextTranslation)
                </td>
                <td>
                    <input type="button" value="@Translation.Get("Byt lösenord", Enums.TranslationSource.TextTranslation)" name="changePassword" class="changePassword btn"
                           data-toggle="modal" data-target="#divPasswordDialog" onmouseover="javascript:this.style.cursor='hand'; javascript:this.style.cursor='pointer';"/>
                </td>
            </tr>
        }
    </table>
    <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
    
    <table class="tableform"> 
        <tr id="settingForNoMailRow" @(Model.User.AllocateCaseMail == 1 ? "style=display" : "block") style="display:none">
            <td class="span3">
                @Translation.Get("Meddelande", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                <input type="checkbox" name="User.SettingForNoMail" @(Model.User.SettingForNoMail == 1 ? "checked=checked" : "") value="1" />
                <input type="hidden" name="User.SettingForNoMail" value="0" />
                &nbsp; &nbsp;@Translation.Get("Skicka mail om användaren tilldelar sig själv ett ärende")
            </td>
        </tr>      
        <tr>
            <td class="span3">
                @Translation.Get("Ärendeöversikt", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                <input type="checkbox" name="User.ShowCaseStatistics" @(Model.User.ShowCaseStatistics == 1 ? "checked=checked" : "") value="1"/>
                <input type="hidden" name="User.ShowCaseStatistics" value="0" />
                &nbsp; &nbsp;@Translation.Get("Antal ärenden med status")
            </td>
        </tr>   
        <tr>
            <td></td>
            <td>
                <input type="checkbox" name="User.ShowSolutionTime" @(Model.User.ShowSolutionTime == 1 ? "checked=checked" : "") value="1"/>
                <input type="hidden" name="User.ShowSolutionTime" value="0" />
                &nbsp; &nbsp;@Translation.Get("Antal ärenden med återstående åtgärdstid")
            </td>
        </tr>    
        <tr>
            <td></td>
            <td>
                @Html.DropDownListFor(model => model.User.RefreshContent, Model.RefreshInterval, new { style = "width: auto;" })
                &nbsp;@Translation.Get("Uppdateringsintervall", Enums.TranslationSource.TextTranslation) &nbsp;(@Translation.Get("min", Enums.TranslationSource.TextTranslation))
            </td>
        </tr>
        <tr>
            <td class="span3">
                @Translation.Get("Timeout session", Enums.TranslationSource.TextTranslation)
            </td>
            <td>
                @Html.TextBoxFor(model => model.User.SessionTimeout, new { maxlength = "3", style = "width: 60px;" })
                &nbsp; &nbsp;(@Translation.Get("min", Enums.TranslationSource.TextTranslation))
            </td>
        </tr>
    </table>

</div>



<script type="text/javascript">

    var validator = $("#target").validate({
        ignore: "",
        rules: {
            "User.FirstName": {
                required: true
            },
            "User.SurName": {
                required: true
            },
            "User.Email": {
                required: true
            }
        },
        invalidHandler: function (form, validator) {
            var errors = validator.numberOfInvalids();
            if (errors) {
                var message = 'Please fill required fields!';                  
                ShowToastMessage(message, "error");
            } 
            //$('#fragment-1').class("active");
        }
    });

    function ShowToastMessage(message, msgType) {
        $().toastmessage('showToast', {
            text: message,
            sticky: true,
            position: 'top-center',
            type: msgType,
            closeText: '',
            stayTime: 10000,
            inEffectDuration: 1000,
            width: 500,
            close: function () {
                //console.log("toast is closed ...");
            }
        });
    }


</script>

