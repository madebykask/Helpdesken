@using System.Globalization
@using DH.Helpdesk.BusinessData.Models.Case.Output
@using DH.Helpdesk.Common.Constants
@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web
@model DH.Helpdesk.Web.Models.Feedback.EditFeedbackModel
@{
    ViewBag.Title = "";
    var languages = (SelectList)ViewBag.Languages;
}

@using (Html.BeginForm(MvcUrlName.Feedback.Edit, MvcUrlName.Feedback.Controller, FormMethod.Post, new { id = "feedback_edit_form" }))
{
    @Html.HiddenFor(m => m.QuestionId)
    @Html.HiddenFor(m => m.QuestionnaireId)
    @Html.HiddenFor(m => m.CircularId)

    <div class="secnavs fixed">
        <div class="pull-left">
            <ul class="secnav">
                <li>
                    <input type="submit" value="@Translation.GetCoreTextTranslation("Spara")" class="btn"/>
                </li>
                @if (!Model.IsNew && !Model.IsSent)
                {
                    <li>
                        @Html.ActionLink(Translation.GetCoreTextTranslation("Ta bort"), MvcUrlName.Feedback.Delete, MvcUrlName.Feedback.Controller,
                            new
                            {
                                feedbackId = Model.QuestionnaireId,
                                languageId = Model.LanguageId,
                                questionId = Model.QuestionId,
                                circularId = Model.CircularId
                            },
                            new
                            {
                                @class = "btn deleteDialog",
                                deleteDialogText = Translation.GetCoreTextTranslation("Är du säker på att du vill ta bort aktuell post") + "?"
                            })
                    </li>
                }
                <li>
                    <a href="@Url.Action(MvcUrlName.Questionnaire.Index, MvcUrlName.Questionnaire.Controller, new { tab = "feedback"})" class="btn">
                        @Translation.GetCoreTextTranslation("Avbryt")
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <div class="content">
        <div class="container">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#fragment-1">@Translation.GetCoreTextTranslation("Fråga")</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane tab-pane-border active" id="fragment-1">
                    <div class="container">
                        <h4>@Translation.GetCoreTextTranslation("Allmänt")</h4>
                        <div class="row">
                            <div class="span12">
                                <table class="tableform">
                                    <tr>
                                        @if (Model.IsNew)
                                        {
                                            <td class="span3"></td>
                                            <td class="span9">
                                                @Html.DropDownListFor(model => model.LanguageId, languages, new { id = "languageList", style = "display: none", disabled = "" })
                                                @Html.HiddenFor(m => m.LanguageId)
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Språk")
                                            </td>
                                            <td class="span9">
                                                @Html.DropDownListFor(model => model.LanguageId, languages, new { id = "languageList" })
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Namn")
                                        </td>
                                        <td class="span9">
                                            @Html.EditorFor(model => model.Name)
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Beskrivning")
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.Description, new { maxlength = "2000", style = "height:100px;" })
                                            @Html.ValidationMessageFor(model => model.Description)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Identifierare")
                                        </td>
                                        <td class="span9">
                                            @Html.EditorFor(model => model.Identifier)
                                            @Html.ValidationMessageFor(model => model.Identifier)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Fråga")
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.Question, new { maxlength = "1000", style = "height:100px;" })
                                            @Html.ValidationMessageFor(model => model.Question)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Visa kommentar")
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            <input type="checkbox" name="ShowNote" @(Model.ShowNote == 1 ? "checked=checked" : "") @(Model.LanguageId != LanguageIds.Swedish ? "disabled" : "") value="1" />
                                            <input type="hidden" name="ShowNote" value="0" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Text kommentar")
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.NoteText, new { maxlength = "1000", style = "height:100px;" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span2">
                                            @Translation.GetCoreTextTranslation("Urval")
                                        </td>
                                        <td class="span6">
                                            @Translation.GetCoreTextTranslation("Selektera ut")
                                            @{ var percents = (List<SelectListItem>)ViewBag.Percents; }
                                            @Html.DropDownListFor(model => model.SelectedPercent, percents, new { style = "width: 60px" })
                                            @Translation.GetCoreTextTranslation("procent av tillgängliga ärenden")
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span2">
                                            @Translation.GetCoreTextTranslation("Ärendetyp")
                                        </td>
                                        <td class="span5">
                                            @Html.ListBoxFor(model => model.CaseFilter.SelectedCaseTypes, (IList<SelectListItem>)ViewBag.CaseTypes, new { multiple = "multiple", @class = "chosen-select" })
                                        </td>
                                        @*<td class="span6">
                <div id="divCaseTypeSetting" class="btn-group">
                    <div class="btn" id="divBreadcrumbs_CaseTypeSetting"></div>
                    <button class="btn dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="#">@Translation.Get("--")</a></li>
                        @Html.CaseTypeDropdownButtonString((IList<CaseTypeOverview>)ViewBag.CaseTypes, true)
                    </ul>
                    @Html.HiddenFor(model => model.CaseTypeId)
                </div>
            </td>*@
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Exkludera handläggare")
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            @if (Model.LanguageId == LanguageIds.Swedish)
                                            {
                                                @Html.CheckBoxFor(m => m.ExcludeAdministrators)
                                            }
                                            else
                                            {
                                                @Html.CheckBoxFor(m => m.ExcludeAdministrators, new { disabled = "disabled" })
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.GetCoreTextTranslation("Använd Base64-bilder")
                                            <span class="icon-info-sign ml15" rel="tooltip"
                                                  title=""
                                                  data-original-title='@Translation.GetCoreTextTranslation("Säkerställ att ikonen visas i mejlet om bilder och system inte är publikt åtkomliga")'></span>
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            @if (Model.LanguageId == LanguageIds.Swedish)
                                            {
                                                @Html.CheckBoxFor(m => m.UseBase64Images)
                                            }
                                            else
                                            {
                                                @Html.CheckBoxFor(m => m.UseBase64Images, new { disabled = "disabled" })
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (Model.Options != null && !Model.IsNew)
            {
                @Html.Partial("_FeedbackQuestionOptions", Model);
            }
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render(BundleConfig.ScriptNames.Select2)
    @Scripts.Render(BundleConfig.ScriptNames.FeedbackEdit)
    <script type="text/javascript">
        $(function () {
            var translations = {
                OptionUnique: "@Translation.GetCoreTextTranslation("Värdet måste vara unikt")",
                MaxSize: "@Translation.GetCoreTextTranslation("Max") @Translation.GetCoreTextTranslation("Fil") @Translation.GetCoreTextTranslation("Storlek") 2kb"
            };
            var parameters = {
                FeedbackEditUrl: "@Url.Action(MvcUrlName.Feedback.Edit, MvcUrlName.Feedback.Controller)",
                QuestionnaireId: "@Model.QuestionnaireId.ToString(CultureInfo.InvariantCulture)",
                AddOptionUrl: "@Url.Action(MvcUrlName.Feedback.AddQuestionOption, MvcUrlName.Feedback.Controller)",
                FeedbcakId: @Model.QuestionnaireId,
                QuestionId: @Model.QuestionId,
                LanguageId: @Model.LanguageId,
                UrlContentImage: "@Url.Content("~/Content/img/")",
                FeedBackIconId: "@FeedBack.IconId",
                UrlSaveIcon: "@Url.Action(MvcUrlName.Feedback.UpdateOptionIcon, MvcUrlName.Feedback.Controller)"
            };

            LoadFeedbackEdit(parameters, translations);
        });
    </script>
}







