@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web.Models.Contract
@model List<DH.Helpdesk.Web.Models.Contract.ContractsSettingRowViewModel>
@{
    
    ViewBag.Title = "_ContractsFieldsSettings";
}

@{ var row = new ContractsSettingRowViewModel(); }          
    <tr>
        <th colspan="5">@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</th>
    </tr>               
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Number).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Number);}
              row.ContractFieldLable = Translation.Get("Nummer", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Number";
              }
        <td>@Translation.Get("Nummer", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= ContractFieldSettings.Number + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Number, id="fieldCaption", dataId=@row.Id , englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Number + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Number + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.CaseNumber).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.CaseNumber);
              row.ContractFieldLable = Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Case Number";
              row.Show = false;
              row.Required = false;
              row.ShowInList = false;
          }
              }
        <td>@Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.CaseNumber + " switchcheckbox disabled", id="fieldShow" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.CaseNumber, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.CaseNumber + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.CaseNumber + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Category).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Category);
              row.ContractFieldLable = Translation.Get("Kategori", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Category";
                          
          }
              }
        <td>@Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Category + " switchcheckbox", id="fieldShow" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Category, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Category + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id, @disabled="disabled", @checked="checked"})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Category + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr> 
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Supplier).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Supplier);
              row.ContractFieldLable = Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Supplier";           
              
          }
              }
        <td>@Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Supplier + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Supplier , id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Supplier + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Supplier + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Department).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Department);
              row.ContractFieldLable = Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Department";                                     
          }
              }
        <td>@Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Department + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Department, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Department + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Department + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Responsible).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Responsible);
              row.ContractFieldLable = Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Responsible";                                                              
              
          }
              }
        <td>@Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Responsible + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Responsible, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Responsible + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Responsible + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
          @{row = Model.Where(r => r.ContractField == ContractFieldSettings.StartDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.StartDate);
              row.ContractFieldLable = Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Start Date";            
              
          }
              }
        <td>@Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.StartDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.StartDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.StartDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.StartDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.EndDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.EndDate);
              row.ContractFieldLable = Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "End Date";            
                         
              
          }
              }
        <td>@Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.EndDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.EndDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.EndDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.EndDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.NoticeDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.NoticeDate);
              row.ContractFieldLable = Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Notice Date";                                      
              
          }
              }
        <td>@Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.NoticeDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Filename).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Filename);
              row.ContractFieldLable = Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Attached File";                                                                              
              
          }
              }
        <td>@Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Filename + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Filename, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Filename + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Filename + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Other).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Other);
              row.ContractFieldLable = Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Other";                                                                                                                      
              row.Required = false;
              row.ShowInList = false;
          }
              }
        <td>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Other + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Other, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Other + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Other + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Running).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Running);
              row.ContractFieldLable = Translation.Get("Löpande", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Running";                                                                                                                                                                                                 
              
          }
              }
        <td>@Translation.Get("Löpande", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Running + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new { @class=ContractFieldSettings.Running, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Running + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Running + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.Finished).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.Finished);
              row.ContractFieldLable = Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Finished";                                                                                                                                                             
              
          }
              }
        <td>@Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.Finished + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.Finished, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.Finished + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.Finished + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        <th colspan="5">@Translation.Get("Uppföljning", Enums.TranslationSource.TextTranslation)</th>
    </tr>               
    <tr>
        @{row = Model.Where(r => r.ContractField == ContractFieldSettings.FollowUpField).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.FollowUpField);
              row.ContractFieldLable = Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Follow Up Interval";                         
              
          }
              }
        <td>@Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.FollowUpField, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == ContractFieldSettings.ResponsibleFollowUpField).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(ContractFieldSettings.ResponsibleFollowUpField);
              row.ContractFieldLable = Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Responsible Follow Up";                          
              
          }
              }
        <td>@Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class=ContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class=ContractFieldSettings.ResponsibleFollowUpField, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class=ContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class=ContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
