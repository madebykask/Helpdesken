@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web.Models.Contract
@model List<DH.Helpdesk.Web.Models.Contract.ContractsSettingRowViewModel>
@{
    
    ViewBag.Title = "_ContractsFieldsSettings";
}

@{ var row = new ContractsSettingRowViewModel(); }          
    <tr>
        <th colspan="5">@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</th>
    </tr>               
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Number).FirstOrDefault();
            if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Number);
              row.ContractFieldLable = Translation.Get("Nummer", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Number";
             }             
          }
        <td>@Translation.Get("Nummer", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Number + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Number, id="fieldCaption", dataId=@row.Id , englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Number + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Number + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.CaseNumber).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.CaseNumber);
              row.ContractFieldLable = Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Case Number";
              row.Show = false;
              row.Required = false;
              row.ShowInList = false;
          }
              }
        <td>@Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.CaseNumber + " switchcheckbox disabled", id="fieldShow" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.CaseNumber, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.CaseNumber + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.CaseNumber + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Category).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Category);
              row.ContractFieldLable = Translation.Get("Kategori", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Category";
                          
          }
              }
        <td>@Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Category + " switchcheckbox", id="fieldShow" , dataId=@row.Id, @disabled="disabled"})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Category, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Category + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id, @disabled="disabled", @checked="checked"})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Category + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr> 
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Supplier).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Supplier);
              row.ContractFieldLable = Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Supplier";           
              
          }
              }
        <td>@Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Supplier + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Supplier , id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Supplier + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Supplier + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Department).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Department);
              row.ContractFieldLable = Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Department";                                     
          }
              }
        <td>@Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Department + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Department, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Department + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Department + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleUser).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleUser);
              row.ContractFieldLable = Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Responsible";                                                              
              
          }
              }
        <td>@Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.ResponsibleUser + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.ResponsibleUser, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.ResponsibleUser + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.ResponsibleUser + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
          @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.StartDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.StartDate);
              row.ContractFieldLable = Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Start Date";            
              
          }
              }
        <td>@Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.StartDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.StartDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.StartDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.StartDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.EndDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.EndDate);
              row.ContractFieldLable = Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "End Date";            
                         
              
          }
              }
        <td>@Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.EndDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.EndDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.EndDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.EndDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.NoticeDate).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.NoticeDate);
              row.ContractFieldLable = Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Notice Date";                                      
              
          }
              }
        <td>@Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.NoticeDate, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.NoticeDate + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Filename).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Filename);
              row.ContractFieldLable = Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Attached File";                                                                              
              
          }
              }
        <td>@Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Filename + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Filename, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Filename + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Filename + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Other).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Other);
              row.ContractFieldLable = Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Other";                                                                                                                      
              row.Required = false;
              row.ShowInList = false;
          }
              }
        <td>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Other + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Other, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Other + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Other + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Running).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Running);
              row.ContractFieldLable = Translation.Get("Löpande", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Running";                                                                                                                                                                                                 
              
          }
              }
        <td>@Translation.Get("Löpande", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Running + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new { @class= EnumContractFieldSettings.Running, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Running + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Running + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.Finished).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Finished);
              row.ContractFieldLable = Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Finished";                                                                                                                                                             
              
          }
              }
        <td>@Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.Finished + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.Finished, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.Finished + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.Finished + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
        <th colspan="5">@Translation.Get("Uppföljning", Enums.TranslationSource.TextTranslation)</th>
    </tr>               
    <tr>
        @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.FollowUpField).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.FollowUpField);
              row.ContractFieldLable = Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Follow Up Interval";                         
              
          }
              }
        <td>@Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.FollowUpField, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.FollowUpField + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
    <tr>
         @{row = Model.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleFollowUpField).FirstOrDefault();
          if (row == null){
              row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleFollowUpField);
              row.ContractFieldLable = Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation);
              row.ContractFieldLable_Eng = "Responsible Follow Up";                          
              
          }
              }
        <td>@Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation)</td>
        <td>@Html.CheckBoxFor(m=> row.Show, new { @class= EnumContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldShow" , dataId=@row.Id})</td>
        <td>@Html.TextBoxFor(m=> row.ContractFieldLable, new {@class= EnumContractFieldSettings.ResponsibleFollowUpField, id="fieldCaption", dataId=@row.Id, englishLable=row.ContractFieldLable_Eng, swedishLable=row.ContractFieldLable})</td>
        <td>@Html.CheckBoxFor(m=> row.Required, new { @class= EnumContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldMandatory" , dataId=@row.Id})</td>
        <td>@Html.CheckBoxFor(m=> row.ShowInList, new { @class= EnumContractFieldSettings.ResponsibleFollowUpField + " switchcheckbox", id="fieldShowInList" , dataId=@row.Id})</td>
    </tr>
