@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web.Models.Contract
@model DH.Helpdesk.Web.Models.Contract.ContractViewInputModel

@{
    var row = new ContractsSettingRowViewModel();

    //disable mvc validation 
    HtmlHelper.ClientValidationEnabled = false;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
}

<script type="text/javascript">
    window.appParameters = {
        uploadContractFileUrl: '@Url.Action("UploadContractFile", "Contracts")',
        loadHistoryUrl: '@Url.Action("ContractHistory", "Contracts")',
        ContractFileKey: '@Model.ContractFileKey',
        contractId: '@Model.ContractId',
        ContractFilesUrl: '@Url.Action("GetAllFiles", "Contracts")',
        fileAlreadyExistsMsg: '@Html.Raw(Translation.GetForJS("File already exists", Enums.TranslationSource.TextTranslation))',
        downloadContractFileUrl: '@Url.Action("DownloadFile")',
        downloadContractFileParamUrl: '@(!string.IsNullOrEmpty(Model.ContractFileKey) ? "id=" + Model.ContractFileKey + "&" : string.Empty)',
        deleteContractFileUrl: '@Url.Action("DeleteContractFile")'
    };
</script>


<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active" id="overview_Tab"><a href="#fragment-1">@Translation.Get("Avtal")</a></li>
            @if (Model.ContractId != 0)
            {
                <li id="log_tab">
                    <a href="#fragment-2">@Translation.Get("Logg", Enums.TranslationSource.TextTranslation)</a>
                </li>
                <li id="history_tab">
                    <a href="#fragment-3">@Translation.Get("Historik", Enums.TranslationSource.TextTranslation)</a>
                </li>}
        </ul>

        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment-1">
                <div class="container">
                    <div>
                        <h4>@Translation.Get("Allmänt")</h4>
                        <div class="row">
                            <div class="span12">
                                <table class="tableform">
                                    <thead>
                                        <tr>
                                            <th class="span3"></th>
                                            <th class="span4"></th>
                                            <th class="span5"></th>
                                        </tr>
                                    </thead>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Number);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Number);
                                                row.ContractFieldLabel = Translation.Get("Nummer", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Number";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.TextBoxFor(m => Model.ContractNumber)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.CaseNumber);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.CaseNumber);
                                                row.ContractFieldLabel = Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Case Number";
                                                row.Show = false;
                                                row.Required = false;
                                                row.ShowInList = false;
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.TextBoxFor(m => row.ContractFieldLabel, new { @class = EnumContractFieldSettings.CaseNumber, id = "fieldCaption", dataId = @row.Id, englishLable = row.ContractFieldLabel_Eng, swedishLable = row.ContractFieldLabel })</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Category);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Category);
                                                row.ContractFieldLabel = Translation.Get("Kategori", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Category";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.CategoryId, Model.ContractCategories)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Supplier);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Supplier);
                                                row.ContractFieldLabel = Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Supplier";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.SupplierId, Model.Suppliers)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Department);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Department);
                                                row.ContractFieldLabel = Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Department";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.DepartmentId, Model.Departments)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.ResponsibleUser);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleUser);
                                                row.ContractFieldLabel = Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Responsible";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(t => Model.ResponsibleUserId, Model.ResponsibleUsers)
                                            </td>
                                        }
                                    </tr>
                                    <tr style="margin-bottom:10px;">
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Filename);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Filename);
                                                row.ContractFieldLabel = Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Attached File";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                <div id="divContractFiles">
                                                    @Html.Partial("_ContractFiles", Model.ContractFiles)
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Other);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Other);
                                                row.ContractFieldLabel = Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Other";
                                                row.Required = false;
                                                row.ShowInList = false;
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.TextAreaFor(m => m.Other)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.StartDate);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.StartDate);
                                                row.ContractFieldLabel = Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Start Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.EditorFor(m => m.ContractStartDate, "DatePicker", new { id = "divContract__StartDate" })
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.EndDate);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.EndDate);
                                                row.ContractFieldLabel = Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "End Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.EditorFor(m => m.ContractEndDate, "DatePicker", new { id = "divContract__EndDate" })
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.NoticeDate);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.NoticeDate);
                                                row.ContractFieldLabel = Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Notice Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td colspan="3">
                                                @Html.EditorFor(m => m.NoticeDate, "DatePicker", new { id = "divContract__NoticeDate" })
                                                @Translation.Get("Skapa ärende", Enums.TranslationSource.TextTranslation)
                                                @Html.DropDownListFor(t => Model.NoticeTimeId, Model.NoticeTimes, new { style = "width: auto;" }) @Translation.Get("före uppsägningsdatum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Running);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Running);
                                                row.ContractFieldLabel = Translation.Get("Löpande", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Running";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(m => m.Running)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.Finished);
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Finished);
                                                row.ContractFieldLabel = Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLabel_Eng = "Finished";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLabel_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLabel, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(m => m.Finished)
                                            </td>
                                        }
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    @{var followUpFieldRow = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.FollowUp);
                        if (followUpFieldRow == null)
                        {
                            followUpFieldRow = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.FollowUp);
                            followUpFieldRow.ContractFieldLabel = Translation.Get("Uppföljningsintervall");
                            followUpFieldRow.ContractFieldLabel_Eng = "Follow Up Interval";
                        }
                    }
                    @{var responsibleFollowUpFieldRow = Model.SettingsModel.FirstOrDefault(r => r.ContractField == EnumContractFieldSettings.ResponsibleFollowUp);
                        if (responsibleFollowUpFieldRow == null)
                        {
                            responsibleFollowUpFieldRow = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleFollowUp);
                            responsibleFollowUpFieldRow.ContractFieldLabel = Translation.Get("Ansvarig uppföljning");
                            responsibleFollowUpFieldRow.ContractFieldLabel_Eng = "Responsible Follow Up";
                        }
                    }
                    @if (followUpFieldRow.Show || responsibleFollowUpFieldRow.Show)
                    {
                        <div>
                            <h4>@Translation.Get("Uppföljning")</h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableResponsible">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        <tr>
                                            @if (followUpFieldRow.Show)
                                            {
                                                <td>
                                                    @if (SessionFacade.CurrentLanguageId == 2)
                                                    {
                                                        @Html.DisplayFor(m => followUpFieldRow.ContractFieldLabel_Eng)
                                                    }
                                                    else
                                                    {
                                                        @Translation.Get(followUpFieldRow.ContractFieldLabel)
                                                        ;
                                                    }
                                                    @if (followUpFieldRow.Required)
                                                    {
                                                        <span class="mandatorystar">*</span>
                                                    }
                                                </td>
                                                <td>@Html.DropDownListFor(f => Model.FollowUpIntervalId, Model.FollowUpIntervals)</td>
                                            }
                                        </tr>
                                        <tr>
                                            @if (responsibleFollowUpFieldRow.Show)
                                            {
                                                <td>
                                                    @if (SessionFacade.CurrentLanguageId == 2)
                                                    {
                                                        @Html.DisplayFor(m => responsibleFollowUpFieldRow.ContractFieldLabel_Eng)
                                                    }
                                                    else
                                                    {
                                                        @Translation.Get(responsibleFollowUpFieldRow.ContractFieldLabel)
                                                        ;
                                                    }
                                                    @if (responsibleFollowUpFieldRow.Required)
                                                    {
                                                        <span class="mandatorystar">*</span>
                                                    }
                                                </td>
                                                <td>
                                                    @Html.DropDownListFor(t => Model.FollowUpResponsibleUserId, Model.FollowUpResponsibleUsers)
                                                </td>
                                            }
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }

                    @if (Model.ContractId != 0)
                    {
                        <div>
                            <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableResponsible">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        <tr>
                                            <td>
                                                @Translation.Get("Skapad datum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(t => Model.CreatedDate)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Translation.Get("Senast ändrad datum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(t => Model.ChangedDate)  @Translation.Get("av", Enums.TranslationSource.TextTranslation)  @Html.DisplayFor(t => Model.ChangedByUser)
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-2">
                @* @Html.Partial("_log", Model)    *@
            </div>
            @if (Model.ContractId > 0)
            {
                <div class="tab-pane tab-pane-border" id="fragment-3">
                    <div id="tab-3" class="tab-pane tab-pane-border">
                        <div class="container">
                            <div class="row">
                                <div class="span12" id="contractHistory">
                                    <!-- Loaded with ajax -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="globalProgress" class="loading-msg" style="display:none">
    <div class="content-wrapper">
        <div class="loader">@Translation.GetCoreTextTranslation("Laddar...")</div>
    </div>
</div>

@Html.Hidden("contract_languageId", SessionFacade.CurrentLanguageId)
@Scripts.Render("~/bundles/contracts/edit")

<script type="text/javascript">

    $(function () {

        //handle tabs switching
        $('#myTab a').on('shown.bs.tab', function (event) {
            //var prevTab = $(event.relatedTarget);
            var activeTab = $(event.target).parent();

            if (activeTab[0].id === 'history_tab') {
                window.Application.contract.loadHistory(window.appParameters.contractId);
            }
        });
    });

    function FieldIsRequired(value) {
        return value === 'True';
    }

    var validator = $("#target").validate({
        rules: {
            "ContractNumber": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Number && r.Required)")
            },
            "CaseNumber": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.CaseNumber && r.Required)")
            },
            "CategoryId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Category && r.Required)")
            },
            "SupplierId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Supplier && r.Required)")
            },
            "DepartmentId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Department && r.Required)")
            },
            "ResponsibleUserId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.ResponsibleUser && r.Required)")
            },
            "attachedFilesValidCheck": {
                checkAttachedFiles: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Filename && r.Required)")
            },
            "Other": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Other && r.Required)")
            },
            "ContractStartDate": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.StartDate && r.Required)")
            },
            "ContractEndDate": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.EndDate && r.Required)")
            },
            "NoticeDate": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.NoticeDate && r.Required)")
            },
            "Running": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Running && r.Required)")
            },
            "Finished": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.Finished && r.Required)")
            },
            "FollowUpIntervalId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.FollowUp && r.Required)")
            },
            "FollowUpResponsibleUserId": {
                required: FieldIsRequired("@Model.SettingsModel.Any(r => r.ContractField == EnumContractFieldSettings.ResponsibleFollowUp && r.Required)")
            }

        },
        messages: {
            "ContractNumber": {
                required: "@Translation.Get("Nummer", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "CaseNumber": {
                required: "@Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "CategoryId": {
                required: "@Translation.Get("Kategori", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "SupplierId": {
                required: "@Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "DepartmentId": {
                required: "@Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "ResponsibleUserId": {
                required: "@Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "Other": {
                required: "@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "ContractStartDate": {
                required: "@Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "ContractEndDate": {
                required: "@Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "NoticeDate": {
                required: "@Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "Running": {
                required: "@Translation.Get("Löpande", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "Finished": {
                required: "@Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "FollowUpIntervalId": {
                required: "@Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            },
            "FollowUpResponsibleUserId": {
                required: "@Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
            }
        },
        submitHandler: function (form) {
            form.submit();
        }
    });

    $.validator.addMethod("checkAttachedFiles", function (value, element, param) {
        const hasNewFiles = $('#newFiles').find('tr').length;
        const hasExistingFiles = $('#oldFiles').find('tr').length;
        return hasNewFiles || hasExistingFiles;
    }, function (param, element) {
        return '@Translation.GetCoreTextTranslation("Bifogad fil") @Translation.GetCoreTextTranslation("måste anges")';
    });
</script>
