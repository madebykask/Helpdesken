@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web.Models.Contract
@using System.Web.Optimization
@model DH.Helpdesk.Web.Models.Contract.ContractViewInputModel

@{ var row = new ContractsSettingRowViewModel(); }

<script type="text/javascript">
    window.appParameters = {
        uploadContractFileUrl: '@Url.Action("UploadContractFile", "Contracts")',
        ContractFileKey: '@Model.ContractFileKey',
        contractId: '@Model.ContractId',
        ContractFilesUrl: '@Url.Action("GetAllFiles", "Contracts")',
        fileAlreadyExistsMsg: '@Html.Raw(Translation.GetForJS("File already exists", Enums.TranslationSource.TextTranslation))',
        downloadContractFileUrl: '@Url.Action("DownloadFile")',
        downloadContractFileParamUrl: '@(!string.IsNullOrEmpty(Model.ContractFileKey) ? "id=" + Model.ContractFileKey + "&" : string.Empty)',
        deleteContractFileUrl: '@Url.Action("DeleteContractFile")'
    };
</script>


<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active" id="overview_Tab"><a href="#fragment-1">@Translation.Get("Avtal")</a></li>
            @if (Model.ContractId != 0)
            {
                <li id="log_tab">
                    <a href="#fragment-2">@Translation.Get("Logg", Enums.TranslationSource.TextTranslation)</a>
                </li>
            }
        </ul>

        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment-1">
                <div class="container">
                    <div>
                        <h4>@Translation.Get("Allmänt")</h4>
                        <div class="row">
                            <div class="span12">
                                <table class="tableform">
                                    <thead>
                                        <tr>
                                            <th class="span3"></th>
                                            <th class="span4"></th>
                                            <th class="span5"></th>
                                        </tr>
                                    </thead>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Number).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Number);
                                                row.ContractFieldLable = Translation.Get("Nummer", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Number";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.TextBoxFor(m => Model.ContractNumber)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.CaseNumber).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.CaseNumber);
                                                row.ContractFieldLable = Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Case Number";
                                                row.Show = false;
                                                row.Required = false;
                                                row.ShowInList = false;
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.TextBoxFor(m => row.ContractFieldLable, new { @class = EnumContractFieldSettings.CaseNumber, id = "fieldCaption", dataId = @row.Id, englishLable = row.ContractFieldLable_Eng, swedishLable = row.ContractFieldLable })</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Category).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Category);
                                                row.ContractFieldLable = Translation.Get("Kategori", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Category";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.CategoryId, Model.ContractCategories)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Supplier).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Supplier);
                                                row.ContractFieldLable = Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Supplier";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.SupplierId, Model.Suppliers)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Department).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Department);
                                                row.ContractFieldLable = Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Department";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(t => Model.DepartmentId, Model.Departments)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleUser).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleUser);
                                                row.ContractFieldLable = Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Responsible";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(t => Model.ResponsibleUserId, Model.ResponsibleUsers)
                                            </td>
                                        }
                                    </tr>
                                    <tr style="margin-bottom:10px;">
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Filename).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Filename);
                                                row.ContractFieldLable = Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Attached File";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                <div id="divContractFiles">
                                                    @Html.Partial("_ContractFiles", Model.ContractFiles)
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Other).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Other);
                                                row.ContractFieldLable = Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Other";
                                                row.Required = false;
                                                row.ShowInList = false;
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.TextAreaFor(m => m.Other)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.StartDate).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.StartDate);
                                                row.ContractFieldLable = Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Start Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.EditorFor(m => m.ContractStartDate, "DatePicker", new { id = "divContract__StartDate" })
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.EndDate).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.EndDate);
                                                row.ContractFieldLable = Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "End Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.EditorFor(m => m.ContractEndDate, "DatePicker", new { id = "divContract__EndDate" })
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.NoticeDate).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.NoticeDate);
                                                row.ContractFieldLable = Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Notice Date";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td colspan="3">
                                                @Html.EditorFor(m => m.NoticeDate, "DatePicker", new { id = "divContract__NoticeDate" })
                                                @Translation.Get("Skapa", Enums.TranslationSource.TextTranslation) @Translation.Get("ärende", Enums.TranslationSource.TextTranslation)
                                                @Html.DropDownListFor(t => Model.NoticeTimeId, Model.NoticeTimes, new { style = "width: auto;" }) @Translation.Get("före uppsägningsdatum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Running).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Running);
                                                row.ContractFieldLable = Translation.Get("Löpande", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Running";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(m => m.Running)
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Finished).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.Finished);
                                                row.ContractFieldLable = Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Finished";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(m => m.Finished)
                                            </td>
                                        }
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h4>@Translation.Get("Uppföljning", Enums.TranslationSource.TextTranslation)</h4>
                        <div class="row">
                            <div class="span12">
                                <table class="tableResponsible">
                                    <thead>
                                        <tr>
                                            <th class="span3"></th>
                                            <th class="span4"></th>
                                            <th class="span5"></th>
                                        </tr>
                                    </thead>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.FollowUpField).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.FollowUpField);
                                                row.ContractFieldLable = Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Follow Up Interval";
                                            }
                                        }
                                        @if (row.Show == true)
                                         {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>@Html.DropDownListFor(f => Model.FollowUpIntervalId, Model.FollowUpIntervals)</td>
                                        }
                                    </tr>
                                    <tr>
                                        @{row = Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleFollowUpField).FirstOrDefault();
                                            if (row == null)
                                            {
                                                row = ContractsSettingRowViewModel.CreateEmpty(EnumContractFieldSettings.ResponsibleFollowUpField);
                                                row.ContractFieldLable = Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation);
                                                row.ContractFieldLable_Eng = "Responsible Follow Up";
                                            }
                                        }
                                        @if (row.Show == true)
                                        {
                                            <td>
                                                @if (SessionFacade.CurrentLanguageId == 2)
                                                {
                                                    @Html.DisplayFor(m => row.ContractFieldLable_Eng)
                                                }
                                                else
                                                {
                                                    @Translation.Get(row.ContractFieldLable, Enums.TranslationSource.TextTranslation);
                                                }
                                                @if (row.Required == true)
                                                {
                                                    <span class="mandatorystar">*</span>}
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(t => Model.FollowUpResponsibleUserId, Model.FollowUpResponsibleUsers)
                                            </td>
                                        }
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    @if (Model.ContractId != 0)
                    {
                        <div>
                            <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableResponsible">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>                                       
                                        <tr>
                                            <td>
                                                @Translation.Get("Skapad datum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(t => Model.CreatedDate)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Translation.Get("Senast ändrad datum", Enums.TranslationSource.TextTranslation)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(t => Model.ChangedDate)  @Translation.Get("av", Enums.TranslationSource.TextTranslation)  @Html.DisplayFor(t => Model.ChangedByUser)
                                            </td>
                                        </tr>
                                    </table>                                    
                                </div>
                            </div>
                        </div>
                    }                        
                    </div>
                </div>
            <div class="tab-pane tab-pane-border" id="fragment-2">
                @* @Html.Partial("_log", Model)    *@
            </div>
            </div>
        </div>
    </div>

@Scripts.Render("~/bundles/contracts/edit")

<script type="text/javascript">

function FieldIsRequired(value) {
    var ret = false;
    if (value == 'True') {
        ret = true;
    }
    return ret;
}

var validator = $("#target").validate({
    rules: {
        "ContractNumber": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Number && r.Required).Any()")
        },
        "CaseNumber": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.CaseNumber && r.Required).Any()")
        },
        "CategoryId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Category && r.Required).Any()")
        },
        "SupplierId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Supplier && r.Required).Any()")
        },
        "DepartmentId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Department && r.Required).Any()")
        },
        "ResponsibleUserId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleUser && r.Required).Any()")
        },
        "btnAddContractFile": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Filename && r.Required).Any()")
        },
        "Other": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Other && r.Required).Any()")
        },
        "ContractStartDate": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.StartDate && r.Required).Any()")
        },
        "ContractEndDate": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.EndDate && r.Required).Any()")
        },
        "NoticeDate": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.NoticeDate && r.Required).Any()")
        },
        "Running": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Running && r.Required).Any()")
        },
        "Finished": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.Finished && r.Required).Any()")
        },
        "FollowUpIntervalId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.FollowUpField && r.Required).Any()")
        },
        "FollowUpResponsibleUserId": {
            required: FieldIsRequired("@Model.SettingsModel.Where(r => r.ContractField == EnumContractFieldSettings.ResponsibleFollowUpField && r.Required).Any()")
        }

    },
    messages: {
        "ContractNumber": {
            required: "@Translation.Get("Nummer", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "CaseNumber": {
            required: "@Translation.Get("Ärendenr", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "CategoryId": {
            required: "@Translation.Get("Kategori", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "SupplierId": {
            required: "@Translation.Get("Leverantör", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "DepartmentId": {
            required: "@Translation.Get("Avdelning", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "ResponsibleUserId": {
            required: "@Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "btnAddContractFile": {
            required: "@Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "Other": {
            required: "@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "ContractStartDate": {
            required: "@Translation.Get("Startdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "ContractEndDate": {
            required: "@Translation.Get("Slutdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "NoticeDate": {
            required: "@Translation.Get("Uppsägningsdatum", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "Running": {
            required: "@Translation.Get("Löpande", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "Finished": {
            required: "@Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "FollowUpIntervalId": {
            required: "@Translation.Get("Uppföljningsintervall", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        },
        "FollowUpResponsibleUserId": {
            required: "@Translation.Get("Ansvarig uppföljning", Enums.TranslationSource.TextTranslation) @Translation.Get("måste anges")"
        }
    },
    submitHandler: function (form) {
        form.submit();
    }
});


</script>
