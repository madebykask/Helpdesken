@model dhHelpdesk_NG.Web.Models.CaseInputViewModel 
@using dhHelpdesk_NG.DTO.Utils

<div class="secnavs">
    <div class="pull-left">
        <ul class="secnav">
            <li>
                <div class="checkbox">
                    <input name="form-field-checkbox" type="checkbox" />
                    <span class="lbl">@Translation.Get("Informera anmälaren om åtgärden", Enums.TranslationSource.TextTranslation) </span>
                </div>                                    
            </li>
            <li class="secspace"></li>
            <li>
                <div class="checkbox">
                    <input name="form-field-checkbox" type="checkbox" />
                    <span class="lbl">@Translation.Get("Hög prioritet", Enums.TranslationSource.TextTranslation) </span>
                </div> 
            </li>
            <li class="secspace"></li>
            <li>@Translation.Get("Standardtext", Enums.TranslationSource.TextTranslation)
                <select>
                    <option>TODO - list of standardtexts to update log notes</option>
                </select>
            </li>
        </ul>
    </div>
</div>
<h4>
    @Translation.Get("Ny loggpost", Enums.TranslationSource.TextTranslation)
    @if (Model.case_.CaseNumber > 0)
    {
        @Translation.Get("Ärende", Enums.TranslationSource.TextTranslation) <span>@Model.case_.CaseNumber</span>
                                    
    }
</h4>
<div class="row">
    <div class="span12">
        <table class="tableform">
            <tr>
                <td class="span3" @Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString()) >
                    @Translation.Get(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString(), Enums.TranslationSource.CaseTranslation, Model.case_.Customer_Id) 
                    @if (Model.caseFieldSettings.getCaseSettingsValue(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString()).Required == 1)
                    {
                        <span class="mandatorystar">*</span>
                    }
                </td>
                <td class="span4">
                    @Html.TextAreaFor(model => model.CaseLog.TextExternal)
                    @Html.HiddenFor(model => model.CaseLog.RegUser)  
                    @Html.HiddenFor(model => model.CaseLog.LogType)  
                    @Html.HiddenFor(model => model.CaseLog.UserId)  
                    @Html.HiddenFor(model => model.CaseLog.Id)  
                </td>
                <td class="span5">
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get(GlobalEnums.TranslationCaseFields.tblLog_Text_Internal.ToString(), Enums.TranslationSource.CaseTranslation, Model.case_.Customer_Id) 
                    @if (Model.caseFieldSettings.getCaseSettingsValue(GlobalEnums.TranslationCaseFields.tblLog_Text_Internal.ToString()).Required == 1)
                    {
                        <span class="mandatorystar">*</span>
                    }
                </td>
                <td>
                    @Html.TextAreaFor(model => model.CaseLog.TextInternal)
                </td>
                <td>
                    <div class="checkbox">
                        <label>
                            <input name="form-field-checkbox" type="checkbox" />
                            @Html.CheckBox("CaseLog.InformCustomer", Model.CaseLog.InformCustomer.convertIntToBool())
                            <span class="lbl">@Translation.Get("Skicka intern loggpost till", Enums.TranslationSource.TextTranslation)</span>
                        </label>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Attched files", Enums.TranslationSource.TextTranslation) 
                </td>
                <td>
                </td>
            </tr>
            <tr @Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.FinishingDescription.ToString())>
                <td>
                    @Translation.Get(GlobalEnums.TranslationCaseFields.FinishingDescription.ToString(), Enums.TranslationSource.CaseTranslation, Model.case_.Customer_Id) 
                    @if (Model.caseFieldSettings.getCaseSettingsValue(GlobalEnums.TranslationCaseFields.FinishingDescription.ToString()).Required == 1)
                    {
                        <span class="mandatorystar">*</span>
                    }                                            
                </td>
                <td>
                    @Html.TextAreaFor(model => model.case_.FinishingDescription)
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Avslutsorsak", Enums.TranslationSource.TextTranslation) 
                </td>
                <td>
                    <select>
                        <option>TODO - Parent/Child</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get(GlobalEnums.TranslationCaseFields.FinishingDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.case_.Customer_Id) 
                </td>
                <td>
                    <div class="input-append date dateie" data-date="" data-date-format="@DateExtensions.GetDateFormat()">
                        @Html.TextBoxFor(model => model.CaseLog.FinishingDate,  new { maxlength = "10", Class="span2" })<span class="add-on"><i class="icon-calendar"></i></span>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
<h4>
    @Translation.Get("Fakturering", Enums.TranslationSource.TextTranslation)
</h4>
<div class="row">
    <div class="span12">
        <table class="tableform">
            <tr>
                <td class="span3" >
                    @Translation.Get("Tidsåtgång", Enums.TranslationSource.TextTranslation) 
                </td>
                <td class="span4">
                    <select id="CaseLog_WorkingTimeHour" name="CaseLog.WorkingTimeHour" Class="inputw100">
                    @for (var i = 0; i < 100; i++)  
                    {
                        <option value="@i.ToString()" >@i.ToString()</option>
                    }
                    </select>&nbsp;@Translation.Get("Tim", Enums.TranslationSource.TextTranslation)&nbsp; 
                    <select id="CaseLog_WorkingTimeMinute" name="CaseLog.WorkingTimeMinute" Class="inputw100">
                        <option value="0">0</option>
                        <option value="30">30</option>
                    </select>&nbsp;@Translation.Get("Min", Enums.TranslationSource.TextTranslation)
                </td>
                <td class="span5">
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Material", Enums.TranslationSource.TextTranslation) 
                </td>
                <td>
                    @Html.TextBoxFor(model => model.CaseLog.EquipmentPrice, new { maxlength = "8"} )
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Pris", Enums.TranslationSource.TextTranslation) 
                </td>
                <td>
                    @Html.TextBoxFor(model => model.CaseLog.Price, new { maxlength = "8" })
                </td>
                <td>
                </td>
            </tr>
            <tr>
                <td>
                    @Translation.Get("Debitering", Enums.TranslationSource.TextTranslation) 
                </td>
                <td>
                    <div class="checkbox">
                        <label>
                            <input name="form-field-checkbox" type="checkbox" />
                            @Html.CheckBox("CaseLog.Charge", Model.CaseLog.Charge.convertIntToBool())
                            <span class="lbl">@Translation.Get("Debitera kunden för genomförd åtgärd", Enums.TranslationSource.TextTranslation)</span>
                        </label>
                    </div>                                                
                </td>
                <td>
                </td>
            </tr>
        </table>                                    
    </div>
</div>                            