@model DH.Helpdesk.Web.Models.Case.CaseInputViewModel
@using System.Web.Optimization
@using System.Linq;
@using DH.Helpdesk.BusinessData.OldComponents
@using DH.Helpdesk.Common.Constants
@using DH.Helpdesk.Common.Enums.Cases
@using DH.Helpdesk.Common.Enums.Settings
@using DH.Helpdesk.Domain.Invoice
@using DH.Helpdesk.Web
@using DH.Helpdesk.Web.Infrastructure.Extensions
@using DH.Helpdesk.Web.Infrastructure.Extensions.HtmlHelperExtensions
@using DH.Helpdesk.Common.Extensions.Integer
@using DH.Helpdesk.Common.Extensions.Boolean
@using DH.Helpdesk.Web.Common.Enums.Case
@using DH.Helpdesk.Web.Infrastructure

@Html.Partial("~/Views/Cases/_CaseValidation.cshtml", Model)
@Scripts.Render("~/bundles/cases/_input")
@if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.AddFollowersBtn, CaseSolutionFields.AddFollowersBtn) && Model.caseFieldSettings.IsFieldVisible(GlobalEnums.TranslationCaseFields.AddFollowersBtn))
{
    @Scripts.Render(BundleConfig.ScriptNames.UserSearchCommon)
}

@if (Model.case_ != null)
{
    <div class="content onemenu editcase" id="mm1">
        <div class="container">
            <ul class="nav nav-tabs" id="tabsArea">
                <li id="caseTabContainer" data-active-tab="case-tab" class="@((Model.ActiveTab == "" || Model.ActiveTab == CaseTabs.CaseTab) ? "active" : "")">

                    @if (Model.CaseTemplateName != null && Model.ExtendedCases == null)
                    {
                        <a id="case-tab" href="#case" class="case">@Model.CaseTemplateName</a>
                    }
                    else
                    {
                        <a id="case-tab" href="#case" class="case">
                            @Translation.GetCoreTextTranslation("Ärende")
                            @if (Model.case_.Id != 0)
                            {
                                @Model.case_.CaseNumber
                            }
                        </a>
                    }
                </li>
                @if (Model.ChildCaseViewModel != null)
                {
                    if (Model.ChildCaseViewModel.MergedChildList != null && Model.ChildCaseViewModel.MergedChildList.Count > 0)
                    {
                        <li id="mergedCaseTabContainer">
                            <a href="#mergedcases-tab" title="@Translation.GetCoreTextTranslation("Sammanfogade ärenden")">
                                @string.Format("{0} ({1})", Translation.GetCoreTextTranslation("Sammanfogade ärenden"), Model.ChildCaseViewModel.MergedChildList.Count)
                            </a>
                        </li>
                    }
                    if (Model.ChildCaseViewModel.ChildCaseList != null && Model.ChildCaseViewModel.ChildCaseList.Count > 0)
                    {
                        <li id="childCaseTabContainer">
                            <a href="#childcases-tab" title="@string.Format("{0}/{1} {2}", Model.ClosedChildCasesCount, Model.ChildCaseViewModel.ChildCaseList.Count, Translation.GetCoreTextTranslation("avslutade").ToLower())">
                                @string.Format("{0} ({1}/{2} {3})", Translation.GetCoreTextTranslation("Underärenden"), Model.ClosedChildCasesCount, Model.ChildCaseViewModel.ChildCaseList.Count, Translation.GetCoreTextTranslation("avslutade").ToLower())
                            </a>
                        </li>
                    }
                }


                @if (Model.DynamicCase != null && Model.DynamicCase.ExternalPage)
                {
                    if (Model.DynamicCase.ViewMode == 0)
                    {
                        <li id="dynamicCaseTabContainer">
                            <a href="#dh-form-area" id="loadContainer" class="eform" data-state="">@(Translation.GetCoreTextTranslation(Model.DynamicCase.FormName))</a>
                        </li>

                    }
                    else if (Model.DynamicCase.ViewMode == 1)
                    {
                        <li class="dh-modal">
                            <a id="openContainer">@(Translation.GetCoreTextTranslation(Model.DynamicCase.FormName))</a>
                        </li>
                    }
                }

                @if (Model.ContainsExtendedCase)
                {
                    foreach (var extendedCase in Model.ExtendedCases)
                    {
                        <li data-active-tab="@CaseTabs.ExtendedCaseTab" class="@((Model.ActiveTab.StartsWith(CaseTabs.ExtendedCaseTab)) ? "active" : "")">
                            <a href="#container_@extendedCase.Id" id="extendedcase-tab" class="extendedcase" data-id="@extendedCase.Id" data-state="">
                                @(Translation.GetMasterDataTranslation(extendedCase.Name))
                                <i id="exTabIndicator_@extendedCase.Id" class="tab-indicator" style="display:none">&nbsp;</i>
                            </a>
                        </li>
                    }
                }

                @if (Model.Setting.AttachmentPlacement == 1)
                {
                    <li>
                        <a id="attachment-tab" href="#attachment-container">@(Translation.GetCoreTextTranslation("Bilagor")) <span id="nrOfAttachedFiles">(@(Model.CaseFilesModel.SavedFiles != null ? Model.CaseFilesModel.Files.Count() : 0))</span></a>
                    </li>
                }

                @if (Model.CaseDocuments != null && Model.CaseDocuments.Count() > 0)
                {
                    <li>
                        <a id="casedocument-tab" href="#casedocument-container">@(Translation.GetCoreTextTranslation("Dokument")) <span id="nrOfCaseDocuments">(@(Model.CaseDocuments != null ? Model.CaseDocuments.Count() : 0))</span></a>
                    </li>
                }

                @if (Model.CaseLock != null && Model.CaseLock.IsLocked && Model.CaseLock.User != null)
                {
                    if (Model.CaseLock.UserId == SessionFacade.CurrentUser.Id)
                    {
                        <li class="notice">
                            <a>@Translation.GetCoreTextTranslation("OBS! Du har redan öppnat detta ärende i en annan session.")</a>
                        </li>
                    }
                    else
                    {
                        var userName = string.Format("{0} {1} ({2})", Model.CaseLock.User.FirstName, Model.CaseLock.User.SurName, Model.CaseLock.User.UserID);
                        <li class="notice">
                            <a>@Translation.GetCoreTextTranslation("OBS! Detta ärende är öppnat av")&nbsp; @userName</a>
                        </li>
                    }
                }

                @if (Model.OrderId.HasValue)
                {
                    <li>
                        <a id="case-order-url" href="@Url.Content("~/Orders/Orders/Edit/" + Model.OrderId.Value + "?retToCase=" + Model.IsReturnToCase)">@Translation.GetCoreTextTranslation("Beställning")</a>
                    </li>
                }

                @if (Model.AccountId.HasValue && Model.AccountActivityId.HasValue)
                {
                    <li>
                        <a id="case-orderaccount-url" href="@Url.Content("~/OrderAccounts/Orders/Edit/" + Model.AccountId.Value + "?accountActivityId=" + Model.AccountActivityId.Value + "&caseId=" + Model.case_.Id)">@Translation.GetCoreTextTranslation("Beställning konto")</a>
                    </li>
                }
            </ul>
            <div class="tab-content" id="mainTabContainer">
                <div class="tab-pane tab-pane-border @((Model.ActiveTab == "" || Model.ActiveTab == CaseTabs.CaseTab) ? "active" : "")" id="case">
                    <div class="container">
                        @Html.HiddenFor(model => model.case_.Id, new { data_field = "caseId" })
                        @Html.HiddenFor(model => model.case_.CaseGUID)
                        @Html.HiddenFor(model => model.case_.Customer_Id, new { data_field = "customerId" })
                        @Html.HiddenFor(model => model.case_.User_Id)
                        @Html.HiddenFor(model => model.case_.IpAddress)
                        @Html.HiddenFor(model => model.case_.Deleted)
                        @Html.HiddenFor(model => model.case_.RegistrationSource)
                        @Html.HiddenFor(model => model.DepartmentFilterFormat, new { data_field = "departmentFilterFormat" })
                        @Html.HiddenFor(model => model.case_.RegUserDomain)
                        @Html.HiddenFor(model => model.case_.RegUserId)
                        @Html.HiddenFor(model => model.case_.CaseNumber)
                        @Html.HiddenFor(model => model.case_.ProductAreaSetDate)
                        @Html.HiddenFor(model => model.case_.LockCaseToWorkingGroup_Id)
                        @Html.HiddenFor(model => model.case_.FinishingDate)
                        @Html.HiddenFor(model => model.case_.ProductAreaQuestionVersion_Id)
                        @Html.HiddenFor(model => model.case_.LeadTime)
                        @Html.HiddenFor(model => model.case_.CaseCleanUp_Id)
                        @Html.HiddenFor(model => model.case_.RelatedCaseNumber)
                        @Html.HiddenFor(model => model.case_.ApprovedDate)
                        @Html.HiddenFor(model => model.case_.ApprovedBy_User_Id)
                        @Html.HiddenFor(model => model.case_.ApprovedBy_User_Id)
                        @Html.HiddenFor(model => model.case_.FollowUpDate)
                        @Html.HiddenFor(model => model.case_.ExternalTime)
                        @Html.HiddenFor(model => model.case_.DefaultOwnerWG_Id)
                        @Html.HiddenFor(model => model.case_.RegUserName)
                        @Html.HiddenFor(model => model.CaseKey)
                        @Html.HiddenFor(model => model.CaseMailSetting.SendMailAboutNewCaseTo)
                        @Html.HiddenFor(model => model.CaseMailSetting.HelpdeskMailFromAdress)
                        @Html.HiddenFor(model => model.CaseMailSetting.AbsoluterUrl)
                        @Html.HiddenFor(model => model.CaseMailSetting.DontConnectUserToWorkingGroup, new { data_field = "dontConnectUserToWorkingGroup" })
                        @Html.HiddenFor(model => model.CaseFileNames)
                        @Html.HiddenFor(model => model.LogFileNames)
                        @Html.HiddenFor(model => model.SavedFiles)
                        @Html.HiddenFor(model => model.case_.Unread)
                        @Html.HiddenFor(model => model.ProductAreaHasChild)
                        @Html.HiddenFor(model => model.FinishingCauseHasChild)
                        @Html.HiddenFor(model => model.CustomerSettings.ModuleCaseInvoice)
                        @Html.HiddenFor(model => model.MovedFromCustomerId)
                        @Html.HiddenFor(model => model.ContainsExtendedCase)
                        @Html.HiddenFor(model => model.ExtendedCaseGuid)

                        @foreach (var key in Model.StatusBar.Keys)
                        {
                            @Html.HiddenFor(model => model.StatusBar[key]);
                        }

                        @Html.Hidden("WriteTextToExternalNote", Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString()))
                        @Html.Hidden("Today", DateTime.Now.ToShortDateString())
                        @Html.Hidden("CurLanguageId", SessionFacade.CurrentLanguageId)
                        @Html.Hidden("SelectedValueCarrier", "")
                        @Html.Hidden("CaseTemplate_WorkingGroup_Id", "")
                        @Html.Hidden("CaseTemplate_Priority_Id", "")
                        @Html.Hidden("CaseTemplate_StateSecondary_Id", "")
                        @Html.Hidden("CaseTemplate_Department_Id", "")
                        @Html.Hidden("CaseTemplate_OU_Id", "")
                        @Html.Hidden("CaseTemplate_IsAbout_Department_Id", "")
                        @Html.Hidden("CaseTemplate_IsAbout_OU_Id", "")
                        @Html.Hidden("CaseTemplate_ExternalLogNote", "")
                        @Html.Hidden("CaseTemplate_Performer_Id", "")
                        @Html.Hidden("LastProductAreaId", Model.case_.ProductArea_Id)
                        @Html.Hidden("LastProjectId", Model.case_.Project_Id)
                        @Html.Hidden("CaseHasInvoiceOrder", "")
                        @Html.Hidden("IsAnyFileAdded", "0")
                        @Html.Hidden("CaseSolution_Id", (Model.NewModeParams != null && Model.NewModeParams.templateId != null) ? Model.NewModeParams.templateId : Model.case_.CaseSolution_Id)
                        @Html.Hidden("CurrentCaseSolution_Id", (Model.CurrentCaseSolution == null ? (int?)null : Model.CurrentCaseSolution.Id))
                        @Html.Hidden("SplitToCaseSolution_Id", "")

                        @Html.HiddenFor(model => model.ActiveTab)
                        @Html.HiddenFor(model => model.SelectedWorkflowStep)
                        @Html.Hidden("ButtonClick", "") @*TEMP, used to define if "Send" button is clicked*@

                        @Html.HiddenFor(model => Model.CaseLock.LockGUID)
                        @Html.HiddenFor(model => Model.CaseLock.ActiveTab)

                        @Html.Hidden("CaseRelationType", Model.CaseRelationType())

                        @*<input type="button" id="sla_test" value="SLA Test" onclick="CalcSLA();" />*@
                        @if (Model.IsItChildCase() && !Model.IsItMergedChild())
                        {
                            <input type="hidden" name="ParentId" value="@Model.ParentCaseInfo.ParentId" />
                            <div class="alert alert-info">
                                @Translation.GetCoreTextTranslation("Detta är ett underärende till ärende")&nbsp;<a href="@Url.Action("Edit", new { id = Model.ParentCaseInfo.ParentId })"><strong>@Model.ParentCaseInfo.CaseNumber</strong></a>.
                                @if (!string.IsNullOrEmpty(Model.ParentCaseInfo.Administrator))
                                {
                                    @Translation.GetForCase(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString(), Model.case_.Customer_Id)
                                    <strong>@Model.ParentCaseInfo.Administrator</strong>
                                }
                                <br />
                                @Translation.GetCoreTextTranslation("Fristående underärende")&nbsp;
                                @Html.CheckBoxFor(model => Model.IndependentChild)
                            </div>
                        }
                        else if (Model.IsItMergedChild())
                        {
                            <input type="hidden" name="ParentId" value="@Model.MergedParentInfo.ParentId" />
                            <div class="alert alert-info">
                                @Translation.GetCoreTextTranslation("Detta ärende är sammanfogat till")&nbsp;<a href="@Url.Action("Edit", new { id = Model.MergedParentInfo.ParentId })"><strong>@Model.MergedParentInfo.CaseNumber</strong></a>.
                                @if (!string.IsNullOrEmpty(Model.MergedParentInfo.Administrator.ToString()))
                                {
                                    @Translation.GetForCase(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString(), Model.case_.Customer_Id)
                                    <strong>@Model.MergedParentInfo.Administrator</strong>
                                }
                                <br />
                            </div>
                        }

                        @if (Model.customerUserSetting.UserInfoPermission == 1)
                        {
                            <div style="@Model.displayUserInfoHtml()" class="section-block @Model.getSectionClass(CaseSectionType.Initiator)">
                                <h4>
                                    <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                    <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                    @Model.getSectionHeader(CaseSectionType.Initiator, CaseSections.InitiatorHeader) @Model.getSectionHeaderFields(CaseSectionType.Initiator)
                                </h4>
                                <div class="row">
                                    <div class="span12">
                                        <table class="tableform">
                                            <thead>
                                                <tr>
                                                    <th class="span3"></th>
                                                    <th class="span4"></th>
                                                    <th class="span5"></th>
                                                </tr>
                                            </thead>
                                            @if (@Model.ComputerUserCategories.Any())
                                            {
                                                <tr class="displaytr" style="@(Model.IsCaseFieldVisible(GlobalEnums.TranslationCaseFields.UserSearchCategory_Id, CaseSolutionFields.UserSearchCategory_Id) ? "" : "display:none")">
                                                    <td>@CaseFieldCaption(GlobalEnums.TranslationCaseFields.UserSearchCategory_Id, "Anmälarkategori")</td>
                                                    <td>
                                                        @Html.ReadonlyDropDownListFor(x => x.InitiatorCategoryId,
                                                            Model.BuildComputerCategoriesSelectList(Model.InitiatorCategoryId, true), null,
                                                            Model.IsReadOnly(GlobalEnums.TranslationCaseFields.UserSearchCategory_Id, CaseSolutionFields.UserSearchCategory_Id),
                                                            "InitiatorCategory")
                                                    </td>

                                                </tr>
                                            }
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ReportedBy, CaseSolutionFields.UserNumber)">
                                                <td>@CaseFieldCaption(GlobalEnums.TranslationCaseFields.ReportedBy, "Användar ID")</td>
                                                <td>
                                                    @Html.Hidden("ShowReportedBy", Model.caseFieldSettings.getCaseSettingsValue(GlobalEnums.TranslationCaseFields.ReportedBy.ToString()).ShowOnStartPage)
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.ReportedBy, CaseSolutionFields.UserNumber))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.ReportedBy, new { maxlength = "40", autocomplete = "Off", data_field = "userId", onblur = "EditPage.prototype.getLanguage()" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.ReportedBy, new { maxlength = "40", autocomplete = "Off", @readonly = true, data_field = "userId", onblur = "EditPage.prototype.getLanguage()" })
                                                    }
                                                </td>
                                                <td>
                                                    <a href="#"
                                                       id="AddNotifier"
                                                       style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.AddUserBtn, CaseSolutionFields.AddUserBtn)"
                                                       class="btn @Model.GetDisabledString(GlobalEnums.TranslationCaseFields.ReportedBy, CaseSolutionFields.UserNumber)">@Translation.GetCoreTextTranslation("Lägg till")</a>
                                                    @if (Model.CanGetRelatedCases)
                                                    {
                                                        <a href="#" data-field="relatedCases" style="display: none;" title="@Translation.GetCoreTextTranslation("Relaterade ärenden")" class="btn"><i class="icon-list"></i></a>
                                                    }
                                                    @if (Model.CustomerSettings.ModuleInventory)
                                                    {
                                                        <a href="#" data-field="relatedInventory" title="@Translation.GetCoreTextTranslation("Relaterade") @Translation.GetCoreTextTranslation("Inventarie")" class="btn @(Model.UserHasInventoryViewPermission ? "" : "disabled")" style="display: none;"><i class="icon-th-large"></i></a>
                                                    }

                                                    @if (Model.CustomerSettings.ModuleComputerUser && Model.IsUserAdmin)
                                                    {
                                                        <a href="javascript:;" data-field="inititatorDetails" style="display: none;"
                                                           title="@Model.getSectionHeader(CaseSectionType.Initiator, CaseSections.InitiatorHeader)"
                                                           class="btn"><i class="icon-user"></i></a>
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Persons_Name, CaseSolutionFields.PersonsName)">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Persons_Name, "Anmälare")
                                                </td>
                                                <td>
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Persons_Name, CaseSolutionFields.PersonsName))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsName, new { maxlength = "50" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsName, new { maxlength = "50", @readonly = "readonly" })
                                                    }
                                                </td>
                                                @if (Model.caseFieldSettings.IsFieldVisible(GlobalEnums.TranslationCaseFields.AddFollowersBtn))
                                                {
                                                    <td style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.AddFollowersBtn, CaseSolutionFields.AddFollowersBtn)">
                                                        @Html.HiddenFor(model => model.FollowerUsers, new { @readonly = "true", id = "extraEmailsInput" })

                                                        @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.AddFollowersBtn, CaseSolutionFields.AddFollowersBtn))
                                                        {
                                                            @Html.Partial("ModalDialogs/_ExtraEmails", Model.FollowersModel)
                                                            <a href="#add_extra_emails_btn" role="button" class="btn case-usersearch-btn" data-src="case" data-toggle="modal">@Translation.GetCoreTextTranslation("Välj följare")</a>
                                                            <div id="fakeExtraEmailsInput" contenteditable="true" class="case-send-emails-div case-usersearch-textarea @Model.getSearchEmailClass(CaseSectionType.Initiator)"></div>
                                                        }
                                                        else
                                                        {
                                                            @Html.Partial("ModalDialogs/_ExtraEmails", Model.FollowersModel, new ViewDataDictionary { { "isFollowersReadonly", true } })
                                                            <a href="#add_extra_emails_btn" role="button" class="btn case-usersearch-btn disabled" disabled="true" data-toggle="modal">@Translation.GetCoreTextTranslation("Välj följare")</a>
                                                            <div id="fakeExtraEmailsInput" contenteditable="false" class="case-send-emails-div-readonly case-send-emails-div case-usersearch-textarea @Model.getSearchEmailClass(CaseSectionType.Initiator)"></div>
                                                        }
                                                    </td>
                                                }
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Persons_EMail, CaseSolutionFields.PersonsEmail)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Persons_EMail, "E-post")
                                                </td>
                                                <td class="span4">
                                                    @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Persons_EMail, CaseSolutionFields.PersonsEmail))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsEmail, new { maxlength = "100", @readonly = "readonly" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsEmail, new { maxlength = "100", id = "casePersonsEmail" })
                                                    }
                                                </td>
                                                <td style="@Model.GetFieldStyle(CaseSolutionFields.Email)">
                                                    <div>
                                                        @*<label class="checkbox">*@
                                                        @if (!Model.IsReadOnly(CaseSolutionFields.Email))
                                                        {
                                                            @Html.CheckBoxFor(model => model.CaseMailSetting.DontSendMailToNotifier)
                                                        }
                                                        else
                                                        {
                                                            @Html.CheckBoxFor(model => model.CaseMailSetting.DontSendMailToNotifier, new { @readonly = true, @disabled = "disabled" })
                                                        }
                                                        @Translation.GetCoreTextTranslation("Skicka mail till anmälaren")
                                                        @*</label>*@

                                                        @if (Model.Languages != null && Model.Languages.Count() > 1 && Model.case_.Id == 0)
                                                        {
                                                            <select id="case__RegLanguage_Id" name="case_.RegLanguage_Id" class="span2">
                                                                @foreach (var e in Model.Languages)
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(SessionFacade.CurrentLanguageId.ToString())>@Translation.GetCoreTextTranslation(e.Name)</option>
                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            if (Model.Languages != null && Model.Languages.Count() > 1 && !Model.IsReadOnly(CaseSolutionFields.Email))
                                                            {
                                                                <select id="case__RegLanguage_Id" name="case_.RegLanguage_Id" class="span2">
                                                                    @foreach (var e in Model.Languages)
                                                                    {
                                                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.RegLanguage_Id.ToString())>@Translation.GetCoreTextTranslation(e.Name)</option>
                                                                    }
                                                                </select>
                                                            }
                                                            else
                                                            {
                                                                @Html.HiddenFor(m => Model.case_.RegLanguage_Id);
                                                            }
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Persons_Phone, CaseSolutionFields.PersonsPhone)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Persons_Phone, "Telefon")
                                                </td>
                                                <td class="span4">
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Persons_Phone, CaseSolutionFields.PersonsPhone))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsPhone, new { maxlength = "50" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsPhone, new { maxlength = "50", @readonly = "readonly" })
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Persons_CellPhone, CaseSolutionFields.PersonsCellPhone)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Persons_CellPhone, "Mobil")
                                                </td>
                                                <td class="span4">
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Persons_CellPhone, CaseSolutionFields.PersonsCellPhone))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsCellphone, new { maxlength = "50" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.PersonsCellphone, new { maxlength = "50", @readonly = "readonly" })
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Region_Id, CaseSolutionFields.Region)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Region_Id, "Område")
                                                </td>
                                                <td class="span4">
                                                    @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Region_Id, CaseSolutionFields.Region))
                                                    {
                                                        var curRegion = Model.regions.Where(r => r.Id == Model.case_.Region_Id).SingleOrDefault();
                                                        @Html.TextBoxFor(m => curRegion.Name, new { id = "RegionName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.Region_Id, new { @id = "case__Region_Id" })
                                                    }
                                                    else
                                                    {
                                                        <select id="case__Region_Id" name="case_.Region_Id" data-field="region">
                                                            <option value="" @(Model.InitiatorReadOnly ? "disabled=\"disabled\"" : "")>&nbsp;</option>
                                                            @if (Model.regions != null)
                                                            {
                                                                foreach (var e in Model.regions.Where(e => e.IsActive == 1 || Model.case_.Region_Id == e.Id))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Region_Id.ToString())>@e.Name</option>
                                                                }
                                                            }
                                                        </select>
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Department_Id, CaseSolutionFields.Department)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Department_Id, "Avdelning")
                                                </td>
                                                <td class="span4">

                                                    @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Department_Id, CaseSolutionFields.Department))
                                                    {
                                                        var curDep = Model.departments.Where(d => d.Id == Model.case_.Department_Id).SingleOrDefault();
                                                        @Html.TextBoxFor(m => curDep.DepartmentName, new { id = "DepartmentName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.Department_Id, new { @class = "departments-list", @id = "case__Department_Id" })
                                                    }
                                                    else
                                                    {
                                                        <select id="case__Department_Id" class="departments-list" name="case_.Department_Id" data-field="department">
                                                            <option value="" @(Model.InitiatorReadOnly ? "disabled=\"disabled\"" : "")>&nbsp;</option>
                                                            @if (Model.departments != null)
                                                            {
                                                                foreach (var e in Model.departments.Where(e => e.IsActive == 1 || Model.case_.Department_Id == e.Id).Where(e => Model.case_.Region_Id == e.Region_Id || !Model.case_.Region_Id.ToBool()))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Department_Id.ToString())>@e.DepartmentDescription(Model.DepartmentFilterFormat)</option>
                                                                }
                                                            }
                                                        </select>
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.OU_Id, CaseSolutionFields.OU)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.OU_Id, "Enhet")
                                                </td>
                                                <td class="span4">
                                                    @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.OU_Id, CaseSolutionFields.OU))
                                                    {
                                                        @Html.TextBox("OUName", Model.ous.Where(w => w.Id == Model.case_.OU_Id).Select(o => o.Name).SingleOrDefault(), new { id = "OuName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.OU_Id, new { id = "case__Ou_Id", name = "case_.OU_Id" })
                                                    }
                                                    else
                                                    {
                                                        <select id="case__Ou_Id" name="case_.OU_Id" data-field="ou">
                                                            <option value="">&nbsp;</option>
                                                            @if (Model.ous != null)
                                                            {
                                                                foreach (var ou in Model.ous)
                                                                {
                                                                    <option value="@ou.Id" @ou.Id.IdIsSelected(Model.case_.OU_Id.ToString())>@ou.Name</option>
                                                                }
                                                            }
                                                        </select>
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.CostCentre, CaseSolutionFields.CostCentre)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.CostCentre, "Kostnadsställe")
                                                </td>
                                                <td class="span4">
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.CostCentre, CaseSolutionFields.CostCentre))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.CostCentre, new { maxlength = "50" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.CostCentre, new { maxlength = "50", @readonly = "readonly" })
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Place, CaseSolutionFields.Place)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Place, "Placering")
                                                </td>
                                                <td class="span4">
                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Place, CaseSolutionFields.Place))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.Place, new { maxlength = "100" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.Place, new { maxlength = "100", @readonly = "readonly" })
                                                    }
                                                </td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.UserCode, CaseSolutionFields.Usercode)">
                                                <td class="span3">
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.UserCode, "Ansvarskod")
                                                </td>
                                                <td class="span4">

                                                    @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.UserCode, CaseSolutionFields.Usercode))
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.UserCode, new { maxlength = "50" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.case_.UserCode, new { maxlength = "50", @readonly = "readonly" })
                                                    }
                                                </td>
                                            </tr>
                                            @*                                            Save user info checkbox*@
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.UpdateNotifierInformation, CaseSolutionFields.UpdateNotifierInformation)">
                                                <td class="span3">
                                                    @Translation.GetCoreTextTranslation("Spara användaruppgifter")
                                                </td>
                                                <td class="span4">
                                                    @if (Model.IsReadOnly(CaseSolutionFields.UpdateNotifierInformation))
                                                    {
                                                        @Html.CheckBoxFor(m => Model.UpdateNotifierInformation, new { @class = "switchcheckbox", @readonly = "readonly" });
                                                    }
                                                    else
                                                    {
                                                        @Html.CheckBoxFor(m => Model.UpdateNotifierInformation, new { @class = "switchcheckbox" })
                                                    }


                                                </td>
                                            </tr>
                                            <tr>
                                                <td colspan="2">
                                                    <div id="extendedSection-Initiator" style="display:none">
                                                        <!--<h4>
                                                <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                                <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                                Vendor details <!-- TODO: Bind on category name and translation
                                            </h4>-->

                                                        <input type="hidden" id="ExtendedInitiatorGUID" name="ExtendedInitiatorGUID" value="@(Model.ExtendedCaseSections.ContainsKey(CaseSectionType.Initiator) ? Model.ExtendedCaseSections[CaseSectionType.Initiator].ExtendedCaseGuid.ToString() : "")" />
                                                        <iframe id="extendedSection-iframe-Initiator" src="" frameborder="0" scrolling="no" style="width:500px; height:180px; margin-top: 10px"></iframe>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(m => Model.case_.RegLanguage_Id);
                        }

                        <div style="@Model.displayAboutUserInfoHtml()" class="section-block @Model.getSectionClass(CaseSectionType.Regarding)">
                            <h4>
                                <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                @Model.getSectionHeader(CaseSectionType.Regarding, CaseSections.RegardingHeader) @Model.getSectionHeaderFields(CaseSectionType.Regarding)
                            </h4>

                            <div class="row">
                                <div class="span12">
                                    <table class="tableform">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        @if (Model.ComputerUserCategories.Any())
                                        {
                                            <tr class="displaytr" style="@(Model.IsCaseFieldVisible(GlobalEnums.TranslationCaseFields.IsAbout_UserSearchCategory_Id, CaseSolutionFields.IsAbout_UserSearchCategory_Id) ? "" : "display:none")">
                                                <td>@CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_UserSearchCategory_Id, "Anmälarkategori")</td>
                                                <td>
                                                    @Html.ReadonlyDropDownListFor(x => x.RegardingCategoryId,
                                                             Model.BuildComputerCategoriesSelectList(Model.RegardingCategoryId, true), null,
                                                             Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_UserSearchCategory_Id, CaseSolutionFields.IsAbout_UserSearchCategory_Id), "IsAboutCategory")
                                                </td>
                                            </tr>
                                        }
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy, CaseSolutionFields.IsAbout_ReportedBy)">
                                            <td>@CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy, "Användar ID")</td>
                                            <td>
                                                @*This line can be only used for Initiator-ReportedBy*@
                                                @*@Html.Hidden("ShowReportedBy", Model.caseFieldSettings.getCaseSettingsValue(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy.ToString()).ShowOnStartPage)*@

                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy, CaseSolutionFields.IsAbout_ReportedBy))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.ReportedBy, new { maxlength = "40", autocomplete = "Off", data_field = "userId" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.ReportedBy, new { maxlength = "40", autocomplete = "Off", @readonly = true, data_field = "userId" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name, CaseSolutionFields.IsAbout_PersonsName)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name, "Anmälare")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name, CaseSolutionFields.IsAbout_PersonsName))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Name, new { maxlength = "50" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Name, new { maxlength = "50", @readonly = "readonly" })
                                                }

                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail, CaseSolutionFields.IsAbout_PersonsEmail)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail, "E-post")
                                            </td>
                                            <td class="span4">
                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail, CaseSolutionFields.IsAbout_PersonsEmail))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Email, new { maxlength = "100", @readonly = "readonly" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Email, new { maxlength = "100" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone, CaseSolutionFields.IsAbout_PersonsPhone)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone, "Telefon")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone, CaseSolutionFields.IsAbout_PersonsPhone))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Phone, new { maxlength = "40" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Phone, new { maxlength = "40", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone, CaseSolutionFields.IsAbout_PersonsCellPhone)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone, "Mobil")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone, CaseSolutionFields.IsAbout_PersonsCellPhone))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Cellphone, new { maxlength = "30" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Person_Cellphone, new { maxlength = "30", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Region_Id, CaseSolutionFields.IsAbout_Region_Id)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Region_Id, "Område")
                                            </td>
                                            <td class="span4">
                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Region_Id, CaseSolutionFields.IsAbout_Region_Id))
                                                {
                                                    if (Model.case_.IsAbout != null)
                                                    {
                                                        var curRegion = Model.regions.Where(r => r.Id == Model.case_.IsAbout.Region_Id).SingleOrDefault();
                                                        @Html.TextBoxFor(m => curRegion.Name, new { id = "IsAboutRegionName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.IsAbout.Region_Id)
                                                    }

                                                }
                                                else
                                                {
                                                    <select id="case__IsAbout_Region_Id" name="case_.IsAbout.Region_Id" data-field="region">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.regions != null)
                                                        {
                                                            var selected_Region = string.Empty;
                                                            if (Model.case_.IsAbout != null && Model.case_.IsAbout.Region_Id.HasValue)
                                                            {
                                                                selected_Region = Model.case_.IsAbout.Region_Id.ToString();

                                                                foreach (var e in Model.regions.Where(e => e.IsActive == 1 || Model.case_.IsAbout.Region_Id == e.Id))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(selected_Region)>@e.Name</option>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (var e in Model.regions.Where(e => e.IsActive == 1))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(selected_Region)>@e.Name</option>
                                                                }
                                                            }
                                                        }
                                                    </select>
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Department_Id, CaseSolutionFields.IsAbout_Department_Id)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Department_Id, "Avdelning")
                                            </td>
                                            <td class="span4">

                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Department_Id, CaseSolutionFields.IsAbout_Department_Id))
                                                {
                                                    if (Model.case_.IsAbout != null)
                                                    {
                                                        var curDep = Model.departments.Where(d => d.Id == Model.case_.IsAbout.Department_Id).SingleOrDefault();
                                                        @Html.TextBoxFor(m => curDep.DepartmentName, new { id = "IsAboutDepartmentName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.IsAbout.Department_Id, new { @class = "departments-list" })
                                                    }
                                                }
                                                else
                                                {
                                                    <select id="case__IsAbout_Department_Id" class="departments-list" name="case_.IsAbout.Department_Id" data-field="department">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.departments != null)
                                                        {
                                                            var selected_Department = string.Empty;
                                                            if (Model.case_.IsAbout != null && Model.case_.IsAbout.Department_Id.HasValue)
                                                            {
                                                                selected_Department = Model.case_.IsAbout.Department_Id.ToString();

                                                                foreach (var e in Model.departments.Where(e => e.IsActive == 1 || Model.case_.IsAbout.Department_Id == e.Id).Where(e => Model.case_.IsAbout.Region_Id == e.Region_Id || !Model.case_.IsAbout.Region_Id.ToBool()))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(selected_Department)>@e.DepartmentDescription(Model.DepartmentFilterFormat)</option>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (var e in Model.departments.Where(e => e.IsActive == 1))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(selected_Department)>@e.DepartmentDescription(Model.DepartmentFilterFormat)</option>
                                                                }
                                                            }
                                                        }
                                                    </select>
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_OU_Id, CaseSolutionFields.IsAbout_OU_Id)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_OU_Id, "Enhet")
                                            </td>
                                            <td class="span4">
                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_OU_Id, CaseSolutionFields.IsAbout_OU_Id))
                                                {
                                                    if (Model.case_.IsAbout != null)
                                                    {
                                                        @Html.TextBox("IsAboutOUName", Model.isaboutous.Where(w => w.Id == Model.case_.IsAbout.OU_Id).Select(o => o.Name).SingleOrDefault(), new { id = "IsAboutOuName", @readonly = true })
                                                        @Html.HiddenFor(m => Model.case_.IsAbout.OU_Id, new { id = "case__IsAbout_Ou_Id", name = "case_.IsAbout.OU_Id" })
                                                    }
                                                }
                                                else
                                                {
                                                    <select id="case__IsAbout_Ou_Id" name="case_.IsAbout.OU_Id" data-field="ou">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.isaboutous != null)
                                                        {
                                                            var selected_OU = string.Empty;
                                                            if (Model.case_.IsAbout != null && Model.case_.IsAbout.OU_Id.HasValue)
                                                            {
                                                                selected_OU = Model.case_.IsAbout.OU_Id.ToString();
                                                            }

                                                            foreach (var ou in Model.isaboutous)
                                                            {
                                                                <option value="@ou.Id" @ou.Id.IdIsSelected(selected_OU)>@ou.Name</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_CostCentre, CaseSolutionFields.IsAbout_CostCentre)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_CostCentre, "Kostnadsställe")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_CostCentre, CaseSolutionFields.IsAbout_CostCentre))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.CostCentre, new { maxlength = "50" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.CostCentre, new { maxlength = "50", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_Place, CaseSolutionFields.IsAbout_Place)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_Place, "Placering")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_Place, CaseSolutionFields.IsAbout_Place))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Place, new { maxlength = "100" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.Place, new { maxlength = "100", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.IsAbout_UserCode, CaseSolutionFields.IsAbout_UserCode)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.IsAbout_UserCode, "Ansvarskod")
                                            </td>
                                            <td class="span4">

                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.IsAbout_UserCode, CaseSolutionFields.IsAbout_UserCode))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.UserCode, new { maxlength = "50" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.IsAbout.UserCode, new { maxlength = "50", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">
                                                <div id="extendedSection-Regarding" style="display:none">
                                                    <!--<h4>
                                            <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                            <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                            Vendor details <!-- TODO: Bind on category name and translation
                                        </h4>-->

                                                    <input type="hidden" id="ExtendedRegardingGUID" name="ExtendedRegardingGUID" value="@(Model.ExtendedCaseSections.ContainsKey(CaseSectionType.Regarding) ? Model.ExtendedCaseSections[CaseSectionType.Regarding].ExtendedCaseGuid.ToString() : "")" />
                                                    <iframe id="extendedSection-iframe-Regarding" src="" style="width:500px; height:180px; margin-top:10px" frameborder="0" scrolling="no"></iframe>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div style="@Model.displayComputerInfoHtml()" class="section-block @Model.getSectionClass(CaseSectionType.ComputerInfo)">
                            <h4>
                                <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                @Model.getSectionHeader(CaseSectionType.ComputerInfo, CaseSections.ComputerInfoHeader) @Model.getSectionHeaderFields(CaseSectionType.ComputerInfo)
                            </h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableform">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.InventoryNumber, CaseSolutionFields.InventoryNumber)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.InventoryNumber, "PC Nummer")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.InventoryNumber, CaseSolutionFields.InventoryNumber))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryNumber, new { maxlength = "60", autocomplete = "Off" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryNumber, new { maxlength = "60", @readonly = "readonly" })
                                                }
                                            </td>
                                            <td>
                                                @if (Model.CustomerSettings.ModuleInventory)
                                                {
                                                    <a id="ShowInventoryBtn" title="@Translation.GetCoreTextTranslation("Visa inventarie")" class="btn show-inventory @(Model.UserHasInventoryViewPermission ? "" : "disabled")"
                                                       style='@(!string.IsNullOrEmpty(Model.case_.InventoryNumber) ? string.Empty : "display: none")'>
                                                        <i class="icon-th-large"></i>
                                                    </a>
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ComputerType_Id, CaseSolutionFields.InventoryType)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ComputerType_Id, "Datortyp beskrivning")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.ComputerType_Id, CaseSolutionFields.InventoryType))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryType, new { maxlength = "50" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryType, new { maxlength = "50", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.InventoryLocation, CaseSolutionFields.InventoryLocation)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.InventoryLocation, "Placering")
                                            </td>
                                            <td class="span4">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.InventoryLocation, CaseSolutionFields.InventoryLocation))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryLocation, new { maxlength = "100" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InventoryLocation, new { maxlength = "100", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div style="@Model.displayCaseInfoHtml()" class="section-block @Model.getSectionClass(CaseSectionType.CaseInfo)">
                            <h4>
                                <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                @Model.getSectionHeader(CaseSectionType.CaseInfo, CaseSections.CaseInfoHeader) @Model.getSectionHeaderFields(CaseSectionType.CaseInfo)
                            </h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableform">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        @if (Model.case_.Id != 0)
                                        {
                                            <tr class="displaytr" style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CaseNumber.ToString())">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.CaseNumber, "Ärende")
                                                </td>
                                                <td>
                                                    @Model.case_.CaseNumber
                                                </td>
                                                <td></td>
                                            </tr>
                                            <tr style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.RegTime.ToString())">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.RegTime, "Registreringsdatum")
                                                </td>
                                                <td colspan="2">
                                                    @Html.DisplayFor(m => m.RegTime, "DateAndTime")
                                                </td>
                                            </tr>
                                            <tr style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ChangeTime.ToString())">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ChangeTime, "Ändringsdatum")
                                                </td>
                                                <td colspan="2">
                                                    @Html.DisplayFor(m => m.ChangeTime)
                                                </td>
                                            </tr>
                                            <tr style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.User_Id.ToString())">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.User_Id, "Registrerad av")
                                                </td>
                                                <td>
                                                    @if (Model.RegByUser != null)
                                                    {
                                                        <span>@Model.RegByUser.FirstName @Model.RegByUser.SurName</span>
                                                        if (Model.CaseOwnerDefaultWorkingGroup != null)
                                                        {
                                                            <span>&nbsp;-&nbsp;@Model.CaseOwnerDefaultWorkingGroup.WorkingGroupName</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Model.case_.RegUserName))
                                                        {
                                                            <span>&nbsp;(@Model.case_.RegUserName)</span>
                                                        }

                                                        if (!string.IsNullOrEmpty(Model.case_.RegUserId))
                                                        {
                                                            <span>&nbsp;(@Model.case_.RegUserId)</span>
                                                        }
                                                    }
                                                    <span>&nbsp;(@Model.case_.IpAddress)</span>
                                                </td>
                                                <td></td>
                                            </tr>
                                        }
                                        @*                      "CustomerRegistrationSource" field               *@
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer, CaseSolutionFields.RegistrationSourceCustomer)">
                                            <td class="span3">
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer, "Källa")
                                            </td>
                                            <td class="span4">
                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer, CaseSolutionFields.RegistrationSourceCustomer))
                                                {
                                                    @Html.TextBoxFor(m => m.SelectedCustomerRegistrationSource, new { disabled = true })
                                                    @Html.HiddenFor(model => model.CustomerRegistrationSourceId)
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(m => m.CustomerRegistrationSourceId, Model.CustomerRegistrationSources)
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.CaseType_Id, CaseSolutionFields.CaseType)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.CaseType_Id, "Ärendetyp")
                                            </td>
                                            <td colspan="2">
                                                <div id="divCaseType" class="btn-group">
                                                    @{
                                                        string disabledCaseType = Model.GetDisabledString(GlobalEnums.TranslationCaseFields.CaseType_Id, CaseSolutionFields.CaseType);
                                                    }
                                                    <div class="btn @disabledCaseType" id="divBreadcrumbs_CaseType">@Model.ParantPath_CaseType</div>
                                                    <button class="btn dropdown-toggle" data-toggle="dropdown" @disabledCaseType>
                                                        <span class="caret"></span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a href="#">@Translation.GetCoreTextTranslation("--")</a></li>
                                                        @Html.CaseTypeDropdownButtonString(Model.caseTypes)
                                                    </ul>

                                                    <input type="hidden" id="case__CaseType_Id" name="case_.CaseType_Id" value="@Model.case_.CaseType_Id.supressZero()" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ProductArea_Id, CaseSolutionFields.ProductArea)">
                                            <td>
                                                <span id="ProductAreaFieldCaption"> @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ProductArea_Id, "Produktområde") </span>
                                            </td>
                                            <td colspan="2">
                                                <div id="divProductArea" class="btn-group dropdown-menu-parent">
                                                    @{
                                                        string disabledProductArea = Model.GetDisabledString(GlobalEnums.TranslationCaseFields.ProductArea_Id, CaseSolutionFields.ProductArea);
                                                    }
                                                    <div class="btn @disabledProductArea" id="divBreadcrumbs_ProductArea">@Model.ParantPath_ProductArea</div>
                                                    <button class="btn dropdown-toggle" data-toggle="dropdown" @disabledProductArea id="dropDownBtn">
                                                        <span class="caret"></span>
                                                    </button>
                                                    <ul class="dropdown-menu subddMenu parentddMenu" style="z-index:99999999999;">
                                                        <li><a href="#">@Translation.GetCoreTextTranslation("--")</a></li>
                                                        @Html.ProductAreaDropdownButtonString(Model.productAreas, true, Model.case_.ProductArea_Id)
                                                    </ul>
                                                    @Html.HiddenFor(model => model.case_.ProductArea_Id, new { @class = "product-area-id" })
                                                </div>
                                                @if (Model.CustomerSettings.ModuleCaseInvoice && Model.InvoiceModel != null)
                                                {
                                                    if (Model.UserHasInvoicePermission)
                                                    {
                                                        @Scripts.Render("~/bundles/invoices")
                                                        @Html.Partial("_Invoice", Model.InvoiceModel)

                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.System_Id, CaseSolutionFields.System)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.System_Id, "System")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.System_Id, CaseSolutionFields.System))
                                                {
                                                    <select id="case__System_Id" name="case_.System_Id" class="system">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.systems != null)
                                                        {
                                                            foreach (var e in Model.systems.Where(e => e.Status == 1 || Model.case_.System_Id == e.Id))
                                                            {
                                                                <option value="@e.Id" class="@(e.Status != 1 ? "inactive" : string.Empty)" @e.Id.IdIsSelected(Model.case_.System_Id.ToString())>@e.SystemName</option>

                                                            }
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (!Model.case_.System_Id.HasValue)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.System_Id, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.systems.SingleOrDefault(x => x.Id == Model.case_.System_Id).SystemName, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.System_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Urgency_Id, CaseSolutionFields.Urgency)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Urgency_Id, "Brådskandegrad")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Urgency_Id, CaseSolutionFields.Urgency))
                                                {
                                                    <select id="case__Urgency_Id" name="case_.Urgency_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.urgencies != null)
                                                        {
                                                            foreach (var e in Model.urgencies)
                                                            {
                                                                <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Urgency_Id.ToString())>@e.Name</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (!Model.case_.Urgency_Id.HasValue)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.Urgency_Id, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.urgencies.SingleOrDefault(x => x.Id == Model.case_.Urgency_Id).Name, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.Urgency_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Impact_Id, CaseSolutionFields.Impact)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Impact_Id, "Påverkan")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Impact_Id, CaseSolutionFields.Impact))
                                                {
                                                    <select id="case__Impact_Id" name="case_.Impact_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.impacts != null)
                                                        {
                                                            foreach (var e in Model.impacts)
                                                            {
                                                                <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Impact_Id.ToString())>@e.Name</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (!Model.case_.Impact_Id.HasValue)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.Impact_Id, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.impacts.SingleOrDefault(x => x.Id == Model.case_.Impact_Id).Name, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.Impact_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>

                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Category_Id, CaseSolutionFields.Category)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Category_Id, "Kategori")
                                            </td>
                                            <td colspan="2">
                                                <div id="divCategory" class="btn-group DynamicDropDown">
                                                    @{
                                                        string disabledCategory = Model.GetDisabledString(GlobalEnums.TranslationCaseFields.Category_Id, CaseSolutionFields.Category);
                                                    }
                                                    <div class="btn @disabledCategory" id="divBreadcrumbs_Category">@Model.ParantPath_Category</div>
                                                    <button class="btn dropdown-toggle" data-toggle="dropdown" @disabledCategory id="dropDownBtn">
                                                        <span class="caret"></span>
                                                    </button>
                                                    <ul class="dropdown-menu" style="z-index:99999999999;">
                                                        <li><a href="#">@Translation.GetCoreTextTranslation("--")</a></li>
                                                        @Html.CategoryDropdownButtonString(Model.categories)
                                                    </ul>
                                                    @Html.HiddenFor(model => model.case_.Category_Id)
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Supplier_Id, CaseSolutionFields.Supplier)">
                                            <td>
                                                @if (Model.countries != null)
                                                {
                                                    @Translation.GetCoreTextTranslation("Land")<span>/</span>
                                                }
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Supplier_Id, "Leverantör")
                                            </td>
                                            @if (Model.countries != null)
                                            {
                                                <td>
                                                    <select id="CountryId" name="CountryId" @(Model.EditMode == AccessMode.ReadOnly ? "disabled=true" : string.Empty)>
                                                        <option value="">&nbsp;</option>
                                                        @foreach (var e in Model.countries.Where(e => e.IsActive == 1 || Model.CountryId == e.Id))
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.CountryId.ToString())>@e.Name</option>
                                                        }
                                                    </select>
                                                </td>
                                            }
                                            <td style="float: left;">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Supplier_Id, CaseSolutionFields.Supplier))
                                                {
                                                    <select id="case__Supplier_Id" name="case_.Supplier_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.suppliers != null)
                                                        {
                                                            if (Model.CountryId != null)
                                                            {
                                                                if (Model.CountryId > 0)
                                                                {
                                                                    foreach (var e in Model.suppliers.Where(e => e.IsActive == 1 || Model.case_.Supplier_Id == e.Id).Where(e => Model.CountryId.ToBool() && (e.Country_Id == Model.CountryId && e.Country_Id.HasValue)))
                                                                    {
                                                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Supplier_Id.ToString())>@e.Name</option>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    foreach (var e in Model.suppliers.Where(e => e.IsActive == 1 || Model.case_.Supplier_Id == e.Id))
                                                                    {
                                                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Supplier_Id.ToString())>@e.Name</option>
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                foreach (var e in Model.suppliers.Where(e => e.IsActive == 1 || Model.case_.Supplier_Id == e.Id))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Supplier_Id.ToString())>@e.Name</option>
                                                                }
                                                            }
                                                        }

                                                    </select>
                                                }
                                                else
                                                {
                                                    if (!Model.case_.Supplier_Id.HasValue)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.Supplier_Id, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.suppliers.SingleOrDefault(x => x.Id == Model.case_.Supplier_Id).Name, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.Supplier_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.InvoiceNumber, CaseSolutionFields.InvoiceNumber)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.InvoiceNumber, "Fakturanummer")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.InvoiceNumber, CaseSolutionFields.InvoiceNumber))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InvoiceNumber, new { maxlength = "50" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.InvoiceNumber, new { maxlength = "50", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ReferenceNumber, CaseSolutionFields.ReferenceNumber)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ReferenceNumber, "Referensnummer")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.ReferenceNumber, CaseSolutionFields.ReferenceNumber))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.ReferenceNumber, new { maxlength = "200" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.ReferenceNumber, new { maxlength = "200", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Caption, CaseSolutionFields.Caption)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Caption, "Rubrik")
                                            </td>
                                            <td colspan="2">
                                                @if ((Model.customerUserSetting.CaptionPermission == 1 && !Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Caption, CaseSolutionFields.Caption)))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.Caption, new { maxlength = "100", @class = "width90" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.Caption, new { maxlength = "100", @readonly = "readonly", @class = "width90" })
                                                }
                                            </td>
                                        </tr>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Description, CaseSolutionFields.Description)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Description, "Beskrivning")
                                                @if (Model.case_.RegistrationSource == 3)
                                                {
                                                    var countTO = 0;
                                                    var countCC = 0;
                                                    var mailTO = "";
                                                    var mailCC = "";
                                                    var boldTO = false;
                                                    var boldCC = false;
                                                    if (Model.case_.Mail2Tickets.Any())
                                                    {
                                                        foreach (var mail in Model.case_.Mail2Tickets)
                                                        {
                                                            if (mail.Log_Id == null)
                                                            {
                                                                if (mail.Type == "to")
                                                                {
                                                                    countTO = countTO + 1;
                                                                    mailTO = mailTO + mail.EMailAddress + "; ";

                                                                    if (mail.EMailAddress == Model.case_.Customer.HelpdeskEmail)
                                                                    {
                                                                        boldTO = true;
                                                                    }
                                                                }

                                                                if (mail.Type == "cc")
                                                                {
                                                                    countCC = countCC + 1;
                                                                    mailCC = mailCC + mail.EMailAddress + "; ";

                                                                    if (mail.EMailAddress == Model.case_.Customer.HelpdeskEmail)
                                                                    {
                                                                        boldCC = true;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    <div>
                                                        <table>
                                                            <tr>
                                                                <input type="hidden" id="lastMailSelected" value="">
                                                                @if (boldTO == true)
                                                                {

                                                                    <td>
                                                                        <b>TO[@countTO]</b>&nbsp;&nbsp;&nbsp;<span class="icon-info-sign ml15 expander" rel="tooltip" title="" data-original-title="@mailTO" data-expand-element="mailto"></span>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        TO[@countTO]&nbsp;&nbsp;&nbsp;<span class="icon-info-sign ml15 expander" rel="tooltip" title="" data-original-title="@mailTO" data-expand-element="mailto"></span>
                                                                    </td>
                                                                }
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <span id="mailto" class="" style="display:none">@mailTO</span>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                @if (boldCC == true)
                                                                {
                                                                    <td>
                                                                        <b>CC[@countCC]</b>&nbsp;&nbsp;&nbsp;<span class="icon-info-sign ml15 expander" rel="tooltip" title="" data-original-title="@mailCC" data-expand-element="mailcc"></span>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        CC[@countCC]&nbsp;&nbsp;&nbsp;<span class="icon-info-sign ml15 expander" rel="tooltip" title="" data-original-title="@mailCC" data-expand-element="mailcc"></span>
                                                                    </td>
                                                                }
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <span id="mailcc" class="" style="display:none">@mailCC</span>
                                                                </td>
                                                            </tr>
                                                        </table>

                                                    </div>
                                                }
                                            </td>
                                            <td colspan="3">

                                                @{
                                                    var descriptionSize = Model.caseFieldSettings.getFieldSize(GlobalEnums.TranslationCaseFields.Description.ToString());
                                                    if (descriptionSize == 0)
                                                    {
                                                        descriptionSize = 5;
                                                    }
                                                }

                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Description, CaseSolutionFields.Description))
                                                {
                                                    @Html.TextAreaFor(model => model.case_.Description, new { rows = descriptionSize, @class = "case-description width90" })
                                                }
                                                else
                                                {
                                                    @Html.TextAreaFor(model => model.case_.Description, new { rows = descriptionSize, @class = "case-description width90", @readonly = true })
                                                }
                                                <span id="caseDescriptionPreview"
                                                      rel="tooltip"
                                                      class="icon-circle-arrow-up cursor-pointer"
                                                      title="@Translation.GetCoreTextTranslation("Förhandsgranska")"
                                                      style="@(string.IsNullOrEmpty(Model.case_.Description) ? "visibility: hidden" : "")"></span>

                                            </td>


                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Miscellaneous, CaseSolutionFields.Miscellaneous)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Miscellaneous, "Övrigt")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Miscellaneous, CaseSolutionFields.Miscellaneous))
                                                {
                                                    @Html.TextAreaFor(model => model.case_.Miscellaneous, new { maxlength = "1000" })
                                                }
                                                else
                                                {
                                                    @Html.TextAreaFor(model => model.case_.Miscellaneous, new { maxlength = "1000", @readonly = true })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ContactBeforeAction, CaseSolutionFields.ContactBeforeAction)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ContactBeforeAction, "Telefonkontakt")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.ContactBeforeAction, CaseSolutionFields.ContactBeforeAction))
                                                {
                                                    if (Model.customerUserSetting.ContactBeforeActionPermission == 1 || Model.case_.Id == 0)
                                                    {
                                                        <input type="checkbox" name="case_.ContactBeforeAction" @(Model.case_.ContactBeforeAction == 1 ? "checked=checked" : "") value="1" />
                                                        <input type="hidden" name="case_.ContactBeforeAction" value="0" />
                                                    }
                                                    else
                                                    {
                                                        @Model.case_.ContactBeforeAction.IntToYES_NO()
                                                        @Html.HiddenFor(model => model.case_.ContactBeforeAction)
                                                    }
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="case_.ContactBeforeAction" @(Model.case_.ContactBeforeAction == 1 ? "checked=checked" : "") value="1" class="switchcheckbox" disabled="disabled" />
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.SMS, CaseSolutionFields.SMS)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.SMS, "SMS")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.SMS, CaseSolutionFields.SMS))
                                                {
                                                    <input type="checkbox" id="case__SMS" name="case_.SMS" @(Model.case_.SMS == 1 ? "checked=checked" : "") value="1" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" id="case__SMS" name="case_.SMS" @(Model.case_.SMS == 1 ? "checked=checked" : "") value="1" disabled="disabled" />
                                                }
                                                <input type="hidden" name="case_.SMS" value="0" />
                                                <span class="lbl">@Translation.GetCoreTextTranslation("Skicka SMS när ärendet avslutas").</span>
                                            </td>
                                        </tr>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.AgreedDate, CaseSolutionFields.AgreedDate)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.AgreedDate, "Överenskommet datum")
                                            </td>
                                            <td colspan="2">
                                                @if (Model.IsReadOnly(GlobalEnums.TranslationCaseFields.AgreedDate, CaseSolutionFields.AgreedDate))
                                                {
                                                    @Html.EditorFor(m => m.case_.AgreedDate, "DateReadOnly", new { id = "divCase__AgreedDate", @class = "readonlyAgreedDate" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(m => m.case_.AgreedDate, "DatePicker", new { id = "divCase__AgreedDate" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Available, CaseSolutionFields.Available)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Available, "Anträffbar")
                                            </td>
                                            <td colspan="2">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Available, CaseSolutionFields.Available))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.Available, new { maxlength = "100" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.Available, new { maxlength = "100", @readonly = "readonly" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Cost, CaseSolutionFields.Cost)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Cost, "Kostnad")
                                            </td>
                                            <td colspan="2">
                                                <table>
                                                    <tr>
                                                        @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Cost, CaseSolutionFields.Cost))
                                                        {
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Artikelkostnad")<br />
                                                                @Html.TextBoxFor(model => model.case_.Cost, new { maxlength = "7", Class = "inputw50 cost-field" })
                                                            </td>
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Övrig kostnad")<br />
                                                                @Html.TextBoxFor(model => model.case_.OtherCost, new { maxlength = "7", Class = "inputw50 cost-field" })
                                                            </td>
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Valuta")<br />
                                                                <select id="case__Currency" name="case_.Currency" class="inputw100 cost-field">
                                                                    <option value="">&nbsp;</option>
                                                                    @if (Model.currencies != null)
                                                                    {
                                                                        foreach (var e in Model.currencies)
                                                                        {
                                                                            <option value="@e.Code" @e.Code.ValueIsSelected(Model.case_.Currency)>@e.Code</option>
                                                                        }
                                                                    }
                                                                </select>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Artikelkostnad")<br />
                                                                @Html.TextBoxFor(model => model.case_.Cost, new { maxlength = "7", Class = "inputw50 cost-field", @readonly = true })
                                                            </td>
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Övrig kostnad")<br />
                                                                @Html.TextBoxFor(model => model.case_.OtherCost, new { maxlength = "7", Class = "inputw50 cost-field", @readonly = true })
                                                            </td>
                                                            <td>
                                                                @Translation.GetCoreTextTranslation("Valuta")<br />
                                                                @Html.TextBoxFor(m => m.case_.Currency, new { @readonly = true, Class = "inputw50 cost-field" })
                                                                @Html.HiddenFor(x => x.case_.Currency)
                                                            </td>
                                                        }
                                                    </tr>
                                                    <tr>
                                                        <td id="costValidationMessage" colspan="3"></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>


                                        @if (Model.Setting.AttachmentPlacement == 0)
                                        {
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Filename, CaseSolutionFields.FileName)">
                                                @*<tr class="displaytr" style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Filename.ToString())">*@
                                                <td>@CaseFieldCaption(GlobalEnums.TranslationCaseFields.Filename, "Bifogad fil")</td>
                                                <td colspan="2">
                                                    @if (Model.EditMode == AccessMode.FullAccess)
                                                    {
                                                        <a id="btnAddCaseFile" href="#upload_files_popup" role="button" class="btn" data-toggle="modal">@Translation.GetCoreTextTranslation("Lägg till")</a>
                                                        <a href="#upload_clipboard_file_popup" role="button" class="btn uploadCaseFileFromClipboardBtn" data-src="case">@Translation.GetCoreTextTranslation("Lägg till från Urklipp")</a>
                                                    }
                                                    <div id="divCaseFiles">
                                                        @Html.Partial("_CaseFiles", Model.CaseFilesModel, new ViewDataDictionary(ViewData) { { "CaseInactive", Model.case_.FinishingDate.HasValue } })
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr class="displaytr">
                                                <td colspan="3" class="span3"></td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>
                        </div>

                        @if (Model.DynamicCase != null)
                        {
                            if (Model.DynamicCase.ViewMode == 2)
                            {
                                <div>
                                    <h4>
                                        @Model.getSectionHeader(CaseSectionType.ExtendedCase, CaseSections.ExtendedCaseHeader)
                                    </h4>
                                    <div class="span12">
                                        <div id="dh-form-on-case-area">

                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            }
                        }

                        <div style="@Model.displayCaseManagementInfoHtml()" class="section-block @Model.getSectionClass(CaseSectionType.CaseManagement)">
                            <h4>
                                <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                @Model.getSectionHeader(CaseSectionType.CaseManagement, CaseSections.CaseManagementHeader) @Model.getSectionHeaderFields(CaseSectionType.CaseManagement)
                            </h4>
                            <div class="row">
                                <div class="span12">
                                    <table class="tableform">
                                        <thead>
                                            <tr>
                                                <th class="span3"></th>
                                                <th class="span4"></th>
                                                <th class="span5"></th>
                                            </tr>
                                        </thead>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.WorkingGroup_Id, CaseSolutionFields.WorkingGroup)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.WorkingGroup_Id, "Driftgrupp")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.WorkingGroup_Id, CaseSolutionFields.WorkingGroup))
                                                {
                                                    <select id="case__WorkingGroup_Id" name="case_.WorkingGroup_Id" data-field="workingGroup" class="working-group">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.workingGroups != null)
                                                        {

                                                            foreach (var e in Model.workingGroups.Where(e => e.IsActive == 1 || Model.case_.WorkingGroup_Id == e.Id))
                                                            {
                                                                <option value="@e.Id" class="@(e.IsActive != 1 ? "inactive" : string.Empty)" @e.Id.IdIsSelected(Model.case_.WorkingGroup_Id.ToString())>@e.WorkingGroupName</option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (!Model.case_.WorkingGroup_Id.HasValue)
                                                    {
                                                        <input type="text" value="" readonly="readonly" id="workingGroup_Name" />
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.workingGroups.SingleOrDefault(x => x.Id == Model.case_.WorkingGroup_Id).WorkingGroupName, new { @readonly = true, id = "workingGroup_Name" })
                                                    }

                                                    @Html.HiddenFor(m => m.case_.WorkingGroup_Id)
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.caseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CaseResponsibleUser_Id.ToString())">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.CaseResponsibleUser_Id, "Ansvarig")
                                            </td>
                                            <td>
                                                @if (Model.EditMode != AccessMode.ReadOnly)
                                                {
                                                    @Html.DropDownListFor(m => m.ResponsibleUser_Id, Model.ResponsibleUsersAvailable)
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(m => m.ResponsibleUser_Id, Model.ResponsibleUsersAvailable, new { disabled = "disabled" })
                                                }
                                            </td>
                                        </tr>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Performer_User_Id, CaseSolutionFields.Administrator)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Performer_User_Id, "Handläggare")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Performer_User_Id, CaseSolutionFields.Administrator))
                                                {
                                                    @Html.DropDownListFor(m => m.Performer_Id, Model.Performers, new { data_field = "administrator" })
                                                }
                                                else
                                                {
                                                    @Html.DropDownListFor(m => m.Performer_Id, Model.Performers, new { data_field = "administrator", disabled = "disabled" })
                                                    @Html.HiddenFor(m => m.Performer_Id)
                                                }
                                            </td>

                                            @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Performer_User_Id, CaseSolutionFields.Administrator))
                                            {

                                                <td valign="bottom">
                                                    <div style="position:relative;">
                                                        <a href="#" id="performerSearch" data-field="administrator" style="" title="" class="btn"><i class="icon-search"></i></a>
                                                        <span id="performersWithWg" style="display: none;position:absolute; left:45px; bottom:-2px;">
                                                            <select id="administratorSearchWithWg" data-field="administrator" class="chosen-select">
                                                                <option value="">&nbsp;</option>
                                                                @foreach (var e in Model.PerformersToSearch)
                                                                {
                                                                    var option = e.FirstName + " " + e.LastName + " - " + e.WorkingGroupName;
                                                                    <option value="@e.UserId,@e.WorkingGroupId">@option</option>
                                                                }
                                                            </select>
                                                        </span>
                                                    </div>
                                                </td>

                                            }
                                            else
                                            {
                                                <td>
                                                    <a href="#" id="performerSearch" data-field="administrator" style="" title="" class="btn disabled"><i class="icon-search"></i></a>
                                                </td>
                                            }
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Priority_Id, CaseSolutionFields.Priority)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Priority_Id, "Prioritet")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Priority_Id, CaseSolutionFields.Priority))
                                                {
                                                    <select id="case__Priority_Id" @Model.case_.Id.HtmlReadOnlyFlag(Model.customerUserSetting.PriorityPermission) name="case_.Priority_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.priorities != null)
                                                        {
                                                            foreach (var e in Model.priorities.Where(e => e.IsActive == 1 || Model.case_.Priority_Id == e.Id))
                                                            {
                                                                <option value="@e.Id" data-sla="@e.SolutionTime" @e.Id.IdIsSelected(Model.case_.Priority_Id.ToString())>@Translation.GetMasterDataTranslation(e.Name)</option>
                                                            }
                                                        }
                                                    </select>
                                                    if (Model.customerUserSetting.PriorityPermission == 0)
                                                    {
                                                        var priority = Model.case_.Priority_Id.HasValue ? Model.priorities.SingleOrDefault(x => x.Id == Model.case_.Priority_Id) : null;
                                                        if (priority == null)
                                                        {
                                                            @Html.HiddenFor(m => m.case_.Priority_Id, new { @class = "sla-value", data_sla = "" })
                                                        }
                                                        else
                                                        {
                                                            @Html.HiddenFor(x => x.case_.Priority_Id, new { @class = "sla-value", data_sla = priority.SolutionTime })
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    var priority = Model.case_.Priority_Id.HasValue ? Model.priorities.SingleOrDefault(x => x.Id == Model.case_.Priority_Id) : null;
                                                    if (priority == null)
                                                    {
                                                        <input type="text" value="" readonly="readonly" id="priority_Name" />
                                                        @Html.HiddenFor(m => Model.case_.Priority_Id, new { @class = "sla-value", data_sla = "" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => priority.Name, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.Priority_Id, new { @class = "sla-value", data_sla = priority.SolutionTime })
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Status_Id, CaseSolutionFields.Status)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Status_Id, "Status")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Status_Id, CaseSolutionFields.Status))
                                                {
                                                    <select id="case__Status_Id" name="case_.Status_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.statuses != null)
                                                        {
                                                            foreach (var e in Model.statuses.Where(e => e.IsActive == 1 || Model.case_.Status_Id == e.Id))
                                                            {
                                                                @*<option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Status_Id.ToString())>@e.Name</option>*@
                                                                <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Status_Id.ToString())>@Translation.GetMasterDataTranslation(e.Name)</option>
                                                            }
                                                        }
                                                    </select>

                                                }
                                                else
                                                {
                                                    if (!Model.case_.Status_Id.HasValue)
                                                    {
                                                        @Html.TextBox("statusName", "", new { @readonly = true, id = "statusName" })
                                                        @Html.HiddenFor(x => x.case_.Status_Id)
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.statuses.SingleOrDefault(x => x.Id == Model.case_.Status_Id).Name, new { @readonly = true, id = "statusName" })
                                                        @Html.HiddenFor(x => x.case_.Status_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.StateSecondary_Id, CaseSolutionFields.StateSecondary)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.StateSecondary_Id, "Understatus")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.StateSecondary_Id, CaseSolutionFields.StateSecondary))
                                                {
                                                    <select id="case__StateSecondary_Id" @Model.case_.Id.HtmlReadOnlyFlag(Model.customerUserSetting.StateSecondaryPermission) name="case_.StateSecondary_Id">
                                                        <option value="">&nbsp;</option>
                                                        @if (Model.stateSecondaries != null)
                                                        {
                                                            foreach (var e in Model.stateSecondaries.Where(e => e.IsActive == 1 || Model.case_.StateSecondary_Id == e.Id))
                                                            {
                                                                <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.StateSecondary_Id.ToString())>@Translation.GetMasterDataTranslation(e.Name)</option>
                                                            }
                                                        }
                                                    </select>
                                                    if (Model.customerUserSetting.StateSecondaryPermission == 0)
                                                    {
                                                        @Html.HiddenFor(x => x.case_.StateSecondary_Id, new { @class = "readonlySubstate" })
                                                    }
                                                }
                                                else
                                                {
                                                    if (!Model.case_.StateSecondary_Id.HasValue)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.StateSecondary_Id, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.stateSecondaries.SingleOrDefault(x => x.Id == Model.case_.StateSecondary_Id).Name, new { @readonly = true, id = "subStateName" })
                                                        @Html.HiddenFor(x => x.case_.StateSecondary_Id)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        @if (Model.CustomerSettings.ModuleProject == true)
                                        {
                                            if (Model.projects.Any())
                                            {
                                                <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Project, CaseSolutionFields.Project)">
                                                    <td>
                                                        @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Project, "Project")
                                                    </td>
                                                    <td>
                                                        @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Project, CaseSolutionFields.Project))
                                                        {
                                                            <select id="case__Project_Id" name="case_.Project_Id">
                                                                <option value="">&nbsp;</option>
                                                                @if (Model.projects != null)
                                                                {
                                                                    foreach (var e in Model.projects.Where(e => e.IsActive == 1 || Model.case_.Project_Id == e.Id))
                                                                    {
                                                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Project_Id.ToString())>@e.Name</option>
                                                                    }
                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            if (!Model.case_.Project_Id.HasValue)
                                                            {
                                                                @Html.TextBoxFor(m => m.case_.Project_Id, new { @readonly = true })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(m => m.projects.SingleOrDefault(x => x.Id == Model.case_.Project_Id).Name, new { @readonly = true })
                                                                @Html.HiddenFor(x => x.case_.Project_Id)
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        @if (Model.CustomerSettings.ModuleProblem == true)
                                        {
                                            if (Model.problems.Any())
                                            {
                                                <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Problem, CaseSolutionFields.Problem)">
                                                    <td>
                                                        @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Problem, "Problem")
                                                    </td>
                                                    <td>
                                                        @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Problem, CaseSolutionFields.Problem))
                                                        {
                                                            <select id="case__Problem_Id" name="case_.Problem_Id">
                                                                <option value="">&nbsp;</option>
                                                                @foreach (var e in Model.problems.Where(e => e.FinishingDate == null || Model.case_.Problem_Id == e.Id))
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Problem_Id.ToString())>@e.Name @(string.IsNullOrWhiteSpace(e.ResponsibleUserName) ? "" : "(" + @e.ResponsibleUserName + ")") </option>
                                                                }
                                                            </select>
                                                            <div id="divProblemResponsible" style="display: none">
                                                                @Translation.GetCoreTextTranslation("Ansvarig")
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            if (!Model.case_.Problem_Id.HasValue)
                                                            {
                                                                @Html.TextBoxFor(m => m.case_.Problem_Id, new { @readonly = true })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(m => m.problems.SingleOrDefault(x => x.Id == Model.case_.Problem_Id).Name, new { @readonly = true })
                                                                @Html.HiddenFor(x => x.case_.Problem_Id)
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }

                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.CausingPart, CaseSolutionFields.CausingPart)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.CausingPart, "Rotorsak")
                                            </td>
                                            <td class="span1" style="float: left;">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.CausingPart, CaseSolutionFields.CausingPart))
                                                {
                                                    <select id="case__CausingPartId" name="case_.CausingPartId" class="chosen-single-select">
                                                        <option value=""> &nbsp; </option>
                                                        @if (Model.causingParts != null)
                                                        {
                                                            foreach (var causingPart in Model.causingParts)
                                                            {
                                                                <option value="@causingPart.Value" @(causingPart.Selected ? "Selected" : "")> @causingPart.Text </option>
                                                            }
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    @Html.HiddenFor(model => Model.case_.CausingPartId)
                                                    if (Model.causingParts.Any())
                                                    {
                                                        var causingpart = Model.case_.CausingPartId.HasValue ? Model.causingParts.SingleOrDefault(x => x.Value == Model.case_.CausingPartId.ToString()) : null;

                                                        if (causingpart == null)
                                                        {
                                                            var t = string.Empty;
                                                            @Html.TextBoxFor(m => t, new { @readonly = true })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBoxFor(m => causingpart.Text, new { @readonly = true })
                                                        }
                                                    }
                                                    else
                                                    {
                                                        var t = string.Empty;
                                                        @Html.TextBoxFor(m => t, new { @readonly = true })
                                                    }
                                                }
                                            </td>
                                        </tr>
                                        @if (Model.changes != null)
                                        {
                                            if (Model.changes.Any())
                                            {
                                                <tr class="displaytr" style="@Model.GetFieldStyle(CaseSolutionFields.Change)">
                                                    <td>
                                                        @Translation.GetCoreTextTranslation("Ändring")
                                                    </td>
                                                    <td>
                                                        @if (!Model.IsReadOnly(CaseSolutionFields.Change))
                                                        {
                                                            <select id="case__Change_Id" name="case_.Change_Id">
                                                                <option value="">&nbsp;</option>
                                                                @foreach (var e in Model.changes)
                                                                {
                                                                    <option value="@e.Id" @e.Id.IdIsSelected(Model.case_.Change_Id.ToString())>@e.ChangeTitle</option>
                                                                }
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            if (!Model.case_.Change_Id.HasValue)
                                                            {
                                                                @Html.TextBoxFor(m => m.case_.Change_Id, new { @readonly = true })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(m => m.changes.SingleOrDefault(x => x.Id == Model.case_.Change_Id).ChangeTitle, new { @readonly = true })
                                                                @Html.HiddenFor(x => x.case_.Change_Id)
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.PlanDate, CaseSolutionFields.PlanDate)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.PlanDate, "Planerad åtgärdsdatum")
                                            </td>
                                            <td>
                                                @*@Html.EditorFor(m => m.case_.PlanDate, "DatePicker", new { id = "divCase__PlanDate" })*@
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.PlanDate, CaseSolutionFields.PlanDate))
                                                {

                                                    @Html.EditorFor(m => m.case_.PlanDate, "DatePicker", new { id = "divCase__PlanDate" })

                                                }
                                                else
                                                {
                                                    @Html.EditorFor(m => m.case_.PlanDate, "DateReadOnly")
                                                }
                                            </td>
                                        </tr>
                                        <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.WatchDate, CaseSolutionFields.WatchDate)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.WatchDate, "Bevakningsdatum")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.WatchDate, CaseSolutionFields.WatchDate))
                                                {
                                                    if (Model.customerUserSetting.WatchDatePermission == 1 || Model.case_.Id == 0)
                                                    {
                                                        @Html.EditorFor(m => m.case_.WatchDate, "DatePicker", new { id = "divCase__WatchDate" })
                                                    }
                                                    else
                                                    {
                                                        @Html.EditorFor(m => m.case_.WatchDate, "DateReadOnly", new { id = "divCase__WatchDate", @class = "readonlyWatchdate" })
                                                    }

                                                }
                                                else
                                                {
                                                    @Html.EditorFor(m => m.case_.WatchDate, "DateReadOnly", new { id = "divCase__WatchDate", @class = "readonlyWatchdate" })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Verified, CaseSolutionFields.Verified)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.Verified, "Verifierad")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.Verified, CaseSolutionFields.Verified))
                                                {
                                                    <input type="checkbox" id="case__Verified" name="case_.Verified" @(Model.case_.Verified == 1 ? "checked=checked" : "") value="1" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" id="case__Verified" name="case_.Verified" @(Model.case_.Verified == 1 ? "checked=checked" : "") value="1" disabled="disabled" />
                                                }
                                                <input type="hidden" name="case_.Verified" value="0" />
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.VerifiedDescription, CaseSolutionFields.VerifiedDescription)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.VerifiedDescription, "Verifierad beskrivning")
                                            </td>
                                            <td title="@Model.case_.VerifiedDescription">
                                                @if (!Model.IsReadOnly(GlobalEnums.TranslationCaseFields.VerifiedDescription, CaseSolutionFields.VerifiedDescription))
                                                {
                                                    @Html.TextBoxFor(model => model.case_.VerifiedDescription, new { maxlength = "200" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.case_.VerifiedDescription, new { @readonly = true })
                                                }
                                            </td>
                                        </tr>
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.SolutionRate, CaseSolutionFields.SolutionRate)">
                                            <td>
                                                @CaseFieldCaption(GlobalEnums.TranslationCaseFields.SolutionRate, "Lösningsgrad")
                                            </td>
                                            <td>
                                                @if (!Model.IsReadOnly(CaseSolutionFields.SolutionRate))
                                                {
                                                    <select id="case__SolutionRate" name="case_.SolutionRate">
                                                        <option value="">&nbsp;</option>
                                                        @for (var i = 10; i < 110; i = i + 10)
                                                        {
                                                            <option value="@i.ToString()" @i.IdIsSelected(Model.case_.SolutionRate)>@i.ToString()</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (Model.case_.SolutionRate != null)
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.SolutionRate, new { @readonly = true })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.case_.SolutionRate, new { @readonly = true })
                                                        @Html.HiddenFor(x => x.case_.SolutionRate)
                                                    }
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            @if (Model.case_.Id != 0)
                            {
                                <div class="displaytr" class="container">
                                    <ul class="nav nav-tabs" id="logandhistorytabs">
                                        <li class="active"><a href="#logtab">@Translation.GetCoreTextTranslation("Ärendelogg")</a></li>
                                        @if (Model.CaseInternalLogAccess)
                                        {
                                            <li><a href="#historytab">@Translation.GetCoreTextTranslation("Historik")</a></li>
                                        }
                                    </ul>
                                    <div class="tab-content">
                                        @Html.Partial("_CaseLog", Model.CreateCaseLogViewModel())
                                        @if (Model.CaseInternalLogAccess)
                                        {
                                            @Html.Partial("_CaseHistory", Model.CreateHistoryViewModel())
                                        }
                                    </div>
                                </div>
                            }
                        </div>

                        @if (Model.case_.FinishingDate.HasValue)
                        {
                            <div class="section-block @Model.getSectionClass(CaseSectionType.Status)">
                                <h4>
                                    <a href="#" class="showbtn"><i class="icon-plus-sign"></i></a>
                                    <a href="#" class="hidebtn"><i class="icon-minus-sign"></i></a>
                                    @Model.getSectionHeader(CaseSectionType.Status, CaseSections.StatusHeader) @Model.getSectionHeaderFields(CaseSectionType.Status)
                                </h4>
                                <div class="row">
                                    <div class="span12">
                                        <table class="tableform">
                                            <thead>
                                                <tr>
                                                    <th class="span3"></th>
                                                    <th class="span4"></th>
                                                    <th class="span5"></th>
                                                </tr>
                                            </thead>
                                            <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.ClosingReason, CaseSolutionFields.FinishingCause)">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.ClosingReason, "Avslutsorsak")
                                                </td>
                                                <td>
                                                    @Model.FinishingCause
                                                </td>
                                                <td></td>
                                            </tr>
                                            <tr style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.FinishingDate, CaseSolutionFields.FinishingDate)">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.FinishingDate, "Avslutsdatum")
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(m => m.case_.FinishingDate.Value, "DateLocalTZ")
                                                    @Html.HiddenFor(m => m.case_.FinishingDate.HasValue)
                                                </td>
                                                <td></td>
                                            </tr>
                                            <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.FinishingDescription, CaseSolutionFields.FinishingDescription)">
                                                <td>
                                                    @CaseFieldCaption(GlobalEnums.TranslationCaseFields.FinishingDescription, "Avslutsbeskrivning")
                                                </td>
                                                <td>
                                                    @Model.case_.FinishingDescription
                                                </td>
                                                <td></td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            if (Model.CaseLock == null || (Model.CaseLock != null && !Model.CaseLock.IsLocked))
                            {
                                <div class="section-block @Model.getSectionClass(CaseSectionType.Communication)">
                                    @Html.Partial("_CaseLogInput", Model)
                                </div>
                            }
                            if (Model.CustomerSettings.ModuleInvoice == true)
                            {
                                <div id="divExternalInvoice" style="@Model.ShowExternalInvoiceFields.displayHtml()">
                                    <h4>
                                        @Model.getSectionHeader(CaseSectionType.Invoices, CaseSections.InvoicesHeader)
                                    </h4>
                                    <div class="row">
                                        <div class="span7">
                                            <table class="tableform" id="externalInvoices">
                                                <thead>
                                                    <tr>
                                                        <th class="span3">@Translation.GetCoreTextTranslation("Fakturanummer")</th>
                                                        <th class="span1">@Translation.GetCoreTextTranslation("Fakturapris")</th>
                                                        <th class="span8"></th>
                                                    </tr>
                                                </thead>
                                                @{
                                                    var readonlyExternalInvoices = Model.ExternalInvoices.Where(x => x.InvoiceRow != null
                                                                                                                     && x.InvoiceRow.Status.HasValue
                                                                                                                     && (x.InvoiceRow.Status.Value == InvoiceStatus.Invoiced || x.InvoiceRow.Status.Value == InvoiceStatus.NotInvoiced))
                                                        .ToList();
                                                    var editableExternalInvoices = Model.ExternalInvoices.Except(readonlyExternalInvoices).ToList();
                                                    var extInvoicesCount = 0;
                                                }

                                                @foreach (var externalInvoice in readonlyExternalInvoices)
                                                {
                                                    <tr>
                                                        <td>
                                                            @externalInvoice.Name
                                                            <input type="hidden" id="ExternalInvoices[@extInvoicesCount].Name" name="ExternalInvoices[@extInvoicesCount].Name" value="@externalInvoice.Name">
                                                        </td>
                                                        <td>
                                                            @externalInvoice.Amount.ToString("#.##")
                                                            <input type="hidden" id="ExternalInvoices[@extInvoicesCount].Amount" name="ExternalInvoices[@extInvoicesCount].Amount" value="@externalInvoice.AmountValue" placeholder="0.00">
                                                            <input type="hidden" id="ExternalInvoices[@extInvoicesCount].Id" name="ExternalInvoices[@extInvoicesCount].Id" value="@externalInvoice.Id">
                                                        </td>
                                                        <td>
                                                            @externalInvoice.InvoiceRow.Status.Value.GetTranslation()
                                                        </td>
                                                    </tr>
                                                    extInvoicesCount++;
                                                }

                                                @foreach (var externalInvoice in editableExternalInvoices)
                                                {
                                                    <tr>
                                                        <td>
                                                            @if (Model.EditMode == AccessMode.ReadOnly)
                                                            {
                                                                @:<input type="text" id="ExternalInvoices[@extInvoicesCount].Name" name="ExternalInvoices[@extInvoicesCount].Name" value="@externalInvoice.Name" disabled="disabled">
                                                            }
                                                            else
                                                            {
                                                                @:<input type="text" id="ExternalInvoices[@extInvoicesCount].Name" name="ExternalInvoices[@extInvoicesCount].Name" value="@externalInvoice.Name">
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (Model.EditMode == AccessMode.ReadOnly)
                                                            {
                                                                @:<input type="text" class="inputw100" id="ExternalInvoices[@extInvoicesCount].Amount" name="ExternalInvoices[@extInvoicesCount].Amount" value="@externalInvoice.AmountValue" placeholder="0.00" disabled="disabled">
                                                            }
                                                            else
                                                            {
                                                                @:<input type="text" class="inputw100" id="ExternalInvoices[@extInvoicesCount].Amount" name="ExternalInvoices[@extInvoicesCount].Amount" value="@externalInvoice.AmountValue" placeholder="0.00">
                                                            }

                                                            <input type="hidden" id="ExternalInvoices[@extInvoicesCount].Id" name="ExternalInvoices[@extInvoicesCount].Id" value="@externalInvoice.Id">
                                                        </td>
                                                        <td>
                                                            @if (Model.EditMode == AccessMode.ReadOnly)
                                                            {
                                                                <a id="btnDeleteExternalInvoice0" class="btn bt-small" title="Delete" data-rowid="@extInvoicesCount" disabled="disabled"><i class="icon-remove"></i></a>
                                                            }
                                                            else
                                                            {
                                                                <a id="btnDeleteExternalInvoice0" class="btn bt-small" title="Delete" data-rowid="@extInvoicesCount"><i class="icon-remove"></i></a>
                                                            }

                                                        </td>
                                                    </tr>
                                                    extInvoicesCount++;
                                                }
                                                <tr>
                                                    <td>
                                                        @if (Model.EditMode == AccessMode.ReadOnly)
                                                        {
                                                            <input type="text" id="ExternalInvoices[@extInvoicesCount].Name" name="ExternalInvoices[@extInvoicesCount].Name" disabled="disabled">
                                                        }
                                                        else
                                                        {
                                                            <input type="text" id="ExternalInvoices[@extInvoicesCount].Name" name="ExternalInvoices[@extInvoicesCount].Name">
                                                        }

                                                    </td>
                                                    <td>
                                                        @if (Model.EditMode == AccessMode.ReadOnly)
                                                        {
                                                            <input type="text" class="inputw100" id="ExternalInvoices[@extInvoicesCount].Amount" name="ExternalInvoices[@extInvoicesCount].Amount" placeholder="0.00" disabled="disabled">
                                                        }
                                                        else
                                                        {
                                                            <input type="text" class="inputw100" id="ExternalInvoices[@extInvoicesCount].Amount" name="ExternalInvoices[@extInvoicesCount].Amount" placeholder="0.00">
                                                        }

                                                        <input type="hidden" id="ExternalInvoices[@extInvoicesCount].Id" name="ExternalInvoices[@extInvoicesCount].Id" value="0">
                                                    </td>
                                                    <td>
                                                        @if (Model.EditMode == AccessMode.ReadOnly)
                                                        {
                                                            <a id="@("btnDeleteExternalInvoice" + extInvoicesCount)" class="btn bt-small" title="Delete" data-rowid="@extInvoicesCount" disabled="disabled"><i class="icon-remove"></i></a>

                                                        }
                                                        else
                                                        {
                                                            <a id="@("btnDeleteExternalInvoice" + extInvoicesCount)" class="btn bt-small" title="Delete" data-rowid="@extInvoicesCount"><i class="icon-remove"></i></a>
                                                            <a id="btnAddExternalInvoice" class="btn bt-small" title="Add"><i class="icon-plus"></i></a>
                                                        }

                                                    </td>
                                                </tr>
                                            </table>

                                        </div>
                                        <div class="span6">
                                            <table id="tblCaseChargeSummary" style="@Model.ShowInvoiceFields.displayHtml()">
                                                <tbody>
                                                    <tr id="totalExternalAmountRow" style="@Model.ShowExternalInvoiceFields.displayHtml()">
                                                        <td>@Translation.GetCoreTextTranslation("Totalt") @Translation.GetCoreTextTranslation("Fakturor"):</td>
                                                        <td id="totalExternalAmount">
                                                            @Model.ExternalInvoices.Sum(x => x.Amount).ToString("0.00")
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                @if (Model.DynamicCase != null && Model.DynamicCase.ViewMode == 0)
                {
                    <div id="dh-form-area" class="tab-pane tab-pane-border">

                    </div>
                }

                @if (Model.ContainsExtendedCase)
                {
                    foreach (var extendedCase in Model.ExtendedCases)
                    {
                        <div id="container_@extendedCase.Id" class="extended-case-tab tab-pane tab-pane-border @((Model.ActiveTab.StartsWith(CaseTabs.ExtendedCaseTab)) ? "active" : "")">
                            <div class="container">
                                @Html.Partial("_CaseInformation", Model, new ViewDataDictionary { { "Headline", Translation.GetMasterDataTranslation(extendedCase.Name) } })
                                @*<div>@extendedCase.Version</div>*@
                            </div>
                        </div>
                    }
                }

                @if (Model.IsItParentCase())
                {
                    @Html.Partial("_ChildCases", Model.ChildCaseViewModel);
                }
                @if(Model.IsItMergedParent())
                {
                    @Html.Partial("_MergedCases", Model.ChildCaseViewModel);
                }
                @if (Model.Setting.AttachmentPlacement == 1)
                {
                    <div id="attachment-container" class="tab-pane tab-pane-border">
                        <div class="container">
                            @Html.Partial("_CaseInformation", Model, new ViewDataDictionary { { "Headline", Translation.GetCoreTextTranslation("Bilagor") } })
                            <div class="row">
                                <div class="span12">
                                    <table class="tableform">
                                        <tr class="displaytr" style="@Model.GetFieldStyle(GlobalEnums.TranslationCaseFields.Filename, CaseSolutionFields.FileName)">
                                            <td colspan="3" class="span3">
                                                @if (Model.EditMode == AccessMode.FullAccess)
                                                {
                                                    <a id="btnAddCaseFile" href="#upload_files_popup" role="button" class="btn" data-toggle="modal">@Translation.GetCoreTextTranslation("Lägg till")</a>
                                                    <a href="#upload_clipboard_file_popup" role="button" class="btn uploadCaseFileFromClipboardBtn" data-src="case">@Translation.GetCoreTextTranslation("Lägg till från Urklipp")</a>
                                                }
                                                <div id="divCaseFiles" style="margin-top:10px;">
                                                    @Html.Partial("_CaseFiles", Model.CaseFilesModel, new ViewDataDictionary { { "CaseInactive", Model.case_.FinishingDate.HasValue } })
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="displaytr">
                                            <td colspan="3" class="span3"></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div id="casedocument-container" class="tab-pane tab-pane-border">
                    <div class="container">
                        @Html.Partial("_CaseInformation", Model, new ViewDataDictionary { { "Headline", Translation.GetCoreTextTranslation("Dokument") } })
                        @Html.Partial("_CaseDocument", Model.CaseDocuments)
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div id="overwriteDlg" class="modal fade" style="display: none">
        <div class="modal-dialog">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <p class="alert alert-info infop">@Translation.GetCoreTextTranslation("Det finns information som kan bli ändrad. Vill du skriva över?")</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-ok">@Translation.GetCoreTextTranslation("Ja")</button>
                <button type="button" class="btn btn-cancel">@Translation.GetCoreTextTranslation("Nej")</button>
            </div>
        </div>
    </div>

    if (Model.case_.Id > 0 && Model.CasePrintView != null)
    {
        <div>
            @Html.Partial("_CasePrint", Model.CasePrintView)
        </div>
    }
    <div class="toast-container toast-position-top-center" style="z-index: 100051;"></div>
}

@functions    {

    private MvcHtmlString CaseFieldCaption(GlobalEnums.TranslationCaseFields field, string defaultCaption = "")
    {
        var res = Html.CaseFieldCaption(
                    Model.caseFieldSettings,
                    Model.CaseFieldSettingWithLangauges,
                    field,
                    Model.case_.Customer_Id,
                    Model.IsCaseReopened,
                    SessionFacade.CurrentLanguageId,
                    defaultCaption);
        return res;
    }

}

<script type="text/javascript">
    $(function() {
        var isVisible = @Model.caseFieldSettings.IsFieldVisible(GlobalEnums.TranslationCaseFields.AddFollowersBtn).ToJavaScriptBool();
        if (isVisible) {
            $("#fakeCaseFollowerUsersInput").html(getHtmlFromEmails($("#caseFollowerUsersInput").val()));
        }

        var scope = dhHelpdesk.cases.scope(window.parameters.casesScopeInitParameters);
    });
    $("#casePersonsEmail").on("change", function (e) {
        var email = $("#casePersonsEmail").val();
        $("#emailsTo").text(email);
        e.preventDefault();
        console.log(email);
    });

</script>

