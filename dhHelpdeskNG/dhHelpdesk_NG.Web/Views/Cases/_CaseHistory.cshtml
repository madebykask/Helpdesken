@model DH.Helpdesk.Web.Models.Case.CaseHistoryViewModel 
@using DH.Helpdesk.Web.Infrastructure.Extensions

@functions
{
    DateTime CreateDateTimeToUserTimeZone(DateTime dt)
    {
        return TimeZoneInfo.ConvertTimeFromUtc(dt.ToUniversalTime(), Model.UserTimeZone);           
    }
}

@if (Model != null && Model.CaseHistories != null)
{
    var histories = Model.CaseHistories.ToArray(); 

    <div class="tab-pane tab-pane-border" id="historytab">
        <table class="table table-striped table-bordered table-hover">
        @if (histories.Any())
        {            
            <thead>
                <tr>
                    <th>@Translation.GetCoreTextTranslation("Datum")</th>
                    <th>@Translation.GetCoreTextTranslation("Registrerad av")</th>
                    <th>@Translation.GetCoreTextTranslation("Historik")</th>
                    <th>@Translation.GetCoreTextTranslation("E-post")</th>
                </tr>
            </thead>
            <tbody>
                @for(var i = 0; i < histories.Length; i++)
                {
                    var current = histories[i];
                    var previous = i < histories.Length - 1 ? histories[i + 1] : null;
                    <tr>
                        <td style="width: 15%">
                            @{ current.CreatedDate = CreateDateTimeToUserTimeZone(current.CreatedDate); }
                            @Html.DisplayFor(m => current.CreatedDate, "DateAndTime")
                        </td>
                        <td style="width:15%">@current.CreatedByUser</td>
                        <td style="width:45%">
                            <table class="tableintable">
                                @current.GetCaseHistoryInfo(previous, Model.CaseCustomerId ?? 0, Model.DepartmentFilterFormat, Model.caseFieldSettings, Model.OutFormatter)
                            </table>
                        </td>
                        <td style="width:25%">
                            @if (current.Emaillogs != null) 
                            {

                                <div>
                                    @foreach (var l in current.Emaillogs)
                                    {    
                                        List<string> emails;
                                        {
                                            emails = l.EmailAddress.Split(',').ToList();
                                            if (l.CcEmailAddress.Any())
                                            {
                                                emails.AddRange(l.CcEmailAddress.Split(','));
                                            }
                                        }
                                        foreach (var e in emails.OrderBy(e => e)) {
                                            <p>@e (@l.MailId.GetMailTemplateName(Model.MailTemplates))</p>
                                         }
                                    }
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        }
        </table>
    </div>
}