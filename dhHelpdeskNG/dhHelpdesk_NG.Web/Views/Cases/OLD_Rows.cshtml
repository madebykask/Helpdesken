@model  dhHelpdesk_NG.Web.Models.CaseFilter
@using dhHelpdesk_NG.DTO.Utilities
@using System.Reflection
@{
    var _signedInUser = SessionFacade.SignedInUser;
}
<div id="rows">
    @if (Model.CaseRows != null && Model.CaseRows.CaseSettings != null)
    {
        var switch1 = 0;
        var sclass = string.Empty;
        var sclass4 = string.Empty;
        var HREF = string.Empty;
        <table width="100%" cellspacing="0" cellpadding="2" border="0">
            <tr>
                <td class="TableHeader" width="10">
                    &nbsp;
                </td>
                <td class="TableHeader" width="10">
                    <img src="../../Content/icons/icoRegSourceMenu.gif" width="10" height="16" alt="" title="@Translation.Get("Ursprung", Enums.TranslationSource.TextTranslation)"/>
                    <br />
                </td>
                @if (Model.CaseRows.TableshowModuleOrder == true)
                {
                        
                    <td class="TableHeader" width="12">
                        <img src="../../Content/icons/icoOrderMenu.gif" width="12" height="15" alt="" title="@Translation.Get("Beställning", Enums.TranslationSource.TextTranslation)"/>
                        <br />
                    </td>
                }
                @if (Model.CaseRows.TableshowModuleProblem == true)
                {
                    <td class="TableHeader" width="13">
                        <img src="../../Content/icons/icoProblemListMenu.gif" alt="" width="13" height="14" title="@Translation.Get("Problem", Enums.TranslationSource.TextTranslation)"/>
                        <br />
                    </td>
                }
                @if (Model.CaseRows.TableshowWatchDate == true)
                {
                    <td class="TableHeader" width="11">
                        <img src="../../Content/icons/icoWatchDateMenu.gif" alt="" width="11" height="15" title="@Translation.Get("Ärende med", Enums.TranslationSource.TextTranslation)" + " " + @Translation.Get("WatchDate", Enums.TranslationSource.TextTranslation) /><br />
                    </td>                                    
                }
                @if (Model.CaseRows.TableshowPlanDate == true)
                {
                    <td class="TableHeader" width="11">
                        <img src="../../Content/icons/icoWatchDateMenu.gif" alt="" width="11" height="15" title="@Translation.Get("Ärende med", Enums.TranslationSource.TextTranslation)" + " " + @Translation.Get("PlanDate", Enums.TranslationSource.TextTranslation)/><br />
                    </td>                                    
                       
                }
                <td class="TableHeader" width="18" align="right">
                    <img src="../../Content/icons/icoHelp.gif" alt="" border="0" onclick="showCaseIconInfo()"
                        style="cursor: pinter; cursor: hand" width="16" height="16" />
                    <br />
                </td>
                @if (Model.CaseRows.CaseSettings != null)
                {
                    foreach (var s in Model.CaseRows.CaseSettings.OrderBy(z => z.ColOrder))
                    {

                        if (s.Line == 1)
                        {                                                                                   											
                                            
                    <td class="TableHeader" style="width:@if (s.MinWidth > 0)
                                                         {@s.MinWidth} ">
                        @if (s.Name.IndexOf("_temporary_.") != -1)
                        {
                            <a onclick="sortList(@s.Name, @Model.CaseRows.sOrderByAttNext)" class="Cap4" style="cursor: pointer; cursor: hand; text-decoration: none">@Translation.Get("Tid kvar", Enums.TranslationSource.TextTranslation)&nbsp;
                                @if (Model.CaseRows.sOrderBy == s.Name && Model.CaseRows.sOrderByAtt == "ASC")
                                {
                                    <img alt="" src="../../Content/images/ASC.gif" border="0" width="11" height="7" />
                                }
                                else if (Model.CaseRows.sOrderBy == s.Name && Model.CaseRows.sOrderByAtt == "DESC")
                                {
                                    <img src="../../Content/images/DESC.gif" border="0" width="11" height="7" alt="" />
                                }
                            </a>
                        }

                        else if (s.Name.IndexOf("tblProblem.ResponsibleUser_Id") != -1)
                        {
                            @Translation.Get("Ansvarig", Enums.TranslationSource.TextTranslation);
                        }
                        else if (s.Name.CompareTo("Description") == 0 || s.Name.IndexOf("Miscellaneous") != -1)
                        {
                            Translation.Get("Namn", Enums.TranslationSource.TextTranslation);
                        }
                        else
                        {
                            <a onclick="sortList(@s.Name, @Model.CaseRows.sOrderByAttNext)" class="Cap4" style="cursor:pointer;cursor:hand;text-decoration:none">@Translation.Get(s.Name, Enums.TranslationSource.TextTranslation)
                                @if (Model.CaseRows.sOrderBy == s.Name && Model.CaseRows.sOrderByAtt == "ASC")
                                {
                                    <img alt="" src="../../Content/images/ASC.gif" border="0" width="11" height="7" />
                                }
                                else if (Model.CaseRows.sOrderBy == s.Name && Model.CaseRows.sOrderByAtt == "DESC")
                                {
                                    <img src="../../Content/images/DESC.gif" border="0" width="11" height="7" alt="" />
                                }
                            </a>

                        }
                    </td>
                        }
                    }
                }
            </tr>
            @foreach (var item in Model.CaseRows.Cases)
            {
               

                var sIcon = string.Empty;

                if (switch1 == 1)
                {
                    switch1 = 0;
                }
                else
                {
                    switch1 = 1;
                }

                if (item.ShowInList == true)
                {
                                                
                <tr class="trCase_New" onmouseover="javascript:this.style.cursor='hand';javascript:this.style.cursor='pointer';">
                    <td class="CellText" @DataReaderHelper.CellColor(switch1) valign="top">
                     
                        <img src="../../Content/icons/plus.gif" alt="" id="img " + @item.Id width="9" height="14" style="cursor:pointer;" onclick="showDiv(@item.Id)" />
                    </td>
                    <td class="<@item.Class>"  @DataReaderHelper.CellColor(switch1) valign="top">
                        @if (item.RegistrationSource == 2)
                        {
                            <img src="../../Content/images/RegSource_ss.gif" alt="" border="0" width="10" title="@Translation.Get("Självservice", Enums.TranslationSource.TextTranslation)" />
                        }
                        else if (item.RegistrationSource == 3)
                        {
                            <img src="../../Content/images/RegSource_mail.gif" alt="" border="0" width="10" title="@Translation.Get("E-post", Enums.TranslationSource.TextTranslation)" />
                        }
                        else
                        {

                        }
                    </td>
                    @if (Model.CaseRows.TableshowModuleOrder == true)
                    {
                        <td class="<@item.Class>" @DataReaderHelper.CellColor(switch1)>
                            @if (item.OrderId != 0)
                            {
                                <a class="CellText" href="../Order/Order.asp?Id=@item.OrderId&lstCustomer=@item.CustomerInternal_Id&From=Case" style="text-decoration: none ">
                                    <img src="../../Content/Icons/icoOrder.gif" alt="" border="0" width="12" height="15" title="@item.OrderStatus" />
                                </a>
                            }
                            else if (item.AccountId != 0)
                            {
                                <img src="../../Content/Icons/icoOrderAccount.gif" alt="" border="0" width="12" height="15" />
                            }
                            else
                            {

                            }
                        </td>
                    }
                    @if (Model.CaseRows.TableshowModuleProblem == true)
                    {
                        <td class="@item.Class" @DataReaderHelper.CellColor(switch1)>
                            @if (item.ProblemId != 0)
                            {													
                                <img src="../../Content/Icons/icoProblemList.gif" alt="" title="@Translation.Get("Problem", Enums.TranslationSource.TextTranslation)" width="13" height="14" />
                            }
                            else
                            {

                            }
                        </td>
                    }
                    @if (Model.CaseRows.TableshowWatchDate == true)
                    {
                        <td class="@item.Class" @DataReaderHelper.CellColor(switch1)>
                            @* Class="<%=sClass%>" width="11" <%=CellColor(bSwitch)%>>*@
                            @if (DataReaderHelper.IsDate(item.WatchDate.ToString()) == true)
                            {
                                if (item.WatchDate < DateTime.Now)
                                {
@*<img src="../../Content/icons/icoWatchDateExpanded.gif" alt="" border="0" width="11"
                                        height="15" /> Title="<%=getTextTranslation("Ärende med passerat" & " " & vCaseFieldSettings(iCaseTranslationIndex, getCaseFieldIndex(vCaseFieldSettings, "WatchDate"))) & "&nbsp;(" & dtWatchDate & ")"%>"*@
                                    
                                    
                                <img src="../../Content/icons/icoWatchDateExpanded.gif" alt="" border="0" title="@Translation.Get("Ärende med passerat", Enums.TranslationSource.TextTranslation)" + " " + @Translation.Get("", Enums.TranslationSource.TextTranslation)) + "&nbsp;(" + @item.WatchDate + ")" width="11" height="15" />

                                }
                                else
                                {
@*<img src="../../Content/icons/icoWatchDate.gif" alt="" border="0" width="11" height="15" /> Title="<%=getTextTranslation("Ärende med" & " " & vCaseFieldSettings(iCaseTranslationIndex, getCaseFieldIndex(vCaseFieldSettings, "WatchDate"))) & "&nbsp;(" & dtWatchDate & ")"%>"*@
                                    
                                <img src="../../Content/icons/icoWatchDate.gif" alt="" border="0" title="@Translation.Get("Ärende med ", Enums.TranslationSource.TextTranslation)" + " " + "") + "&nbsp;(@item.WatchDate)" width="11" height="15" />
                                }
                            }
                            else
                            {

                            }
                        </td>
                    }
                    @if (Model.CaseRows.TableshowPlanDate == true)
                    {
                        <td class="@item.Class" @DataReaderHelper.CellColor(switch1)>
                            @*Class="<%=sClass%>" width="11" <%=CellColor(bSwitch)%>>*@
                            @if (DataReaderHelper.IsDate(item.PlannedDate.ToString()) == true)
                            {
                                if (item.PlannedDate < DateTime.Now)
                                {
                                <img src="../../Content/icons/icoPlanDateExpanded.gif" alt="" border="0" width="11"
                                    height="15" /> @*Title="<%=getTextTranslation("Ärende med passerat" & " " & vCaseFieldSettings(iCaseTranslationIndex, getCaseFieldIndex(vCaseFieldSettings, "PlanDate"))) & "&nbsp;(" & dtPlanDate & ")"%>" *@
                                }
                                else
                                {
                                <img src="../../Content/icons/icoPlanDate.gif" alt="" border="0" width="11" height="15" /> @*title="<%=getTextTranslation("Ärende med" & " " & vCaseFieldSettings(iCaseTranslationIndex, getCaseFieldIndex(vCaseFieldSettings, "PlanDate"))) & "&nbsp;(" & dtPlanDate & ")"%>" *@
                                }
                            }
                            else
                            {
                            }
                        </td>
                    }
                    <!-- ikonen bluepage, logg eller avslutad visas alltid -->
                    <td class="@item.Class" @DataReaderHelper.CellColor(switch1)>
                        <a href="@item.HREF" style="text-decoration: none">
                            <img src="../../Content/images/@item.Icon" title="@item.IconText" width="18" height="16"
                                    border="0" alt="" />
                        </a>
                    </td>
                    @if (Model.CaseRows.CaseSettings != null)
                    {
                        foreach (var s in Model.CaseRows.CaseSettings.OrderBy(z => z.ColOrder))
                        {


                            if (s.Line == 1)
                            {

                                var sField = s.Name.Substring(s.Name.IndexOf(".") + 1);
                                var sValue = string.Empty;
                        <td class="@item.Class">
                            @if (sField == "RegTime")
                            {
                                sValue = DataReaderHelper.GetLocalTime(item.RegTime, 0).ToString();
                            }

                            else if (sField == "Performer_User_Id")
                            {
                                sValue = item.SurName + " " + item.FirstName;
                            }

                            else if (sField == "CaseResponsibleUser_Id")
                            {
                                sValue = item.ResponsibleSurName + " " + item.ResponsibleFirstName;
                            }

                            else if (sField == "User_Id")
                            {
                                sValue = item.RegistratedBySurName + " " + item.RegistratedByFirstName;
                            }

                            else if (sField == "StateSecondary_Id")
                            {

                                if (item.OrderId != 0)
                                {
                                    if (item.StateSecondaryId != 0)
                                    {
                                        sValue = item.StateSecondaryId + " - " + item.OrderStatus.ToString();
                                    }
                                    else
                                    {
                                        sValue = item.OrderStatus.ToString();
                                    }
                                }
                                else
                                {
                                    if (item.StateSecondaryId != 0)
                                    {
                                        sValue = item.StateSecondaryId.ToString();
                                    }

                                    else
                                    {

                                        sValue = string.Empty;
                                    }
                                }



                            }

                            else if (sField == "Department_Id")
                            {
                                if (item.DepartmentFormat == 0)
                                {
                                    sValue = item.DepartmentId.ToString();
                                }
                                else if (item.DepartmentFormat == 1)
                                {
                                    sValue = item.Department.ToString() + " - " + item.SearchKey.ToString() + " - " + item.DepartmentId.ToString();
                                }
                                else
                                {
                                    sValue = item.Department.ToString();
                                }

                            }

                            else if (sField == "Priority_Id")
                            {


                                if (item.PriorityFormat == 0)
                                {
                                    sValue = item.Priority.ToString() + " - " + item.PriorityName.ToString();
                                }
                                else
                                {
                                    sValue = item.PriorityName.ToString();
                                }

                            }

                            else if (sField == "PlanDate")
                            {

                                if (item.PlanDateFormat == 0)
                                {
                                    sValue = item.PlannedDate.ToString();
                                }
                                else
                                {
                                    if (DataReaderHelper.IsDate(item.PlannedDate.ToString()) == true)
                                    {
                                        sValue = item.PlannedDate.Year.ToString() + "/" + DataReaderHelper.GetWeek(item.PlannedDate);
                                    }

                                }

                            }

                            else if (sField == "LeadTime")
                            {

                                //if (DataReaderHelper.IsNumeric(item.TimeLeft.ToString()))
                                //{
                                //  sValue = DataReaderHelper.FormatTimeLeft(int.Parse(item.TimeLeft.ToString()), SessionFacade.WorkingDayLength, SessionFacade.LeadTimeLimit) + Translation.Get("h", Enums.TranslationSource.TextTranslation);
                                ///}
                                //else
                                //{
                                sValue = item.TimeLeft; //string.Empty;
                                //}

                            }

                            else if (sField == "ChangeTime")
                            {

                                sValue = DataReaderHelper.GetDate(item.ChangeTime.ToString()).ToString();
                            }

                            else if (sField == "ProductArea_Id")
                            {
                                sValue = item.ProductArea.ToString();
                            }

                            else if (sField == "ResponsibleUser_Id")
                            {
                                sValue = item.RegistratedBySurName + " " + item.ProblemResponsibleFirstName;


                                //                    Case "Verified"
                                //                        If CInt(getPropBagValue(vCases, "Verifies", i))  = 1 Then
                                //                            sValue = getTextTranslation("Ja")
                                //                        ElseIf sValue = "2" Then
                                //                            sValue = getTextTranslation("Nej")
                                //                        Else
                                //                            sValue = ""
                                //                        End If
                            }

                            else if (sField == "Verified")
                            {
                                if (item.Verified == 1)
                                {
                                    sValue = Translation.Get("JA", Enums.TranslationSource.TextTranslation);
                                }
                                else
                                {
                                    sValue = Translation.Get("NEJ", Enums.TranslationSource.TextTranslation);
                                }
                            }

                            else if (sField == "ContactBeforeAction")
                            {

                                if (item.ContactBeforeAction == 0)
                                {
                                    sValue = Translation.Get("JA", Enums.TranslationSource.TextTranslation);
                                }
                                else
                                {
                                    sValue = Translation.Get("NEJ", Enums.TranslationSource.TextTranslation);
                                }
                            }
                            else if (sField == "SMS")
                            {

                                if (item.SMS == 0)
                                {
                                    sValue = Translation.Get("JA", Enums.TranslationSource.TextTranslation);
                                }
                                else
                                {
                                    sValue = Translation.Get("NEJ", Enums.TranslationSource.TextTranslation);
                                }
                            }

                            else if (sField == "SolutionRate")
                            {

                                                
@* If StrComp(vCaseFieldSettings(11, getCaseFieldIndex(vCaseFieldSettings, "SolutionRate")), "1", 1) = 0 And getPropBagValue(vCases, "SolutionRate", i)  = "" Then%>
                                                                            <select class="CellText" style="float:left;" name="lstSolutionRate<%=iId%>">
                                                                                <option value=""></option>
                                                                                <%For IndexSolutionRate=10 To 100 STEP 10 %>
                                                                                <option value="<%=IndexSolutionRate%>" <%If StrComp(getPropBagValue(vCases, "SolutionRate", i), IndexSolutionRate, 1) = 0 Then%>SELECTED<%End If%>><%=IndexSolutionRate%></option>
                                                                                <%Next%>
                                                                            </select> <img src="../images/btnSave.gif" style="float:left; margin-left:5px;" alt="<%=getTextTranslation("Spara")%>" border="0" onclick="updateSolutionRate(<%=iId%>);return false;"/><br />

                                                                        <%Else
                                                                            sValue = getPropBagValue(vCases, sField, i) 
                                                                        End If*@
                                                
                            }

                            else
                            {

                                Type t = item.GetType();
                                foreach (PropertyInfo info in t.GetProperties())
                                {
                                    if (info.Name == s.Name)
                                    {

                                        sValue = info.GetValue(item, null).ToString();
                                    }
                                }

                            }
                            @if (sValue != string.Empty)
                            {
                                
                                <a href="@Url.Action("IndexCaseEdit", "Cases", new { id = item.Id, CustomerInternal_Id = item.CustomerInternal_Id, LoggedInUserId = item.LoggedInUserId })" class="@sclass" style="text-decoration: none">@sValue</a>
                            }
                        </td>

                            }
                        }

                    }
                </tr>
                    
                <!-- Visa utökad information -->
                <tr>
                    <td class="CellText"  valign="top" @DataReaderHelper.CellColor(switch1)>
                        <div id="div1_<@item.Id>" style="display:none">
                            &nbsp;
                        </div>
                    </td>
                    <td class="CellText"  valign="top" @DataReaderHelper.CellColor(switch1)>
                        <div id="div2_<@item.Id>" style="display: none">
                            <table cellpadding="0" cellspacing="0">
                                @if (Model.CaseRows.CaseSettings != null)
                                {
                                    foreach (var s in Model.CaseRows.CaseSettings)
                                    {
                                        if (s.Line == 2)
                                        {
                                            var sField1 = s.Name.Substring(s.Name.IndexOf(".") + 1);
                                    <tr>
                                        <td class="Cap4" @DataReaderHelper.CellColor(switch1)>
                                            @*<%=vCaseFieldSettings(iCaseTranslationIndex, getCaseFieldIndex(vCaseFieldSettings, vCaseSettings(1, j)))%>:&nbsp;*@
                                            @Translation.Get(s.Name, Enums.TranslationSource.TextTranslation);
                                        </td>
                                        <td class="CellText" @DataReaderHelper.CellColor(switch1)>
                                            @if (s.Name == "RegTime")
                                            {
                                                DataReaderHelper.GetLocalTime(item.RegTime, 0);
                                            }
                                            else if (s.Name == "Performer_User_Id")
                                            {
                                                item.SurName.ToString();
                                            }
                                            else
                                            {
                                                //item.Persons_Name.ToString();

                                                Type t = item.GetType();
                                                foreach (PropertyInfo info in t.GetProperties())
                                                {
                                                    if (info.Name == s.Name)
                                                    {


                                                        //info.SetValue(item, value, null);
                                                <a class="CellText" style="text-decoration: none">@info.GetValue(item, null).ToString()</a>
                                                    }
                                                }


                                            }
                                        </td>
                                    </tr>
                                        }
                                    }
                                }
                            </table>
                        </div>
                    </td>
                </tr>
                }
                <!-- slut visa utökad info -->
            }
        </table>
    }
    else
    {
      
        @Html.Partial("_NoHits", "")
      
    }
</div>
<script type="text/javascript">

    function alertForm(id, customerid, loggedinid) {


        $.get("/Cases/IndexCaseEdit/" + id + "", { CustomerInternal_Id: "" + customerid + "", LoggedInUserId: "" + loggedinid + "" }, function (result) {

            //window.location.href = "/ShoppingCart/Checkout/";

        });


    }
    function showDiv(id) {

        //alert(document.getElementById("div1_<" + id + ">"));
        if (document.getElementById("div1_<" + id + ">").style.display == "none") {

            //alert(("img " + id));
            document.getElementById("img " + id).src = "../../Content/icons/minus.gif"

            document.getElementById("div1_<" + id + ">").style.display = "block"
            document.getElementById("div2_<" + id + ">").style.display = "block"
        }
        else {
            document.getElementById("img " + id).src = "../../Content/icons/plus.gif"

            document.getElementById("div1_<" + id + ">").style.display = "none"
            document.getElementById("div2_<" + id + ">").style.display = "none"
        }
    }

    //    function popup(id, customerid, select) {

    //        // alert();

    //        $.post("/Cases/Edit/" + id + "", { customerid: "" + customerid + "", LoggedInUserId: "" + select + "" }, function (result) {
    //            //            alert();
    //            //            window.close()

    //        });


    //    }
</script>
