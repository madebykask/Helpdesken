@model DH.Helpdesk.Web.Models.Case.Output.AdvancedSearchSpecificFilterData 
@using DH.Helpdesk.BusinessData.Models.Case
@using DH.Helpdesk.BusinessData.OldComponents
@using System.Web.Optimization
@using DH.Helpdesk.Web.Infrastructure.Extensions

@Scripts.Render("~/bundles/advancedsearch/specialfilter")

<div id="SpecificFilterDataPartial" >
    <script type="text/javascript">
        window.Params = {
            DefaultFocusObject: "#btnSearch",
            CaseTypeDropDown: "CaseTypeDropDown",
            ProductAreaDropDown: "ProductAreaDropDown",
            ClosingReasonDropDown: "ClosingReasonDropDown"
        };
    </script>

    @if (Model != null)
    {                         
        <div class="span6">
            <table class="tableform">
                @if (Model.DepartmentList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <select id="lstfilterDepartment" name="lstfilterDepartment" data-field="department" data-placeholder="@Translation.Get("Välj en eller flera", Enums.TranslationSource.TextTranslation)" multiple="multiple" class="chosen-select">
                                @foreach (var e in Model.DepartmentList)
                                {
                                    if (e.IsActive == 1)
                                    {
                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.FilteredDepartment)>@e.DepartmentDescription(Model.CustomerSetting.DepartmentFilterFormat)</option>
                                    }
                                    else
                                    {
                                        <option class="DisabledChosen" value="@e.Id" @e.Id.IdIsSelected(Model.FilteredDepartment)>@e.DepartmentDescription(Model.CustomerSetting.DepartmentFilterFormat)</option>
                                    }
                                    
                                }
                            </select>
                        </td>
                    </tr>                
                }
                
                @*Working group control*@
                @if (Model.WorkingGroupList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <select id="lstfilterWorkingGroup" name="lstFilterWorkingGroup" data-placeholder="@Translation.Get("Välj en eller flera")" multiple="multiple" class="chosen-select">
                                @foreach (var e in Model.WorkingGroupList)
                                {
                                    if (e.IsActive == 1)
                                    {
                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.FilteredWorkingGroup)>@e.WorkingGroupName</option>
                                    }
                                    else
                                    {
                                        <option class="DisabledChosen" value="@e.Id" @e.Id.IdIsSelected(Model.FilteredWorkingGroup)>@e.WorkingGroupName</option>
                                    }
                                    
                                }
                            </select>
                        </td>

                    </tr>                
                }

                @if (Model.PriorityList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.Priority_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <select id="lstfilterPriority" name="lstfilterPriority" data-placeholder="@Translation.Get("Välj en eller flera", Enums.TranslationSource.TextTranslation)" multiple="multiple" class="chosen-select">
                                @foreach (var e in Model.PriorityList.OrderBy(p => p.Name))
                                {
                                    if (e.IsActive == 1)
                                    {
                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.FilteredPriority)>@Translation.Get(e.Name, Enums.TranslationSource.TextTranslation)</option>
                                    }
                                    else
                                    {
                                        <option class="DisabledChosen" value="@e.Id" @e.Id.IdIsSelected(Model.FilteredPriority)>@Translation.Get(e.Name, Enums.TranslationSource.TextTranslation)</option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>                
                }

                @if (Model.StateSecondaryList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <select id="lstfilterStateSecondary" name="lstfilterStateSecondary" data-placeholder="@Translation.Get("Välj en eller flera", Enums.TranslationSource.TextTranslation)" multiple="multiple" class="chosen-select">
                                @foreach (var e in Model.StateSecondaryList)
                                {
                                    if (e.IsActive == 1)
                                    {
                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.FilteredStateSecondary)>@Translation.Get(e.Name, Enums.TranslationSource.TextTranslation)</option>
                                    }
                                    else
                                    {
                                        <option class="DisabledChosen" value="@e.Id" @e.Id.IdIsSelected(Model.FilteredStateSecondary)>@Translation.Get(e.Name, Enums.TranslationSource.TextTranslation)</option>
                                    }
                                    
                                }
                            </select>
                        </td>
                    </tr>                
                }

                @if (Model.CaseTypeList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <div id="CaseTypeDropDown" class="btn-group">
                                <div class="btn" id="divBreadcrumbs_CaseTypeDropDown">@Model.FilteredCaseTypeText</div>
                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                    @Html.CaseTypeDropdownButtonString(Model.CaseTypeList, false)
                                </ul>
                                <input type="hidden" class="hidden" value="@Model.FilteredCaseType" id="hid_CaseTypeDropDown" name="hid_CaseTypeDropDown" />
                            </div>
                        </td>
                    </tr>                
                }

                @*@if (Model.ProductAreaList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <div id="ProductAreaDropDown" class="btn-group pull-left">
                                <div class="btn breadcrumbs" id="divBreadcrumbs_ProductAreaDropDown">@Model.FilteredProductAreaText</div>
                                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                    @Html.ProductAreaDropdownButtonString(Model.ProductAreaList, false)
                                </ul>
                                <input type="hidden" class="hidden" value="@Model.FilteredProductArea" id="hid_ProductAreaDropDown" name="hid_ProductAreaDropDown" />
                            </div>
                        </td>
                    </tr>                
                }*@

                @if (Model.ProductAreaList != null)
                {
                    @*<tr>
                        <td>
                            [Product Area List]
                        </td>
                        <td>
                            <select id="productArea" name="productArea" class='chosen-single-select'>    
                                <option> &nbsp; </option>
                                @if (Model.NewProductAreaList != null)
                                {
                                    foreach (var productArea in Model.NewProductAreaList)
                                    {                                                                                                           
                                        <option value="@productArea.Value" @(productArea.Selected ? "Selected" : "")> @productArea.Text </option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>*@
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <div id="ProductAreaDropDown" class="btn-group pull-left">
                                <div class="btn breadcrumbs" id="divBreadcrumbs_ProductAreaDropDown">@Model.FilteredProductAreaText</div>
                                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                    @Html.ProductAreaDropdownButtonString(Model.ProductAreaList, false)
                                </ul>
                                <input type="hidden" class="hidden" value="@Model.FilteredProductArea" id="hid_ProductAreaDropDown" name="hid_ProductAreaDropDown" />
                            </div>
                        </td>
                    </tr>                
                }

                @if (Model.ClosingReasonList != null)
                {
                    <tr>
                        <td>
                            @Translation.Get(GlobalEnums.TranslationCaseFields.ClosingReason.ToString(), Enums.TranslationSource.CaseTranslation, Model.CustomerId)
                        </td>
                        <td>
                            <div id="ClosingReasonDropDown" class="btn-group pull-left">
                                <div class="btn breadcrumbs" id="divBreadcrumbs_ClosingReasonDropDown">@Model.FilteredClosingReasonText</div>
                                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                    @Html.FinishingCauseDropdownButtonString(Model.ClosingReasonList, false)
                                </ul>
                                <input type="hidden" class="hidden" value="@Model.FilteredClosingReason" id="hid_ClosingReasonDropDown" name="hid_ClosingReasonDropDown" />
                            </div>
                        </td>
                    </tr>                
                }
            </table>
        </div>
    }
</div>

