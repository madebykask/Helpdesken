@model DH.Helpdesk.Web.Models.Case.CaseInputViewModel
@using System.Web.Optimization
@using DH.Helpdesk.Web
@using System

@if (Model.ExtendedCases != null)
{
    @Styles.Render("~/cases/dynamic-cases")
}

@Scripts.Render("~/bundles/cases/new")
@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            CaseInitForm();

            $("#case-action-save").click(function (e) {
                e.preventDefault();                
                //$('#case__StateSecondary_Id').removeAttr('disabled');                
            });

            $("#case-action-save-and-close").click(function (e) {
                e.preventDefault();                
                //$('#case__StateSecondary_Id').removeAttr('disabled');                
            });

            $("#case-action-save-and-new").click(function (e) {
                e.preventDefault();                
                //$('#case__StateSecondary_Id').removeAttr('disabled');                
            });
        });

        $("#case__RegLanguage_Id").change(function () {

            var ci = '@Model.NewModeParams.customerId';
            var cfc = '@Model.NewModeParams.copyFromCaseId';
            var ti = '@Model.NewModeParams.templateId';
            var cli = $('#case__RegLanguage_Id').val();

            var p2 = "";
            if (ti != '')
                p2 = "&templateId=" + ti;

            var p3 = "";
            if (cfc != '')
                p3 = "&copyFromCaseId=" + cfc

            //location.href = '/Cases/new?customerId=' + ci + p2 + p3 + '&caseLanguageId=' + cli;       
        });
    </script>
}

@if (!Model.IsItChildCase())
{
    @Html.Partial("_ExtendedCase", Model.ExtendedCases)
}

@Html.Partial("_Plupload")
@{ var t = new ViewDataDictionary();
   t.Add("isJS", "true");
}
@if(Model != null)
{
    using(Html.BeginForm("new", "cases", null, FormMethod.Post, new { id = "target" }))
    {        
        <div class="secnavs fixed">
            <div class="pull-left">
                <ul class="secnav">
                    @if (Model.templateistrue != 1)
                    {
                        <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation), null, null, null, new { @class = "btn save", id = "case-action-save" })</li>
                    }
                    <li>@Html.ActionLink(Translation.Get("Spara och stäng", Enums.TranslationSource.TextTranslation), null, null, new { @class = "btn save-close", id = "case-action-save-and-close" })</li>

                    @if (Model.templateistrue != 1 && !Model.IsItChildCase())
                    {
                        <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation) + "/" + Translation.Get("Nytt ärende", Enums.TranslationSource.TextTranslation), null, null, new { @class = "btn save-new", id = "case-action-save-and-new" })</li>
                    }

                    @if (!Model.IsItChildCase() && Model.WorkflowSteps.Count() > 0)
                    {
                        <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation), null, null, null, new { @class = "btn save", id = "case-action-save" })</li>
                    }


                    <li><i id="TemplateQuickButtonIndicator" class="gif-loader" style="display:none">&nbsp;</i></li>
                    <li class="secspace"></li>
                    
                    <li><a id="case-action-close" class="btn close-page">@Translation.GetCoreTextTranslation("Stäng")</a></li>

                    <li>
                        <div id="divActionMenu" class="btn-group">
                            <button class="btn dropdown-toggle" data-toggle="dropdown" id="btnActionMenu">
                                @Translation.Get("Åtgärder", Enums.TranslationSource.TextTranslation)
                                <span class="caret">&nbsp;</span>
                            </button>
                            <ul class="dropdown-menu">                                                               
                                @if (Model.Languages != null && Model.Languages.Where(l => l.IsActive > 0).ToList().Count > 1)
                                {     
                                    var curLanguage = (Model.case_.Id == 0? SessionFacade.CurrentLanguageId:Model.case_.RegLanguage_Id);                               
                                    <li class="dropdown-submenu">
                                        <a href="#">
                                         
                                            @Translation.Get("Språk för E-mail")
                                        </a>
                                        <ul class="dropdown-menu">
                                            @foreach (var lang in Model.Languages.Where(l => l.IsActive > 0).ToList())
                                            {
                                                var langNameId = "langItem" + lang.Id;
                                                <li>
                                                                                                        
                                                        <a id="@langNameId" class="langItem" href="#" onclick="ChangeCaseLanguageTo(@lang.Id,true);"> @Translation.Get(lang.Name) 
                                                            @if (lang.Id == curLanguage) 
                                                            {
                                                              <i class='icon-ok'></i>
                                                            }
                                                        </a>
                                                    @*}
                                                    else
                                                    {
                                                        <a id="@langNameId" href="#" onclick="ChandeCaseLanguageTo(@lang.Id);"> @Translation.Get(lang.Name) </a>                                                        
                                                    }*@
                                                </li>
                                            }
                                        </ul>
                                    </li>                                    
                                }                                                        
                            </ul>
                        </div>
                    </li>
                    @if (Model.templateistrue != 1)
                    {
                        <li id="btnCaseTemplate">
                            @Html.Partial("_CaseTemplateTree", Model.CaseTemplateTreeButton, t)
                        </li>
                    }

                    @*At the moment we do not check access for this /TAN*@
        
                    @if (!Model.IsItChildCase())
                    {
                        @Html.Partial("WorkflowStep", Model.WorkflowSteps)
                    }
                </ul>
            </div>
            <div class="pull-right">
                 @if (Model.templateistrue != 1)
                 {
                    <ul class="secnav">
                        
                        @if (Model.CaseTemplateButtons != null && Model.CaseTemplateButtons.Any())
                        {
                            foreach (var button in Model.CaseTemplateButtons)
                            {
                                <li><a href="#" onclick='LoadTemplate("@button.CaseTemplateId.ToString()")' title="@button.CaseTemplateName" class="btn templateQuickButton" rel="tooltip" data-placement="bottom" data-original-title="@button.CaseTemplateName"> @button.ButtonNumber </a></li>
                            }
                        }
                    </ul>
                 }
            </div>
        </div>
        <div class="newmode">
            @Html.Partial("_Input", Model)
            @Html.Hidden("templateId", Model.NewModeParams.templateId)
        </div>
    }    
}

