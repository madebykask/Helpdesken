@model DH.Helpdesk.Web.Models.Case.CaseInputViewModel
@using System.Web.Optimization

@{ var t = new ViewDataDictionary();
   t.Add("isJS", "true");
}

@if (Model.DynamicCase != null && Model.DynamicCase.ExternalPage)
{
    @Styles.Render("~/cases/dynamic-cases")
}

@Scripts.Render("~/bundles/cases/edit")

@section Scripts {
    <script type="text/javascript">
        
        $(document).ready(function () {

            CaseInitForm();

            var dc = function(text) {
                return $("<div>" + text + "<div>");
            };

            var confirmDialog = function(d, onOk, onCancel) {
                return d.dialog({
                    title: '@Translation.Get("Meddelande")',
                    buttons: [
                        {
                            text: '@Translation.Get("OK")',
                            click: function() {
                                onOk();
                                d.dialog("close");
                            }
                        },
                        {
                            text: '@Translation.Get("Avbryt")',
                            click: function() {
                                onCancel();
                                d.dialog("close");
                            }
                        }
                    ],
                    modal: true
                });
            };

            var messageDialog= function(d) {
                return d.dialog({
                    title: '@Translation.Get("Meddelande")',
                    buttons: [
                        {
                            text: '@Translation.Get("Stäng")',
                            click: function() {
                                d.dialog("close");
                            }
                        }
                    ],
                    modal: true
                });
            };

            var hasNotInvoicedArticles = function () {
                return typeof dhHelpdesk.CaseArticles !== "undefined" &&
                    dhHelpdesk.CaseArticles.HasNotInvoicedArticles();
            }

            var invoiceArticlesBeforeClose = function (onOk, onCancel) {
                if (!hasNotInvoicedArticles()) {
                    onOk();
                    return;
                }

                confirmDialog(dc('@Translation.Get("Are you sure you want to close the case without sending your selected articles to invoicing?")'),
                    onOk, onCancel);                
            }

            var openInvoiceWindow = function () {
                dhHelpdesk.CaseArticles.OpenInvoiceWindow('@Translation.Get("Please send selected articles for invoicing or delete them in order to close the case.")');
            }

            $("#case-action-save-and-close").click(function (e) {
                e.preventDefault();                
                invoiceArticlesBeforeClose(EditCaseAndClose, openInvoiceWindow);
            });

            $("#case-action-save-and-new").click(function (e) {
                e.preventDefault();                
                invoiceArticlesBeforeClose(EditCaseAndAddCase, openInvoiceWindow);
            });

            @*$("#case-action-close").click(function (e) {
                e.preventDefault();
                var targetUrl = $(this).attr("href");
                invoiceArticlesBeforeClose(function () { window.location.href = targetUrl; }, openInvoiceWindow);
                if ('@Model.CaseLock.LockGUID' != '')
                    UnLockCase('@Model.CaseLock.LockGUID');                
            });*@

            $("#case-action-close").click(function (e) {
                e.preventDefault();
                var targetUrl = $(this).attr("href");
                invoiceArticlesBeforeClose(function ()
                {
                    if ('@Model.CaseLock.LockGUID' != '')
                        UnLockCase('@Model.CaseLock.LockGUID', targetUrl);
                    else
                    {
                        redirectToUrl(targetUrl);
                    }
                }, openInvoiceWindow);
            });
            
            $("#case-action-delete").click(function (e) {                               
                if (hasNotInvoicedArticles()) {
                    messageDialog(dc('@Translation.Get("You may not delete a case with selected articles in the order section. Please review your orders.")'));
                    return false;
                }
                return true;                       
            })
        });
     
        function redirectToUrl(url) {            
            window.location.href = url;
        }

        function MakeAsUnread() {             
            $.post('@Url.Content("~/Cases/IsCaseAvailable/")', { caseId: '@Model.CaseLock.CaseId', lockGuid: '@Model.CaseLock.LockGUID' },
                function (data) {
                    if (data == true) {
                        $.post('/cases/markasunread/', { id: '@Model.case_.Id', customerId: '@Model.case_.Customer_Id' }, function (data) {
                            if (data == "Success") {
                                $('#case__Unread').val(1);
                                ShowToastMessage('@Translation.Get("Ärendet har markerats som oläst")', "notice");
                            }
                        });
                    }
                    else {
                        ShowToastMessage('@Translation.Get("Ärendet kan inte ändras då det är öppet hos en annan användare.")', "error", false);                        
                    }
                });            
        };

        
        function UnLockCase(lockGuid, url) {
            $.post('@Url.Content("~/Cases/UnLockCase/")', { lockGUID: lockGuid }, function (data) {                
                if (data != "Success")
                {                    
                    ShowToastMessage('@Translation.Get("Ett fel inträffade när ärendet skulle låsas upp automatiskt. Var vänlig kontakta systemadministratören.")', "Error");
                }
                if (url) {                    
                    redirectToUrl(url);
                }
            });
        };
                
        //HIDE SHOW
        $( ".hidebtn" ).on( "click", function() {
            $( this ).parents( ".notifier-block" ).addClass( "hideshow" );
        });
        $( ".showbtn" ).on( "click", function() {
            $( this ).parents( ".notifier-block" ).removeClass( "hideshow" );
        });

        $( ".hidebtn" ).on( "click", function() {
            $( this ).parents( ".computer-block" ).addClass( "hideshow" );
        });
        $( ".showbtn" ).on( "click", function() {
            $( this ).parents( ".computer-block" ).removeClass( "hideshow" );
        });

        $( ".hidebtn" ).on( "click", function() {
            $( this ).parents( ".caseinfo-block" ).addClass( "hideshow" );
        });
        $( ".showbtn" ).on( "click", function() {
            $( this ).parents( ".caseinfo-block" ).removeClass( "hideshow" );
        });

        $( ".hidebtn" ).on( "click", function() {
            $( this ).parents( ".casehandling-block" ).addClass( "hideshow" );
        });
        $( ".showbtn" ).on( "click", function() {
            $( this ).parents( ".casehandling-block" ).removeClass( "hideshow" );
        });
    </script>
}

@if (Model.DynamicCase != null && Model.DynamicCase.ExternalPage)
{
    @System.Web.Optimization.Scripts.Render(DH.Helpdesk.Web.BundleConfig.ScriptNames.DynamicCase)

    <script type="text/javascript">
        $(function () {
            var currentpage = new dhform({ url: '@Model.DynamicCase.FormPath', modal: '@Model.DynamicCase.Modal.ToJavaScriptBool()' });
        });
    </script>
}

@Html.Partial("_Plupload")

@if (Html.MasterModel() != null && SessionFacade.CurrentUser != null && Model != null)
{
    using (Html.BeginForm("edit", "cases", null, FormMethod.Post, new { id = "target" }))
    {    
        @Html.HiddenFor(m => m.BackUrl) 
    <div class="secnavs fixed">
        <div class="pull-left">
            <ul class="secnav">
                @if (Model.EditMode == Enums.AccessMode.FullAccess)
                {
                    <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation), null, null, null, new { onclick = "$('#target').submit();return false;", @class = "btn" })</li>
                    <li>@Html.ActionLink(Translation.Get("Spara och stäng", Enums.TranslationSource.TextTranslation), null, null, new { @class = "btn", id = "case-action-save-and-close" })</li>
                    <li>@Html.ActionLink(Translation.Get("Spara", Enums.TranslationSource.TextTranslation) + "/" + Translation.Get("Nytt ärende", Enums.TranslationSource.TextTranslation), null, null, new { @class = "btn", id = "case-action-save-and-new" })</li>
                    <li class="secspace"></li>                    
                    if (SessionFacade.CurrentUser.DeleteCasePermission == 1)
                    {                            
                    <li>@Html.ActionLink(Translation.Get("Ta bort", Enums.TranslationSource.TextTranslation), "DeleteCase",
                                new { caseId = @Model.case_.Id, customerId = @Model.case_.Customer_Id }, new
                                {
                                    @class = "btn caseDeleteDialog",
                                    id = "case-action-delete",
                                    deleteDialogText = Translation.Get("Är du säker på att du vill radera detta ärende", Enums.TranslationSource.TextTranslation) + '?'
                                })</li>
                    }
                }
                @if (string.IsNullOrEmpty(Model.BackUrl))
                {
                    <li>@Html.ActionLink(Translation.Get("Stäng", Enums.TranslationSource.TextTranslation), "Index", new { customerId = @Model.case_.Customer_Id }, new { @class = "btn", id = "case-action-close" })</li>
                }
                else
                {                   
                    <li><a id="case-action-close" class = "btn" href="@Model.BackUrl">@Translation.Get("Stäng")</a></li>
                }

                @if (Model.EditMode == Enums.AccessMode.FullAccess)
                {
                    <li>
                        <div id="divActionMenu" class="btn-group">
                            <button class="btn dropdown-toggle" data-toggle="dropdown">
                                @Translation.Get("Åtgärder", Enums.TranslationSource.TextTranslation)
                                <span class="caret">&nbsp;</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href="#" onclick="MakeAsUnread();">
                                        @Translation.Get("Markera ärendet som oläst", Enums.TranslationSource.TextTranslation)
                                    </a>
                                </li>
                                @if (SessionFacade.CurrentUser.ActivateCasePermission == 1 && Model.case_.FinishingDate.HasValue)
                                {   
                                    <li>@Html.ActionLink(Translation.Get("Aktivera"), "Activate", "Cases", new { id = Model.case_.Id, backUrl = Model.BackUrl }, new { @class="btn" })</li>                             
                                }

                                @if (SessionFacade.CurrentUser.MoveCasePermission == 1)
                                {                                
                                    <li><a data-toggle="modal" href="#divMoveCase">@Translation.Get("Flytta", Enums.TranslationSource.TextTranslation)</a></li>
                                    <!-- TODO special jцnkцpings kommun
                                    <li><a href="#" >Translation.Get("Flytta ärende till annan site", Enums.TranslationSource.TextTranslation)</a></li>
                                    -->
                                }
                                @if (SessionFacade.CurrentUser.CopyCasePermission == 1)
                                {     
                                    <li><a data-toggle="modal" href="#divCopyCase">@Translation.Get("Kopiera", Enums.TranslationSource.TextTranslation)</a></li>@*                           
                                    <li><a href="/cases/copy/@Model.case_.Id?customerId=@Model.case_.Customer_Id" >@Translation.Get("Kopiera", Enums.TranslationSource.TextTranslation)</a></li>*@
                                }

                                @if (SessionFacade.CurrentUser.FollowUpPermission == 1)
                                {
                                    if (Model.case_.FollowUpDate.HasValue)
                                    {
                                    <li><a href="/cases/followupRemove/@Model.case_.Id" >@Translation.Get("Ta bort uppföljning", Enums.TranslationSource.TextTranslation)</a></li>
                                    }
                                    else
                                    {
                                    <li><a href="/cases/followup/@Model.case_.Id" >@Translation.Get("Följ upp", Enums.TranslationSource.TextTranslation)</a></li>
                                    }
                                }

                                @if (Model.Languages != null && Model.Languages.Where(l => l.IsActive).ToList().Count > 1)
                                {
                                    var curLanguage = (Model.case_.Id == 0 ? SessionFacade.CurrentLanguageId : Model.case_.RegLanguage_Id);                               
                                    <li class="dropdown-submenu">
                                        <a href="#">
                                            @Translation.Get("Språk för E-mail")
                                        </a>
                                        <ul class="dropdown-menu">
                                            @foreach (var lang in Model.Languages.Where(l => l.IsActive).ToList())
                                            {
                                                var langNameId = "langItem" + lang.Id;
                                                <li>

                                                    <a id="@langNameId" class="langItem" href="#" onclick="ChangeCaseLanguageTo(@lang.Id,true);">@Translation.Get(lang.Name)
                                                        @if (lang.Id == curLanguage)
                                                        {
                                                            <i class='icon-ok'></i>
                                                        }
                                                    </a>                                                  
                                                </li>
                                            }
                                        </ul>
                                    </li>                                    
                                }
                                

@*
                            if (Html.MasterModel().CustomerSetting.ModuleChangeManagement == 1 && Model.case_.Change_Id == null)
                            {
                                <!--TODO kontroll av behцrighet -->
                                <li><a href="#">@Translation.Get("Skapa дndring", Enums.TranslationSource.TextTranslation)</a></li>
                            }
                            if (Html.MasterModel().CustomerSetting.ModuleOrder == 1 && ((SessionFacade.CurrentUser.OrderPermission > 0 || SessionFacade.CurrentUser.UserGroupId > 2)))
                            {
                                <!--TODO kontroll att order inte finns -->
                                <li><a href="#" >@Translation.Get("Skapa bestдllning", Enums.TranslationSource.TextTranslation)</a></li>
                            }
                            *@

                            </ul>
                        </div>
                    </li>
                    
                    <li id="btnCaseTemplate">
                        @Html.Partial("_CaseTemplateTree", Model.CaseTemplateTreeButton, t)
                    </li>

                }
                else
                {

                    if (SessionFacade.CurrentUser.ActivateCasePermission == 1 && Model.case_.FinishingDate.HasValue)
                    {                                
                        <li>@Html.ActionLink(Translation.Get("Aktivera"), "Activate", "Cases", new { id = Model.case_.Id, backUrl = Model.BackUrl }, new { @class="btn" })</li>                             
                    }

                }
            </ul>
        </div>
        <div class="pull-right">
            <ul class="secnav">
                <li><a href="@Url.Action("Case", "Print", new { caseId = @Model.case_.Id, customerId = @Model.case_.Customer_Id })" title="@Translation.Get("Skriv ut")" class="btn" target="_blank"><i class="icon-file"></i></a></li>
                @if (Html.MasterModel().CustomerSetting.ModuleInventory > 0)
                {                                                            
                    <li><a href="#" title="@Translation.Get("Visa inventarie", Enums.TranslationSource.TextTranslation)" class="btn"><i class="icon-th-large"></i></a></li>
                }
                <li><a onclick="UnLockCase('@Model.CaseLock.LockGUID')" href="@Model.case_.Id.GetUrlForNavigationBetweenCases()" title="@Translation.Get("Föregående ärende", Enums.TranslationSource.TextTranslation)" class="btn"><i class="icon-chevron-left"></i></a></li>
                <li><a onclick="UnLockCase('@Model.CaseLock.LockGUID')" href="@Model.case_.Id.GetUrlForNavigationBetweenCases(true)"  title="@Translation.Get("Nästa ärende", Enums.TranslationSource.TextTranslation)" class="btn"><i class="icon-chevron-right"></i></a></li>
            </ul>
        </div>
    </div>
    
    <div class="editmode">
        @Html.Partial("_Input", Model)
    </div>
    }
    <div id="divMoveCase" role="dialog" class="modal hide fade" aria-labelledby="myModalLabel" aria-hidden="true">
        @Html.Partial("_MoveCase", Model)
    </div>    
    <div id="divCopyCase" role="dialog" class="modal hide fade" aria-labelledby="myModalLabel" aria-hidden="true">
        @Html.Partial("_CopyCase", Model)
    </div>    
}