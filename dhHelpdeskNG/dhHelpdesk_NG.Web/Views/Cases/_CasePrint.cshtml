@using DH.Helpdesk.Web.Infrastructure.Extensions
@using ReportViewerForMvc
@using DH.Helpdesk.Common.Enums
@model DH.Helpdesk.Web.Models.Shared.ReportModel
      
<style type="text/css">
    table { page-break-inside:auto }
    tr    { page-break-inside:avoid; page-break-after:auto }
    thead { display:table-header-group }
    tfoot { display:table-footer-group }
</style>

<div id="CasePrintArea" >
    @if (Model != null && Model.CanShow)
    {
        var tempNewLine = "{{NEWLINE}}";
        <div id="PrintCaseDialog" class="modal modalprintA4P fade " style="display:none">
            <div class="modal-dialog">            
                <div class="modal-header" style="cursor: move; background-color:#e5e5e5;">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>                    
                    <h5> 
                        @if (Model.ShowPrintButton)
                        {
                            <span  id="headerCaption"> @Translation.Get("Ärende") @Translation.Get("skriv ut") </span>
                            <button style="float:right;margin-right:20px;" type="button" class="btn sendToPrinter" >@Translation.Get("skriv ut")</button>
                        }
                        else
                        {
                            <span id="headerCaption"> @Translation.Get("Ärende") @Translation.Get("info") </span>
                        }
                    </h5>
                </div>

                <div id="caseReportContainer" class="modal-body" style="align-content:center; ">
                    @*Enable it if you need to show Report Service Report (Need to change the controller as well)*@
                    @*@Html.ReportViewer(Model.Report)*@
                                                                              
                    @{                        
                        var user = Model.ReportData.Where(d => d.LineType == ReportLineTypes.User).SingleOrDefault();
                        var isFirstGroup = true;
                     }

                     <table class="printheader">
                        <tr>
                            <td >
                                @(user != null ? user.FieldValue : "")
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @DateTime.Now.ToLocalTime() 
                            </td>
                        </tr>
                    </table>
                                                         
                    <table border="1" style="border-color:black" class="printcase">
                        @foreach (var row in Model.ReportData.Where(d => d.LineType != ReportLineTypes.User))
                        {
                            var val = "";
                            if (string.IsNullOrEmpty(row.FieldValue))
                            {
                                val = " ";
                            }
                            else
                            {
                                val = row.FieldValue.AddCharacterInParts(50, Environment.NewLine, Environment.NewLine);
                            }
                            
                            if (row.LineType == ReportLineTypes.Group)
                            {
                                if (!isFirstGroup)
                                {
                                    <tr>
                                        <td style="width:20%; margin-left:20px;line-height:30px;">                                    
                                           <p> &nbsp; </p>
                                        </td>
                                        <td style="width:20%;word-wrap: break-word;line-height:30px;">
                                            <p>&nbsp;</p> 
                                        </td>
                                    </tr>                                                                      
                                }
                                isFirstGroup = false;
                            }
                            <tr>                                                             
                                <td style="width:20%;word-wrap: break-word; margin-left:20px;line-height:20px;" class="textbold @row.LineType">
                                   <p> @row.FieldCaption </p>                                
                                </td>                                                               
                                
                                @if (row.LineType == ReportLineTypes.File)
                                {
                                    var filesStr = val.Replace(Environment.NewLine, tempNewLine).RemoveHTMLTags();
                                    var files = filesStr.Split(new string[] { tempNewLine }, StringSplitOptions.None);
                                    <td style="width:80%; line-height:20px;" class="@row.LineType">                                    
                                        @foreach (var file in files.Where(f => !string.IsNullOrEmpty(f)).ToList())
                                        {
                                             <p> <img src="@Url.Content("~/Content/icons/ico-doc-black.png")" > @file.ForHtmlView() </p>
                                        }
                                    </td>
                                }
                                else
                                {                                    
                                    <td style="width:80%; word-wrap: break-word;line-height:20px;" class="@row.LineType">                                    
                                        <p> @val.Replace(Environment.NewLine, tempNewLine).RemoveHTMLTags().Replace(tempNewLine, Environment.NewLine).ForHtmlView()</p>
                                    </td>
                                }
                            </tr>                              
                        }
                       </table>
                                   
                </div>               
            </div>    
        </div>                         
    }
</div>

<script type="text/javascript">
    $(function () {
        $(".btn.sendToPrinter").click(function () {
            var contents = $("#caseReportContainer").html();
            var printFrame = $('<iframe />');
            printFrame[0].name = "printFrame";
            printFrame.css({ "position": "absolute", "top": "-1000000px" });
            $("body").append(printFrame);
            var frameDoc = printFrame[0].contentWindow ? printFrame[0].contentWindow : printFrame[0].contentDocument.document ? printFrame[0].contentDocument.document : printFrame[0].contentDocument;
            frameDoc.document.open();
            //new HTML document.
            frameDoc.document.write('<html><head>');
            frameDoc.document.write('</head><body>');
            //CSS files.
            var css1 = '@Url.Content("~/Content/css/bootstrap.css")';
            var css2 = '@Url.Content("~/Content/css/print.css")';

            frameDoc.document.write("<link rel='stylesheet' type='text/css' href='"+ css1 + "'>");
            frameDoc.document.write("<link rel='stylesheet' type='text/css' href='" + css2 + "'>");
            //contents:
            frameDoc.document.write(contents);
            frameDoc.document.write('</body></html>');
            frameDoc.document.close();
            setTimeout(function () {
                window.frames["printFrame"].focus();
                // IE11 and Firefox fix
                if (!frameDoc.document.execCommand('print', false, null)) {
                    window.frames["printFrame"].print();
                }
                printFrame.remove();
            }, 500);
        });
    });

    /*directly print after load*/
    var _isPopup = '@Model.PopupShow';
    if (_isPopup == 'False') {
        $(".btn.sendToPrinter").click();
    };

</script>