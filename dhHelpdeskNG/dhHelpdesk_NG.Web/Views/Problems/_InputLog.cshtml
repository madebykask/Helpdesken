@using DH.Helpdesk.Web.Infrastructure.Extensions.HtmlHelperExtensions
@model DH.Helpdesk.Web.Models.Problem.LogEditModel
@{
    ViewBag.Title = "";
}

@if (ViewContext.FormContext == null)
{
    ViewContext.FormContext = new FormContext();
}

<div class="container">
    <h4>@Translation.GetCoreTextTranslation("Loggpost")</h4>
    <div class="row">
        <div class="span12">
            <table>
                <tr>
                    <td class="span3">@Translation.GetCoreTextTranslation("Loggtext")
                    </td>
                    <td class="span9">
                        @Html.TextAreaFor(x => x.LogText)
                        @Html.ValidationMessageFor(x => x.LogText)
                    </td>
                </tr>
                <tr>
                    <td>@Translation.GetCoreTextTranslation("Visa i ärendelogg som")
                    </td>
                    <td>
                        @Html.CheckBoxFor(x => x.InternNotering, new { id = "notering_intern_checkBox" })
                        @Translation.GetCoreTextTranslation("Intern notering")
                        @Html.CheckBoxFor(x => x.ExternNotering, new { id = "notering_extern_checkBox" })
                        @Translation.GetCoreTextTranslation("Extern notering")
                    </td>
                </tr>
                <tr>
                    <td>
                        @Translation.GetCoreTextTranslation("Avslutsorsak")
                    </td>
                    <td>
                        <div id="divFinishingType" class="btn-group dropdown-menu-parent">
                            <div class="btn" id="divBreadcrumbs_FinishingType">
                                @(string.IsNullOrEmpty(Model.FinishingCause) ? Translation.GetCoreTextTranslation("--") : Model.FinishingCause)
                            </div>
                            <button class="btn dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu subddMenu parentddMenu" style="z-index:99999999999;">
                                <li><a href="#">@Translation.GetCoreTextTranslation("--")</a></li>
                                @Html.FinishingCauseDropdownButtonString(Model.FinishingCauses)
                            </ul>
                            @Html.HiddenFor(model => Model.FinishingCauseId)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        @Translation.GetCoreTextTranslation("Avslutsdatum")
                    </td>
                    <td>
                        @Html.EditorFor(m => m.FinishingDate, "DatePicker", new { id = "finishing_date_datepicker" })
                    </td>
                </tr>
                <tr>
                    <td>@Translation.GetCoreTextTranslation("Kopplade ärenden")
                    </td>
                    <td>
                        @Html.CheckBoxFor(x => x.FinishConnectedCases)
                        @Translation.GetCoreTextTranslation("Avsluta kopplade ärenden")
                    </td>
                </tr>
            </table>
            @Html.HiddenFor(x => x.Id)
        </div>
    </div>
</div>

<script>
    $("input:checkbox[id*='notering']").click(function () {
        $("input:checkbox[id*='notering']").not(this).attr("checked", false);
    });

    var $finishTypeContainer = $('#divFinishingType');
    var $finishTypeId = $("#FinishingCauseId");
    var $finishTypeBreadcrubs = $("#divBreadcrumbs_FinishingType");
    var $finishDate = $('#FinishingDate');

    $finishTypeContainer.find('ul.dropdown-menu li a').on('click', function (e) {
        e.preventDefault();
        var value = $(this).attr('value');
        $finishTypeBreadcrubs.text(window.getBreadcrumbs(this));
        $finishTypeId.val(value).trigger('change');
    });

    $finishTypeId.on('change', function (ev) {
        var value = $(ev.target).val();
        if (value == '' || value === undefined) {
            $finishDate.val('');
        } else {
            if ($finishDate.val() == '') {
                $finishDate.val(window.today());
            }
        }
    });

    $finishTypeId.find('.dropdown-submenu.DynamicDropDown_Up').off('mousemove').on('mousemove', function (event) {
        dynamicDropDownBehaviorOnMouseMove(event.target.parentElement);
    });

    initDynamicDropDowns();
    initDynamicDropDownsKeysBehaviour();

</script>
