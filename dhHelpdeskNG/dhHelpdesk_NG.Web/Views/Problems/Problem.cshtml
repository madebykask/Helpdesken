@using dhHelpdesk_NG.Web.Models.Problem
@model ProblemEditViewModel
@{
    ViewBag.Title = @Translation.Get("Problem", Enums.TranslationSource.TextTranslation);
}

<style>
    /* Styles for validation helpers
-----------------------------------------------------------*/
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

<div class="secnavs">
    <div class="pull-left">
        <ul class="secnav">
            @if (!Model.Problem.IsFinished)
            {
                <li id="menu1">
                    <input type="submit" value="@Translation.Get("Save Problem", Enums.TranslationSource.TextTranslation)" class="btn" onclick=" $('#problem_edit_form').submit(); "/>
                </li>
            }
            else
            {
                <li id="menu5">@Html.ActionLink(Translation.Get("Activate Problem", Enums.TranslationSource.TextTranslation), "Activate", new { id = Model.Problem.Id }, new { @class = "btn" })</li>
            }
            <li id="menu2">@Html.ActionLink(Translation.Get("Cancel", Enums.TranslationSource.TextTranslation), "Index", null, new { @class = "btn" })</li>
            @if (!Model.Problem.IsFinished)
            {
                <li id="menu3">@Html.ActionLink(Translation.Get("Delete Problem", Enums.TranslationSource.TextTranslation), "Delete", new { id = Model.Problem.Id }, new { @class = "btn" })</li>
                <li id="menu4" style="display: none">@Ajax.ActionLink(Translation.Get("Add New Log", Enums.TranslationSource.TextTranslation), "NewLog", "Problems", new { problemId = Model.Problem.Id }, new AjaxOptions { UpdateTargetId = "log_edit", OnSuccess = "updateForm()" }, new { @class = "btn" })</li>
            }
        </ul>
    </div>
</div>

<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="problem_tab">
            <li class="active">
                <a href="#fragment-1" onclick=" $('#menu4').hide(); ">@Translation.Get("Problem", Enums.TranslationSource.TextTranslation)</a>
            </li>
            <li>
                <a href="#fragment-2" onclick=" $('#menu4').show(); ">@Translation.Get("Log", Enums.TranslationSource.TextTranslation)</a>
            </li>
            <li>
                <a href="#fragment-3" onclick=" $('#menu4').hide(); ">@Translation.Get("Cases", Enums.TranslationSource.TextTranslation)</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment-1">
                @using (Html.BeginForm("Save", "Problems", FormMethod.Post, new { id = "problem_edit_form" }))
                {
                    @Html.Partial("_InputProblem", Model)
                }
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-2">
                @Html.Partial("LogGrid", Model.Logs)
                @if (!Model.Problem.IsFinished)
                {
                    <div id="log_edit">
                    </div>
                }
            </div>
            <div class="tab-pane tab-pane-border" id="fragment-3">
                @Html.Partial("CaseGrid", Model.Cases)
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.foldDownContainer .foldDownHeader').click(function () {
            $(this).next().slideToggle('slow');
            return false;
        }).next().show();
    });

    $.validator.setDefaults({
        ignore: ""
    });

    function updateForm() {
        $("#log_edit_form").each(function () { $.data($(this)[0], 'validator', false); });
        $.validator.unobtrusive.parse("#log_edit_form");

        $("div.input-append.date.dateie").datepicker();
    }

</script>
