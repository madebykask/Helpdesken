@using DH.Helpdesk.Common.Enums
@model DH.Helpdesk.Web.Models.Questionnaire.Output.CircularOverviewViewModel
@{
    ViewBag.Title = "";
}

<div class="secnavs fixed">
    <div class="pull-left">
        <ul class="secnav">
            <li id="menu1">
                <button class="btn" id="newCircular">@Translation.Get("Nytt utskick")</button>
            </li>
            <li id="menu2">
                @Html.ActionLink(Translation.Get("Avbryt"), "Index", "Questionnaire", new { @class = "btn" })
            </li>
            <li id="menu3" style="display: none;">
                <button value="@Translation.Get("Visa")" class="btn" id="async_subbut">@Translation.Get("Visa")</button>
            </li>
        </ul>
    </div>
</div>

<div class="content">
    <div class="container">
        <ul class="nav nav-tabs">
            <li class="active" id="circular_tab">
                <a href="#fragment-1">@Translation.Get("Utskick")</a>
            </li>
            <li class="" id="report_tab">
                <a href="#fragment-2">@Translation.Get("Rapporter")</a>
            </li>
        </ul>

        <div class="tab-content">
            <div id="fragment-1" class="tab-pane tab-pane-border active">
                <div class="container">
                    <div class="row">
                        <div class="span12">
                            @using (Ajax.BeginForm("SearchCirculars", null, new AjaxOptions { UpdateTargetId = "circulars_grid" }, new { id = "search_form" }))
                            {
                                @Html.HiddenFor(x => x.QuestionnaireId)
                                    
                                
                                            <label class="radio inline">@Translation.Get("Status"):</label>
                                            <label class="radio inline">
                                            @Html.RadioButtonFor(x => x.CircularStateId, CircularStateId.ReadyToSend, new { Name = "Show" })
                                            @Translation.Get("Klar att skicka")
                                            </label>
                                            <label class="radio inline">
                                            @Html.RadioButtonFor(x => x.CircularStateId, CircularStateId.Sent, new { Name = "Show" })
                                            @Translation.Get("Skickad")
                                            </label>
                                            <label class="radio inline">
                                            @Html.RadioButtonFor(x => x.CircularStateId, CircularStateId.All, new { Name = "Show" })
                                            @Translation.Get("Alla")
                                            </label>
                                        
                            }
                        </div>
                    </div>

                    <div id="circulars_grid">
                        @Html.Partial("CircularOverviewGrid", Model.CircularOverviewModels, new ViewDataDictionary { { "QuestionnaireId", @Model.QuestionnaireId }, { "StatusId", ViewData["StatusId"] } })
                    </div>
                </div>
            </div>

            <div id="fragment-2" class="tab-pane tab-pane-border">
                <div class="row">
                    <div class="span12">
                        @using (Ajax.BeginForm("Statistics", null, new AjaxOptions { UpdateTargetId = "statistics_grid" }, new { id = "statistics_search_form" }))
                        {
                            @Html.HiddenFor(x => x.QuestionnaireId)
                            
                            <table class="tableform">
                                <tr>
                                    <td class="span3">@Translation.Get("Utskick") @Translation.Get("Datum")</td>
                                    <td>@Html.EditorFor(m => m.ReportFilter.CircularCreatedDate.DateFrom, "DatePicker", new { id = "circularCreatedDateFrom_datepicker" })
                                        -
                                        @Html.EditorFor(m => m.ReportFilter.CircularCreatedDate.DateTo, "DatePicker", new { id = "circularCreatedDateTo_datepicker" })</td>
                                </tr>
                                <tr>
                                    @{
                            var circulars = new SelectList(Model.CircularOverviewModels.Where(x => x.State.Value == CircularStates.Sent), "Id", "CircularName");
                                        <td class="span3">@Translation.Get("Circular")</td>
                                        <td class="td-bottom-multiselect">@Html.DropDownListFor(m => m.ReportFilter.ConnectedCirculars, circulars, new { id = "circular_dropdown", multiple = "multiple", @class = "multiselect multiselect-search dropup" })</td>
                                    }
                                </tr>
                            </table>
                        }
                    </div>
                </div>

                <div id="statistics_grid">
                </div>

            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        $('input[name="Show"]').click(function () {
            $('#search_form').submit();
        });
        $('button[id="newCircular"]').click(function () {
            window.location.href = '@Url.Action("NewCircular", "Questionnaire", new { questionnaireId = Model.QuestionnaireId, backStatusId = "-0-"})'.replace('-0-', $('input[name=Show]:checked', '#search_form').val());
        });
    });

    $(function () {
        $('#async_subbut').click(function () {
            $('#statistics_search_form').submit();
        });
    });

    $('#report_tab').click(function () {
        $('#menu3').show();
    });

    $('#circular_tab').click(function () {
        $('#menu3').hide();
    });

</script>


