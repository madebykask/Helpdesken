@using DH.Helpdesk.Common.Enums
@model DH.Helpdesk.Web.Models.Questionnaire.Input.EditCircularModel
@{
    ViewBag.Title = "EditCircular";
}

@using (Html.BeginForm("EditCircular", "Questionnaire", FormMethod.Post, new { id = "circular_edit_form" }))
{
    <div class="secnavs fixed">
        <div class="pull-left">
            <ul class="secnav">
                <li>
                    <input type="submit" value="@Translation.Get("Save")" class="btn" />
                </li>
                <li>
                    @if (Model.State.Value != CircularStates.Sent)
                    {
                        @Html.ActionLink(Translation.Get("Ta bort"), "DeleteCircular", new { questionnaireId = Model.QuestionnaireId, stateId = Model.State, circularId = Model.Id }, new { @class = "btn deleteDialog", deleteDialogText = Translation.Get("Är du säker på att du vill ta bort aktuell post", Enums.TranslationSource.TextTranslation) + "?" })
                    }
                </li>
                <li>
                    <a href="@Url.Action("CircularOverview", "Questionnaire", new { questionnaireId = Model.QuestionnaireId, state = Model.State })" class="btn">
                        @Translation.Get("Avbryt")
                    </a>
                </li>
                <li>
                    @{
                        switch (Model.State.Value)
                        {
                            case CircularStates.ReadyToSend:
                                @Html.ActionLink(Translation.Get("Skicka Enkät"), "DeleteCircular", new { @class = "btn" })
                                break;
                            case CircularStates.Sent:
                                @Html.ActionLink(Translation.Get("Skicka påminnelse"), "DeleteCircular", new { @class = "btn" })
                                break;
                        }
                    }
                </li>
            </ul>
        </div>
    </div>

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.QuestionnaireId)
    @Html.HiddenFor(m => m.State)

    <div class="content">
        <div class="container">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#fragment-1">@Translation.Get("utskick")</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane tab-pane-border active" id="fragment-1">
                    <div class="container">
                        <h4>@Translation.Get("Urval")</h4>
                        <div class="row">
                            <div class="span12">
                                <table class="tableform">
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Namn"):
                                        </td>
                                        <td class="span9">
                                            @Html.EditorFor(model => model.CircularName)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Status"):
                                        </td>
                                        <td class="span9">
                                            @Model.State.GetDisplayValue()
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div id="case_grid_container">
                        @Html.Partial("_CircularPartOverviewWithDelete", Model.ConnectedCases, new ViewDataDictionary { { "QuestionnaireId", Model.QuestionnaireId } })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

