@using DH.Helpdesk.Common.Enums
@using DH.Helpdesk.Web
@model DH.Helpdesk.Web.Models.Questionnaire.Input.CircularModel
@{
    ViewBag.Title = "Circular";
}

<div class="secnavs fixed">
    <div class="pull-left">
        <ul class="secnav">
            <li>
                <button value="@Translation.GetCoreTextTranslation("Spara")" class="btn" id="subbut">@Translation.GetCoreTextTranslation("Spara")</button>
            </li>
            <li>
                <button value="@Translation.GetCoreTextTranslation("Skapa urval")" class="btn" id="async_subbut">@Translation.GetCoreTextTranslation("Skapa urval")</button>
            </li>
            <li>
                <a href="@Url.Action("CircularOverview", new { questionnaireId = Model.QuestionnaireId, statusId = (int?)ViewBag.BackStatusId})" class="btn">
                    @Translation.GetCoreTextTranslation("Avbryt")
                </a>
            </li>
            @if (Model.Id != 0)
            {
                <li>
                @if (Model.State.Value != CircularStates.Sent && Model.State.Value != CircularStates.None)
                {
                    @Html.ActionLink(Translation.GetCoreTextTranslation("Ta bort"), "DeleteCircular", new { questionnaireId = Model.QuestionnaireId, circularId = Model.Id, backStatusId = (int?)ViewBag.BackStatusId}, new { @class = "btn deleteDialog", deleteDialogText = Translation.Get("Är du säker på att du vill ta bort aktuell post", Enums.TranslationSource.TextTranslation) + "?" })
                }
                </li>
                <li>
                    @{
                    switch (Model.State.Value)
                    {
                        case CircularStates.ReadyToSend:
                                @Html.ActionLink(Translation.GetCoreTextTranslation("Skicka enkät"), "Send", new { circularId = Model.Id }, new { @class = "btn" })
                            break;
                        case CircularStates.Sent:
                                @Html.ActionLink(Translation.GetCoreTextTranslation("Skicka påminnelse"), "Remind", new { circularId = Model.Id }, new { @class = "btn" })
                            break;
                    }
                    }
                </li>
            }
        </ul>
    </div>
</div>

<div class="content">
    <div class="container">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#fragment-1">@Translation.GetCoreTextTranslation("Utskick")</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment-1">
                <div class="container">
                    <h4>@Translation.GetCoreTextTranslation("Urval")</h4>
                    <div class="row">
                        <div class="span12">
                            @using (Html.BeginForm("EditCircular", "Questionnaire", FormMethod.Post, new {id = "circular_new_form"}))
                            {
                                @Html.HiddenFor(m => m.Id)
                                @Html.HiddenFor(m => m.QuestionnaireId)
                                @Html.HiddenFor(m => m.State)
                                @Html.Hidden("backStatusId", (int?) ViewBag.BackStatusId)
                                @Html.HiddenFor(m => m.ExtraEmails, new { @readonly = "true", id = "extraEmailsInput" })
                                <div id="hiddenDiv" style="display: none"></div>
                                <table class="tableform">
                                    <tr>
                                        <td class="span5">
                                            @Translation.GetCoreTextTranslation("Namn")
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CircularName)
                                            @Html.ValidationMessageFor(model => model.CircularName)
                                        </td>
                                        <td class="span5">
                                            <a href="#add_extra_emails_btn" role="button" class="btn case-usersearch-btn" data-src="circular" data-toggle="modal">@Translation.GetCoreTextTranslation("Extra") @Translation.GetCoreTextTranslation("E-post").ToLower()</a>
                                        </td>
                                        <td class="span9">
                                            <div id="fakeExtraEmailsInput" contenteditable="true" class="case-usersearch-textarea case-send-emails-div"></div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span5">
                                            @Translation.GetCoreTextTranslation("Status")
                                        </td>
                                        <td class="span9">
                                            @Model.State.GetDisplayValue()
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="span9">
                                            @Translation.GetCoreTextTranslation("Ändring") @Translation.GetCoreTextTranslation("E-post mall")
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(m => m.MailTemplateId, Model.MailTemplates)
                                        </td>
                                    </tr>
                                </table>
                            }
                            @using (Ajax.BeginForm("CaseRowGrid", null, new AjaxOptions {UpdateTargetId = "case_grid_container"}, new {id = "circular_case_filter_form"}))
                            {
                                @Html.HiddenFor(m => m.QuestionnaireId)

                                <div>
                                    @Html.CheckBoxFor(x => x.CaseFilter.IsUniqueEmail)
                                    @Translation.GetCoreTextTranslation("Endast unika e-postadresser")

                                    <table class="tableform">
                                        <tr>
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Avslutsdatum")
                                            </td>
                                            <td class="span9">
                                                @Html.EditorFor(model => model.CaseFilter.FinishingDateFrom, "DatePicker", new {id = "finishing_date_from_datepicker"})
                                                &nbsp; - &nbsp;
                                                @Html.EditorFor(model => model.CaseFilter.FinishingDateTo, "DatePicker", new {id = "finishing_date_to_datepicker"})
                                            </td>
                                        </tr>

                                    </table>

                                    <table>
                                        <tr>
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Avdelning")
                                            </td>
                                            <td class="span9">
                                                @Html.ListBoxFor(model => model.CaseFilter.SelectedDepartments, Model.AvailableDepartments, new {multiple = "multiple", @class = "chosen-select"})
                                            </td>
                                        </tr>
                                    </table>

                                    <table>
                                        <tr>
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Ärendetyp")
                                            </td>
                                            <td class="span9">
                                                @Html.ListBoxFor(model => model.CaseFilter.SelectedCaseTypes, Model.AvailableCaseTypes, new {multiple = "multiple", @class = "chosen-select"})
                                            </td>
                                        </tr>
                                    </table>

                                    <table>
                                        <tr>
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Produktområde")
                                            </td>
                                            <td class="span9">
                                                @Html.ListBoxFor(model => model.CaseFilter.SelectedProductAreas, Model.AvailableProductArea, new {multiple = "multiple", @class = "chosen-select"})
                                            </td>
                                        </tr>
                                    </table>

                                    <table>
                                        <tr>
                                            <td class="span3">
                                                @Translation.GetCoreTextTranslation("Driftgrupp")
                                            </td>
                                            <td class="span9">
                                                @Html.ListBoxFor(model => model.CaseFilter.SelectedWorkingGroups, Model.AvailableWorkingGroups, new {multiple = "multiple", @class = "chosen-select"})
                                            </td>
                                        </tr>
                                    </table>

                                    <table class="tableform">
                                        <tr>
                                            <td class="span2">
                                                @Translation.GetCoreTextTranslation("Urval")
                                            </td>
                                            <td class="span6">
                                                @Translation.GetCoreTextTranslation("Selektera ut") @Html.DropDownListFor(model => model.CaseFilter.SelectedProcent, Model.Procent, new {style = "width: 60px"}) @Translation.Get("procent av tillgängliga ärenden")
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            }

                        </div>
                    </div>
                </div>
                @using (Html.BeginForm("EditCircular", "Questionnaire", FormMethod.Post, new {id = "circular_case_grid_form"}))
                {
                    <div id="case_grid_container">
                        @Html.Partial("_CircularPartOverviewWithDelete", Model.ConnectedCases, new ViewDataDictionary {{"QuestionnaireId", Model.QuestionnaireId}})
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@Html.Partial("~/Views/Cases/ModalDialogs/_ExtraEmails.cshtml", Model.ExtraEmailsModel)

<script type="text/javascript">
    $("#subbut").click(function () {
        if (!$("#circular_new_form").valid()) {
            return;
        }
        $.each($('#circular_case_grid_form input').serializeArray(), function (i, obj) {
            $('<input type="hidden">').prop(obj).appendTo($('#circular_new_form'));
        });
        $.each($('#circular_case_filter_form input:not(:hidden), select').serializeArray(), function (i, obj) {
            $('<input type="hidden">').prop(obj).appendTo($('#hiddenDiv'));
        });

        $("#circular_new_form").submit();
    });

    $("#async_subbut").click(function () {
        $("#circular_case_filter_form").submit();
    });
</script>
