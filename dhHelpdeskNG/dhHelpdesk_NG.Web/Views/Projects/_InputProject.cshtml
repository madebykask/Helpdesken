@model dhHelpdesk_NG.Web.Models.Projects.NewProjectViewModel
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.typing-0.2.0.min.js")"></script>

<div class="container">
    <h4>@Translation.Get("General", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="span12">
            <table>
                @if (Model.ProjectEditModel.Id != 0)
                {
                    <tr>
                        <td>@Html.LabelFor(x => x.ProjectEditModel.Id)
                        </td>
                        <td>
                            @Html.DisplayTextFor(x => x.ProjectEditModel.Id)
                        </td>
                    </tr>
                }
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.Name)
                    </td>
                    <td>
                        @Html.EditorFor(x => x.ProjectEditModel.Name)
                        @Html.ValidationMessageFor(x => x.ProjectEditModel.Name)
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <h4><i class="icon-plus-sign project-expand-button" style="cursor: pointer"></i>@Translation.Get("Other", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row expanded-project-content">
        <div class="span12">
            <table>
                <tr>
                    <td>@Html.LabelFor(x => Model.Users)
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.ProjectEditModel.ProjectManagerId, Model.Users, string.Empty)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.StartDate)
                    </td>
                    <td>
                        <div class="input-append date dateie" data-date="" id="dt-start">
                            @Html.EditorFor(x => x.ProjectEditModel.StartDate)<span class="add-on"><i class="icon-calendar"></i></span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.EndDate)
                    </td>
                    <td>
                        <div class="input-append date dateie" data-date="" id="dt-end">
                            @Html.EditorFor(x => x.ProjectEditModel.EndDate)<span class="add-on"><i class="icon-calendar"></i></span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.Description)
                    </td>
                    <td>
                        @Html.TextAreaFor(x => x.ProjectEditModel.Description)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.ProjectEditModel.ProjectCollaboratorIds)
                    </td>
                    <td>
                        @Html.ListBoxFor(x => x.ProjectEditModel.ProjectCollaboratorIds, Model.Users, new { id = "collaborators_dropdown", multiple = "multiple", @class = "multiselect multiselect-search" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.IsActive)
                    </td>
                    <td>
                        @Translation.Get("Active", Enums.TranslationSource.TextTranslation)
                        @Html.RadioButtonFor(x => x.ProjectEditModel.IsActive, true)

                        @Translation.Get("Finished", Enums.TranslationSource.TextTranslation)
                        @Html.RadioButtonFor(x => x.ProjectEditModel.IsActive, false)
                    </td>
                </tr>
                <tr>
                    <td>
                        <table id="case_files_table" class="tableform">
                            <tbody>
                                @if (Model.ProjectEditModel.ProjectFileNames != null && !Model.ProjectEditModel.ProjectFileNames.Any())
                                {
                                    for (var i = 0; i < Model.ProjectEditModel.ProjectFileNames.Count; i++)
                                    {
                                        var filename = Model.ProjectEditModel.ProjectFileNames[i];
                                    <tr>
                                        <td>
                                            <a href="@(Url.Action("DownloadFile", new RouteValueDictionary { { "id", "1" }, { "fileName", filename } }))">@filename</a>
                                        </td>
                                        <td>
                                            <a id="@string.Format("delete_casefile_button_{0}", i)" class="btn">@Translation.Get("Delete", Enums.TranslationSource.TextTranslation)</a>
                                        </td>
                                    </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        <a href="#upload_files_popup" role="button" class="btn" data-toggle="modal">@Translation.Get("Upload", Enums.TranslationSource.TextTranslation)</a>
                    </td>
                </tr>
            </table>
            @Html.HiddenFor(x => x.ProjectEditModel.Id)
        </div>
    </div>
</div>

<script type="text/javascript">

    $(".expanded-project-content").hide();
    $(function () {
        $(".project-expand-button").click(function () {
            event.stopPropagation();
            var $target = $(event.target);
            $(".expanded-project-content").toggle();

            if ($target.closest("i").hasClass('icon-minus-sign')) {
                $target.closest("i").removeClass('icon-minus-sign').addClass('icon-plus-sign');
            }
            else {
                $target.closest("i").removeClass('icon-plus-sign').addClass('icon-minus-sign');
            }
        });
    });

</script>

<div id="upload_files_popup" role="dialog" class="modal hide fade" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>&nbsp;</h3>
    </div>
    <div class="modal-body">
        <div id="uploader">
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">@Translation.Get("Close", Enums.TranslationSource.TextTranslation)</button>
    </div>
</div>

<script type="text/javascript">
    // Initialize the widget when the DOM is ready
    $(function () {
        // Setup html5 version
        $("#uploader").pluploadQueue({
            // General settings
            runtimes: 'html5,html4',
            url: '@this.Url.Action("UploadFile")',
            multipart_params: { projectId: '@Model.ProjectEditModel.GUID' },

            chunk_size: '1mb',
            rename: true,
            dragdrop: true,

            filters: {
                // Maximum file size
                max_file_size: '10mb',
            },

            // Resize images on clientside if we can
            resize: {
                width: 200,
                height: 200,
                quality: 90,
                crop: true // crop to exact dimensions
            },
        });
    });
</script>

