@using System.Web.Optimization
@model DH.Helpdesk.Web.Models.Projects.ProjectEditViewModel
@Scripts.Render("~/bundles/jquery-typing")

<div class="container">
    @Html.ValidationSummary()
    <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row">
        <div class="span12">
            <table>
                @if (Model.ProjectEditModel.Id != 0)
                {
                    <tr>
                        <td class="span3">@Html.LabelFor(x => x.ProjectEditModel.Id)
                        </td>
                        <td class="span9">
                            @Html.DisplayTextFor(x => x.ProjectEditModel.Id)
                        </td>
                    </tr>
                }
                <tr>
                    <td class="span3">@Html.LabelFor(x => x.ProjectEditModel.Name)
                    </td>
                    <td class="span9">
                        @Html.EditorFor(x => x.ProjectEditModel.Name)
                        @Html.ValidationMessageFor(x => x.ProjectEditModel.Name)
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <h4><i class='@(Model.ProjectEditModel.Id != 0 ? "icon-plus-sign project-expand-button" : "icon-minus-sign project-expand-button")' style="cursor: pointer"></i>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
    <div class="row expanded-project-content">
        <div class="span12">
            <table>
                <tr>
                    <td class="span3">@Translation.Get("Projektledare", Enums.TranslationSource.TextTranslation)
                    </td>
                    <td class="span9">
                        @Html.DropDownListFor(x => x.ProjectEditModel.ProjectManagerId, Model.Users, string.Empty)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.StartDate)
                    </td>
                    <td>
                        @Html.EditorFor(x => x.ProjectEditModel.StartDate, "DatePicker", new { id = "project-log-dt-start" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.EndDate)
                    </td>
                    <td>
                        @Html.EditorFor(x => x.ProjectEditModel.EndDate, "DatePicker", new { id = "project-log-dt-end" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.Description)
                    </td>
                    <td>
                        @Html.TextAreaFor(x => x.ProjectEditModel.Description)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(x => x.ProjectEditModel.ProjectCollaboratorIds)
                    </td>
                    <td>
                        @Html.ListBoxFor(x => x.ProjectEditModel.ProjectCollaboratorIds, Model.Users, new { id = "collaborators_dropdown", multiple = "multiple", @class = "chosen-select", data_placeholder = Translation.Get("Välj en eller flera", Enums.TranslationSource.TextTranslation) })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(x => x.ProjectEditModel.IsActive)
                    </td>
                    <td>
                        <label class="radio inline">
                        @Html.RadioButtonFor(x => x.ProjectEditModel.IsActive, true)
                        @Translation.Get("Pågående", Enums.TranslationSource.TextTranslation)
                        </label>
                        <label class="radio inline">
                        @Html.RadioButtonFor(x => x.ProjectEditModel.IsActive, false)
                        @Translation.Get("Avslutad", Enums.TranslationSource.TextTranslation)
                        </label>
                    </td>
                </tr>
                <tr>
                    <td class="span3">@Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation)
                    </td>
                    <td>
                        <div id="filesContainer">
                            @Html.Action("AttachedFiles", new { guid = Model.Guid, area = string.Empty })
                        </div>
                        <a href="#upload_files_popup" role="button" class="btn" data-toggle="modal">@Translation.Get("Bifogad fil", Enums.TranslationSource.TextTranslation)</a>
                    </td>
                </tr>
            </table>
            @Html.HiddenFor(x => x.ProjectEditModel.Id)
        </div>
    </div>
</div>

<script type="text/javascript">

    var currentId = '@Model.ProjectEditModel.Id'
    if (currentId != 0) {
        $(".expanded-project-content").hide();
    }
    
    $(function () {
        $(".project-expand-button").click(function () {
            event.stopPropagation();
            var $target = $(event.target);
            $(".expanded-project-content").toggle();

            if ($target.closest("i").hasClass('icon-minus-sign')) {
                $target.closest("i").removeClass('icon-minus-sign').addClass('icon-plus-sign');
            }
            else {
                $target.closest("i").removeClass('icon-plus-sign').addClass('icon-minus-sign');
            }
        });
    });

    // Initialize the widget when the DOM is ready
    $(function () {
        // Setup html5 version
        PluploadTranslation('@SessionFacade.CurrentLanguageId');

        $("#uploader").pluploadQueue({
            // General settings
            runtimes: 'html5,html4',
            url: '@Url.Action("UploadFile")',
            multipart_params: { guid: '@Model.Guid' },

            chunk_size: '1mb',
            rename: true,
            dragdrop: true,

            init: {
                FileUploaded: function (uploader, uploadedFile, responseContent) {
                    $('#filesContainer').html(responseContent.response);
                }
            },

            filters: {
                // Maximum file size
                max_file_size: '10mb',
            },

            // Resize images on clientside if we can
            resize: {
                width: 200,
                height: 200,
                quality: 90,
                crop: true // crop to exact dimensions
            },
        });
    });

    function PluploadTranslation(languageId) {
        if (languageId == 1) {
            plupload.addI18n({
                'Select files': 'Välj filer',
                'Add files to the upload queue and click the start button.': 'Lägg till filer till kön och tryck på start.',
                'Filename': 'Filnamn',
                'Status': 'Status',
                'Size': 'Storlek',
                'Add files': 'Lägg till filer',
                'Add files.': 'nnnnn',
                'Start upload': 'ssss',
                'Stop current upload': 'Stoppa uppladdningen',
                'Start uploading queue': 'Starta uppladdningen',
                'Drag files here.': 'Dra filer hit'
            });
        }

        if (languageId == 2) {
            plupload.addI18n({
                'Select files': 'Select files',
                'Add files to the upload queue and click the start button.': 'Add files to the upload queue and click the start button.',
                'Filename': 'Filename',
                'Status': 'Status',
                'Size': 'Size',
                'Add files': 'Add files',
                'Stop current upload': 'Stop current upload',
                'Start uploading queue': 'Start uploading queue',
                'Drag files here.': 'Drag files here.'
            });
        }

    }
    function deleteFile(guid, fileName) {
        $.post('@Url.Action("DeleteFile")', { guid: guid, fileName: fileName }, function (markup) {
            $('#filesContainer').html(markup);
        });
    }

</script>

<div id="upload_files_popup" role="dialog" class="modal hide fade" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>&nbsp;</h3>
    </div>
    <div class="modal-body">
        <div id="uploader">
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">@Translation.Get("Stäng", Enums.TranslationSource.TextTranslation)</button>
    </div>
</div>
