@model DH.Helpdesk.Web.Models.CaseSolutionInputViewModel
@using System.Web.UI.WebControls
@using DH.Helpdesk.BusinessData.Models.Case
@using DH.Helpdesk.BusinessData.OldComponents
@using DH.Helpdesk.Common.Enums.Settings
@using DH.Helpdesk.Common.Extensions.Integer
@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions
@using DH.Helpdesk.Web.Infrastructure.Extensions.HtmlHelperExtensions

@*@if (TempData["Error"] != null)
{
    <div class="alert alert-error">@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)
        @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
    </div>    
}*@


<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">

                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)
                                        <span class="mandatorystar">*</span>
                                    </td>
                                    <td class="span9">
                                        @Html.TextBoxFor(model => model.CaseSolution.Name, new { id = "Name", maxlength = "50" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseSolutionCategory_Id, Model.CsCategories, "")
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Användarinformation")</th>
                                </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ReportedBy.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.ReportedBy, new { id = "ReportedBy", maxlength = "40"})
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.UserNumber, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ReportedBy)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Department_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.Department_Id, Model.Departments, "", new { id = "Department"})
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Department, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Department_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("E-post", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            <input type="checkbox" name="casesolution.NoMailToNotifier" @(Model.CaseSolution.NoMailToNotifier == 1 ? "checked=checked" : "") value ="1" />
                                            <input type="hidden" name="casesolution.NoMailToNotifier" value="0" />
                                            &nbsp;@Translation.Get("Skicka ej mail till anmälaren", Enums.TranslationSource.TextTranslation)


                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Email)
                                        </td>

                                    </tr>
                                }                                
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Ärendeinformation")</th>
                                </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString())" >
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <div id="divCaseType" class="btn-group">
                                                <div class="btn" id="divBreadcrumbs_CaseType">@Model.ParantPath_CaseType</div>
                                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                    @Html.CaseTypeDropdownButtonString(Model.CaseTypes)
                                                </ul>
                                                @Html.HiddenFor(model => model.CaseSolution.CaseType_Id)

                                            </div>
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.CaseType, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.CaseType_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <div id="divProductArea" class="btn-group">
                                                <div class="btn" id="divBreadcrumbs_ProductArea">@Model.ParantPath_ProductArea</div>
                                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                    @Html.ProductAreaDropdownButtonString(Model.ProductAreas)
                                                </ul>
                                                @Html.HiddenFor(model => model.CaseSolution.ProductArea_Id)
                                            </div>
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ProductArea, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ProductArea_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Category_Id.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(model => model.CaseSolution.Category_Id, Model.Categories, "", new { id = "Category"})
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Category, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Category_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Caption.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CaseSolution.Caption, new { id = "Caption", maxlength = "60" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Caption, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Caption)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr  style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Description.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Description, new { id = "Description", style = "height:100px;", maxlength = "2000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Description, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Description)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Miscellaneous, new { id = "Miscellaneous", style = "height:100px;", maxlength = "2000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Miscellaneous, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Miscellaneous)
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Övrigt")</th>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString())">
                                    <td class="span3">
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseWorkingGroup_Id, Model.CaseWorkingGroups, "", new { id = "WorkingGroup"})
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.WorkingGroup, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.WorkingGroup_Id)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.PerformerUser_Id, Model.PerformerUsers, "", new { id = "PerformerUser" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Administrator, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Performer_User_Id)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Priority_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Priority_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Priority_Id, Model.Priorities, "", new { id = "Priority" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Priority, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Priority_Id)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Projekt", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Project_Id, Model.Projects, "", new { id = "Project" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Project)
                                    </td>
                                </tr>
                                 <tr>
                                    <th colspan="3" class="header">@Translation.Get("Logg")</th>
                                </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Extern notering", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_External, new { style = "height:100px;", maxlength = "1500" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ExternalLogNote, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.tblLog_Text_External)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Intern notering", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_Internal, new { style = "height:100px;", maxlength = "1000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InternalLogNote, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.tblLog_Text_Internal)
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td>
                                        @Translation.Get("Avslutsorsak", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        <div id="divFinishingCause" class="btn-group">
                                            <div class="btn" id="divBreadcrumbs_FinishingCause">@Model.Finishing_Cause_Path</div>
                                            <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="#" value="">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                @Html.FinishingCauseDropdownButtonString(Model.FinishingCauses)
                                            </ul>
                                            @Html.HiddenFor(model => model.CaseSolution.FinishingCause_Id)
                                        </div>
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.FinishingCause, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ClosingReason)
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
           @*         <h4>@Translation.Get("Ärendeinformation", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Logg", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                               
                            </table>
                        </div>
                    </div>*@
                    <h4>@Translation.Get("Säkerhet", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>@Translation.Get("Ärendemallen är endast tillgänglig för", Enums.TranslationSource.TextTranslation)
                                    <td class="span3">
                                        <b>@Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)</b>
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.WorkingGroup_Id, Model.WorkingGroups, "")
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <h4>
                        <input type="checkbox" id="chkSchedule" name="Schedule" @(Model.Schedule.ToBool() ? "checked='checked'" : "")  value="1" style="vertical-align:top"  />
                        <input type="hidden" name="Schedule" value="0" />
                        @Translation.Get("Schema", Enums.TranslationSource.TextTranslation)
                    </h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform" border="0">
                                <tr>
                                    <td class="span3"></td>

                                    @* <td class="span9">
                                      
                                    </td>*@

                                </tr>
                                <tr id="scheduleOptions" style="@(Model.Schedule.ToBool() ? "display:block" : "display:none")">
                                    <td>
                                        <label style="width: 100px;"></label>
                                        <!-- This is for cell width -->
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 1 ? "checked='checked'" : "") id="optScheduleType1" value="1" />
                                        @Translation.Get("Varje dag", Enums.TranslationSource.TextTranslation)
                                        <br />
                                        <br />
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 2 ? "checked='checked'" : "") id="optScheduleType2" value="2" />
                                        @Translation.Get("Varje vecka", Enums.TranslationSource.TextTranslation)
                                        <br />
                                        <br />
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 3 ? "checked='checked'" : "") id="optScheduleType3" value="3" />
                                        @Translation.Get("Varje månad", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <!-- ******************************* DAY ************************************** -->
                                    <td id="chosenDay" class="chDay" style="display: none; margin-left: 10px;">
                                        <label style="width: 180px;"></label>
                                        <!--This is for cell width -->
                                        @Translation.Get("Starttid", Enums.TranslationSource.TextTranslation):  
                                        <br />
                                        <select name="ScheduleTime" style="margin-left: 38px; width: 80px;">
                                            @for (int i = 0; i < 24; i++)
                                            {
                                                <option  @(Model.ScheduleTime == i ? "selected='selected'" : "") value="@i">@i.ToString().PadLeft(2, '0'):00</option>
                                            }
                                        </select>

                                        <br />
                                        @Translation.Get("Bevakningsdatum", Enums.TranslationSource.TextTranslation):
                                        <br />
                                        @Translation.Get("Datum", Enums.TranslationSource.TextTranslation)
                                        +
                                        <select name="ScheduleWatchDate" style="width: 80px;">
                                            @for (int i = 0; i <= 20; i++)
                                            {
                                                <option  @(Model.ScheduleWatchDate == i ? "selected='selected'" : "") value="@i">@i</option>
                                            }
                                        </select>
                                        @Translation.Get("dagar", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <!-- ********************************* WEEK ************************************* -->
                                    <td id="chosenWeek" class="chWeek" style="display: none;">
                                        <br />
                                        <label style="width: 150px;"></label>
                                        <!-- This is for cell width -->
                                        @Translation.Get("Dagar i veckan", Enums.TranslationSource.TextTranslation):                                        
                                        <br />
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Måndag", Enums.TranslationSource.TextTranslation)   &nbsp;                                     
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Tisdag", Enums.TranslationSource.TextTranslation)   &nbsp;                                     
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Onsdag", Enums.TranslationSource.TextTranslation)    &nbsp;                                    
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("Torsdag", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <br />
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Fredag", Enums.TranslationSource.TextTranslation) &nbsp;&nbsp;&nbsp;&nbsp;                                   
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Lördag", Enums.TranslationSource.TextTranslation)    &nbsp;                                    
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Söndag", Enums.TranslationSource.TextTranslation)&nbsp;
                                    </td>
                                    <!-- ********************************* MONTH ************************************* -->
                                    <td id="chosenMonth" class="chMonth" style="display: none;">
                                        <label style="width: 500px;"></label>
                                        <!-- This is for cell width -->
                                        <input type="radio" name="ScheduleMonthly" @(Model.ScheduleMonthlyOrder == 0 ? "checked='checked'" : "") id="optday" value="1" style="vertical-align:top"/>
                                        @Translation.Get("Dag", Enums.TranslationSource.TextTranslation):
                                        <select name="ScheduleMonthlyDay" style="width: 85px;" id="cbo0">
                                            @for (int i = 1; i <= 31; i++)
                                            {     
                                                <option @(Model.ScheduleDays == i.ToString() ? "selected='selected'" : "") value="@i">@i</option>
                                            }
                                        </select>
                                        <br />
                                        <input type="radio" name="ScheduleMonthly" onchange="click()+" @(Model.ScheduleMonthlyOrder != 0 ? "checked='checked'" : "") id="optthe"  value="2" style="vertical-align:top"/>
                                        @Translation.Get("Den", Enums.TranslationSource.TextTranslation):
                                        <select name="ScheduleMonthlyOrder" style="width: 85px;" id="cbo1">
                                            <option value="1" @(Model.ScheduleMonthlyOrder == 1 ? "selected='selected'" : "")>@Translation.Get("första", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="2" @(Model.ScheduleMonthlyOrder == 2 ? "selected='selected'" : "")>@Translation.Get("andra", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="3" @(Model.ScheduleMonthlyOrder == 3 ? "selected='selected'" : "")>@Translation.Get("tredje", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="4" @(Model.ScheduleMonthlyOrder == 4 ? "selected='selected'" : "")>@Translation.Get("fjärde", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="5" @(Model.ScheduleMonthlyOrder == 5 ? "selected='selected'" : "")>@Translation.Get("sista", Enums.TranslationSource.TextTranslation)</option>
                                        </select>
                                        <select name="ScheduleMonthlyWeekday" style="width: 110px;" id="cbo2">
                                            <option value="1" @(Model.ScheduleMonthlyWeekday == 1 ? "selected='selected'" : "")>@Translation.Get("Måndagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="2" @(Model.ScheduleMonthlyWeekday == 2 ? "selected='selected'" : "")>@Translation.Get("Tisdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="3" @(Model.ScheduleMonthlyWeekday == 3 ? "selected='selected'" : "")>@Translation.Get("Onsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="4" @(Model.ScheduleMonthlyWeekday == 4 ? "selected='selected'" : "")>@Translation.Get("Torsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="5" @(Model.ScheduleMonthlyWeekday == 5 ? "selected='selected'" : "")>@Translation.Get("Fredagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="6" @(Model.ScheduleMonthlyWeekday == 6 ? "selected='selected'" : "")>@Translation.Get("Lördagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="7" @(Model.ScheduleMonthlyWeekday == 7 ? "selected='selected'" : "")>@Translation.Get("Söndagen", Enums.TranslationSource.TextTranslation)</option>
                                        </select>
                                        <br />
                                        @Translation.Get("Månader", Enums.TranslationSource.TextTranslation):
                                        <br />
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Januari", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Februari", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Mars", Enums.TranslationSource.TextTranslation)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("April", Enums.TranslationSource.TextTranslation)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Maj", Enums.TranslationSource.TextTranslation)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Juni", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <br />
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Juli", Enums.TranslationSource.TextTranslation)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",8,") >= 0 ? "checked='checked'" : "") value="8" />
                                        @Translation.Get("Augusti", Enums.TranslationSource.TextTranslation)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",9,") >= 0 ? "checked='checked'" : "") value="9" />
                                        @Translation.Get("September", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",10,") >= 0 ? "checked='checked'" : "") value="10" />
                                        @Translation.Get("Oktober", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",11,") >= 0 ? "checked='checked'" : "") value="11" />
                                        @Translation.Get("November", Enums.TranslationSource.TextTranslation)&nbsp;
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",12,") >= 0 ? "checked='checked'" : "") value="12" />
                                        @Translation.Get("December", Enums.TranslationSource.TextTranslation)&nbsp; 
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.CaseSolution.Customer_Id)
                            @Html.HiddenFor(model => model.CaseSolution.Id)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    $('#divFinishingCause ul.dropdown-menu li a').click(function (e) {
        e.preventDefault();
        var val = $(this).attr('value');
        $("#divBreadcrumbs_FinishingCause").text(getBreadcrumbs(this));
        $("#CaseSolution_FinishingCause_Id").val(val);
    });

    $('#divCaseType ul.dropdown-menu li a').click(function (e) {
        e.preventDefault();
        var val = $(this).attr('value');
        $("#divBreadcrumbs_CaseType").text(getBreadcrumbs(this));
        $("#CaseSolution_CaseType_Id").val(val);
    });

    $('#divProductArea ul.dropdown-menu li a').click(function (e) {
        e.preventDefault();
        var val = $(this).attr('value');
        $("#divBreadcrumbs_ProductArea").text(getBreadcrumbs(this));
        $("#CaseSolution_ProductArea_Id").val(val);
    });

    // enable/disable correct choices in schedule  
    $(document).ready(function () {
        if (document.getElementById("optday").getAttribute('checked') == "'checked'")
            SetDayEnable();
        else
            SetWeekEnable();
    });

    $(function () {
        $("#optday").click(function () {
            SetDayEnable();
        });
    });

    $(function () {
        $("#optthe").click(function () {
            SetWeekEnable();
        });
    });

    function SetDayEnable() {
        document.getElementById("cbo0").removeAttribute('disabled');
        document.getElementById("cbo1").setAttribute('disabled', true);
        document.getElementById("cbo2").setAttribute('disabled', true);
    }

    function SetWeekEnable() {
        document.getElementById("cbo0").setAttribute('disabled', true);
        document.getElementById("cbo1").removeAttribute('disabled');
        document.getElementById("cbo2").removeAttribute('disabled');
    }

    // Setfocus for Required fields
    function SetFocus(iObject) {
        //alert(iObject);
        document.getElementById(iObject).focus();
    }

    var checkScheduleChange = function () {
        if ($('#optScheduleType1').is(':checked')) {
            $(".chDay").toggle($("[name$=ScheduleType]").index($('#optScheduleType1')) == 0);
            $('.chWeek, .chMonth').hide();
        }
        else if ($('#optScheduleType2').is(':checked')) {
            $('.chDay, .chWeek').toggle($("[name$=ScheduleType]").index($('#optScheduleType2')) == 1);
            $('.chMonth').hide();
        }
        else if ($('#optScheduleType3').is(':checked')) {
            $('.chDay, .chMonth').toggle($("[name$=ScheduleType]").index($('#optScheduleType3')) == 2);
            $('.chWeek').hide();
        }
    }

    $(function () {
        $("#chkSchedule").click(function () {
            $("#scheduleOptions").toggle();
        });

        checkScheduleChange();
        $("[name$=ScheduleType]").change(checkScheduleChange);
    });


    var validator = $("#target").validate({
        ignore: "",
        rules: {
            "CaseSolution.Name": {
                required: true
            }
        },
        messages: {
            "CaseSolution.Name": {
                required: "@Translation.Get("Du måste ange ett namn på ärendemallen", Enums.TranslationSource.TextTranslation)"
                }
            },
        submitHandler: function (form) {
            form.submit();
        }
    });

</script>
