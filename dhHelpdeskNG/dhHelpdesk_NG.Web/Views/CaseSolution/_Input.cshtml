@model DH.Helpdesk.Web.Models.CaseSolution.CaseSolutionInputViewModel
@using System.Web.Optimization
@using System.Web.UI.WebControls
@using DH.Helpdesk.BusinessData.Models.Case
@using DH.Helpdesk.BusinessData.OldComponents
@using DH.Helpdesk.Common.Enums.Settings
@using DH.Helpdesk.Common.Extensions.Integer
@using DH.Helpdesk.Web.Infrastructure
@using DH.Helpdesk.Web.Infrastructure.Extensions
@using DH.Helpdesk.Web.Infrastructure.Extensions.HtmlHelperExtensions

@Scripts.Render("~/bundles/casetemplates/edit")
<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">

                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)
                                        <span class="mandatorystar">*</span>
                                    </td>
                                    <td class="span9">
                                        @Html.TextBoxFor(model => model.CaseSolution.Name, new { id = "Name", maxlength = "50" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseSolutionCategory_Id, Model.CsCategories, "")
                                    </td>
                                </tr>
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Ersätt alltid befintliga värden", SessionFacade.CurrentLanguageId)
                                    </td>
                                    <td class="span4">
                                        <input type="checkbox" name="CaseSolution.OverWritePopUp" @(Model.CaseSolution.OverWritePopUp == 1 ? "checked=checked" : "") value="1" class="switchcheckbox" />
                                            <input type="hidden" name="CaseSolution.OverWritePopUp" value="0" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa på självservice", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="checkbox" style="padding-left: 20px">
                                        <input type="checkbox" name="Casesolution.ShowInSelfService" @(Model.CaseSolution.ShowInSelfService == true ? "checked=checked" : "") value ="true" />
                                        <input type="hidden" name="Casesolution.ShowInSelfService" value="0" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa på ärendeöversikten", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="checkbox" style="padding-left: 20px">
                                        <input type="checkbox" name="Casesolution.ShowOnCaseOverview" @(Model.CaseSolution.ShowOnCaseOverview != 0 ? "checked=checked" : "") value ="1" />
                                        <input type="hidden" name="Casesolution.ShowOnCaseOverview" value="0" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa på ärende", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="checkbox" style="padding-left: 20px">
                                        <input type="checkbox" name="Casesolution.ShowInsideCase" @(Model.CaseSolution.ShowInsideCase != 0 ? "checked=checked" : "") value ="1" />
                                        <input type="hidden" name="Casesolution.ShowInsideCase" value="0" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Aktiv", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="checkbox" style="padding-left: 20px">
                                        <input type="checkbox" name="Casesolution.Status" @(Model.CaseSolution.Status != 0 ? "checked=checked" : "") value ="1" />
                                        <input type="hidden" name="Casesolution.Status" value="0" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Koppla till", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                       @Html.DropDownListFor(model => model.CaseSolution.ConnectedButton, Model.ButtonList, "")
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                     <h4>@Translation.Get("Användarinformation", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                            
                                    </td>
                                    <td class="span9">                                        
                                    </td>
                                    <td class="span9">                                        
                                        @Translation.Get("Denna inställning gäller bara på nytt ärende", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr>
                                    @*<th colspan="3" class="header">@Translation.Get("Användarinformation")</th>*@
                                    @{  var myIndex = 0;
                                        var curId = "";
                                        foreach (var cs in Model.CaseSolutionSettingModels)
                                        {
                                            curId = "hide_" + cs.CaseSolutionField; 
                                            <input type ="hidden" name ="CaseSolutionSettingModels[@myIndex].id" value ="@cs.Id" />
                                            <input type ="hidden" name ="CaseSolutionSettingModels[@myIndex].CaseSolutionField" value ="@cs.CaseSolutionField" />
                                            <input type ="hidden" name ="CaseSolutionSettingModels[@myIndex].CaseSolutionMode" value ="@cs.CaseSolutionMode" id="@curId" />
                                            myIndex = myIndex + 1;
                                        }
                                    }
                                </tr>
                                
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ReportedBy.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.ReportedBy, new { id = "ReportedBy", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.UserNumber, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ReportedBy)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Persons_Name.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.PersonsName, new { id = "PersonsName", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.PersonsName, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Persons_Name)
                                        </td>
                                    </tr>
                                }

                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.PersonsEmail, new { id = "PersonsEmail", maxlength = "100" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.PersonsEmail, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Persons_EMail)
                                        </td>
                                    </tr>
                                 }

                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Informera anmälaren", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            <input type="checkbox" name="Casesolution.NoMailToNotifier" @(Model.CaseSolution.NoMailToNotifier == 1 ? "checked=checked" : "") value ="1" />
                                            <input type="hidden" name="Casesolution.NoMailToNotifier" value="0" />
                                            &nbsp;@Translation.Get("Skicka mail till anmälaren", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Email, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Persons_EMail)
                                        </td>

                                    </tr>
                                }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.PersonsPhone, new { id = "Persons_Phone", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.PersonsPhone, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Persons_Phone)
                                        </td>
                                    </tr>
                                 }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.PersonsCellPhone, new { id = "PersonsCellPhone", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.PersonsCellPhone, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Persons_CellPhone)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Region_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.Region_Id, Model.Regions, "", new { id = "Region" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Region, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Region_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Department_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">                                            
                                            @Html.DropDownListFor(model => model.CaseSolution.Department_Id, Model.Departments, "", new { id = "Department" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Department, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Department_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.OU_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.OU_Id, Model.OUs, "", new { id = "OU" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.OU, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.OU_Id)
                                        </td>
                                    </tr>
                                }

                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CostCentre.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.CostCentre.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.CostCentre, new { id = "CostCentre", maxlength = "50" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.CostCentre, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.CostCentre)
                                        </td>
                                    </tr>
                                } 

                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Place.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Place.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.Place, new { id = "Place", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Place, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Place)
                                        </td>
                                    </tr>
                                 }                                                                
                              
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.UserCode.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.UserCode.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.UserCode, new { id = "UserCode", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Usercode, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.UserCode)
                                        </td>
                                    </tr>
                                 }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.UpdateNotifierInformation.ToString())">
                                        <td class="span3">
                                            @Translation.Get("Spara användaruppgifter", SessionFacade.CurrentLanguageId)
                                        </td>
                                        <td class="span4">
                                            <input type="checkbox" name="CaseSolution.UpdateNotifierInformation" @(Model.CaseSolution.UpdateNotifierInformation == 1 ? "checked=checked" : "") value="1" class="switchcheckbox" />
                                                <input type="hidden" name="CaseSolution.UpdateNotifierInformation" value="0" />
                                        </td>
                                        <td class="span9">
                                                @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.UpdateNotifierInformation, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.UpdateNotifierInformation)
                                            </td>
                                    </tr>
                                 }

                                 

                                @*IsABout*@
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Angående")</th>
                                </tr> 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_ReportedBy, new { id = "IsAbout_ReportedBy", maxlength = "40" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_ReportedBy, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_ReportedBy)
                                        </td>
                                    </tr>
                                 }   
                                                                  
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_PersonsName, new { id = "IsAbout_PersonsName", maxlength = "50" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_PersonsName, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Persons_Name)
                                        </td>
                                    </tr>
                                 }   
                                                               
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_PersonsEmail, new { id = "IsAbout_PersonsEmail", maxlength = "100" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_PersonsEmail, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Persons_EMail)
                                        </td>
                                    </tr>
                                 }   
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_PersonsPhone, new { id = "IsAbout_PersonsPhone", maxlength = "50" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_PersonsPhone, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Persons_Phone)
                                        </td>
                                    </tr>
                                 }   
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_PersonsCellPhone, new { id = "IsAbout_PersonsCellPhone", maxlength = "30" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_PersonsCellPhone, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Persons_CellPhone)
                                        </td>
                                    </tr>
                                 }   
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Region_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.IsAbout_Region_Id, Model.IsAbout_Regions, "", new { id = "IsAbout_Region" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_Region_Id, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Region_Id)
                                        </td>
                                    </tr>
                                 }
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Department_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">                                            
                                            @Html.DropDownListFor(model => model.CaseSolution.IsAbout_Department_Id, Model.IsAbout_Departments, "", new { id = "IsAbout_Department" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_Department_Id, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Department_Id)
                                        </td>
                                    </tr>
                                 }
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                   <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_OU_Id.ToString())">
                                            <td class="span3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                            </td>
                                            <td class="span9">
                                                @Html.DropDownListFor(model => model.CaseSolution.IsAbout_OU_Id, Model.IsAbout_OUs, "", new { id = "IsAbout_OU" })
                                            </td>
                                            <td class="span9">
                                                @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_OU_Id, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.OU_Id)
                                            </td>
                                    </tr>
                                 }
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_Place.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_Place.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_Place, new { id = "IsAbout_Place", maxlength = "100" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_Place, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_Place)
                                        </td>
                                    </tr>
                                 }   
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_CostCentre.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_CostCentre.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_CostCentre, new { id = "IsAbout_CostCentre", maxlength = "50" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_CostCentre, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_CostCentre)
                                        </td>
                                    </tr>
                                 }
                                 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.IsAbout_UserCode.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.IsAbout_UserCode.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.IsAbout_UserCode, new { id = "IsAbout_UserCode", maxlength = "20" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.IsAbout_UserCode, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.IsAbout_UserCode)
                                        </td>
                                    </tr>
                                 }   
                                 
                                @*/IsABout*@
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Datorinformation")</th>
                                </tr> 
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.InventoryNumber, new { id = "InventoryNumber", maxlength = "20" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InventoryNumber, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.InventoryNumber)
                                        </td>
                                    </tr>
                                 }   
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.InventoryType, new { id = "InventoryType", maxlength = "250" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InventoryType, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ComputerType_Id)
                                        </td>
                                    </tr>
                                 }   
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.InventoryLocation, new { id = "InventoryLocation", maxlength = "250" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InventoryLocation, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.InventoryLocation)
                                        </td>
                                    </tr>
                                 } 
                                                                      
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Ärendeinformation")</th>
                                </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer.ToString())" >
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.RegistrationSource, Model.RegistrationSources, "", new { id = "RegistrationSource" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.RegistrationSourceCustomer, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.RegistrationSourceCustomer)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString())" >
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <div id="divCaseType" class="btn-group">
                                                <div class="btn" id="divBreadcrumbs_CaseType">@Model.ParantPath_CaseType</div>
                                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                    @Html.CaseTypeDropdownButtonString(Model.CaseTypes)
                                                </ul>
                                                @Html.HiddenFor(model => model.CaseSolution.CaseType_Id)

                                            </div>
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.CaseType, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.CaseType_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <div id="divProductArea" class="btn-group">
                                                <div class="btn" id="divBreadcrumbs_ProductArea">@Model.ParantPath_ProductArea</div>
                                                <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                    @Html.ProductAreaDropdownButtonString(Model.ProductAreas)
                                                </ul>
                                                @Html.HiddenFor(model => model.CaseSolution.ProductArea_Id)
                                            </div>
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ProductArea, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ProductArea_Id)
                                        </td>
                                    </tr>
                                }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.System_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.System_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.System_Id, Model.Systems, "", new { id = "System" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.System, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.System_Id)
                                        </td>
                                    </tr>
                                 }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.Urgency_Id, Model.Urgencies, "", new { id = "Urgency" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Urgency, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Urgency_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Impact_Id.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Impact_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.Impact_Id, Model.Impacts, "", new { id = "Impact" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Impact, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Impact_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Category_Id.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(model => model.CaseSolution.Category_Id, Model.Categories, "", new { id = "Category" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Category, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Category_Id)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString())">
                                        <td>
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                            <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.Supplier_Id, Model.Suppliers, "", new { id = "Supplier" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Supplier, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Supplier_Id)
                                        </td>
                                   </tr>
                                }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.InvoiceNumber, new { id = "InvoiceNumber", maxlength = "50" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InvoiceNumber, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.InvoiceNumber)
                                        </td>
                                    </tr>
                                 }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.ReferenceNumber, new { id = "ReferenceNumber", maxlength = "200" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ReferenceNumber, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ReferenceNumber)
                                        </td>
                                    </tr>
                                 }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Caption.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CaseSolution.Caption, new { id = "Caption", maxlength = "60" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Caption, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Caption)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr  style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Description.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Description, new { id = "Description", style = "height:100px;", maxlength = "2000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Description, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Description)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Miscellaneous, new { id = "Miscellaneous", style = "height:100px;", maxlength = "2000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Miscellaneous, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Miscellaneous)
                                        </td>
                                    </tr>
                                }
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @*@if (Model.CaseSolution.ContactBeforeAction == 1)
                                            {                                                
                                                *@<input type="checkbox" name="CaseSolution.ContactBeforeAction" @(Model.CaseSolution.ContactBeforeAction == 1 ? "checked=checked" : "") value="1" class="switchcheckbox" />
                                                <input type="hidden" name="CaseSolution.ContactBeforeAction" value="0" />
                                            @*}
                                            else
                                            {                                            
                                                @Model.CaseSolution.ContactBeforeAction.IntToYES_NO()
                                                @Html.HiddenFor(model => model.CaseSolution.ContactBeforeAction)
                                            }*@
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ContactBeforeAction, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ContactBeforeAction)
                                        </td>
                                    </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.SMS.ToString())">
                                            <td>
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.SMS.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                            </td>
                                            <td class="checkbox" style="padding-left: 20px">
                                                <input type="checkbox" name="Casesolution.SMS" @(Model.CaseSolution.SMS == 1 ? "checked=checked" : "") value ="1" />
                                                <input type="hidden" name="Casesolution.SMS" value="0" />
                                            </td>
                                            <td class="span9">
                                                @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.SMS, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.SMS)
                                            </td>

                                        </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Available.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Available.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CaseSolution.Available, new { id = "Available", maxlength = "60" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Available, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Available)
                                        </td>
                                    </tr>
                                }
                                 @if (Model.CaseFieldSettings.Count() != 0)
                                 {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Cost.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Cost.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <table>
                                                <tr>
                                                    <td>@Translation.Get("Artikelkostnad", SessionFacade.CurrentLanguageId)<br />
                                                        @Html.TextBoxFor(model => model.CaseSolution.Cost, new { maxlength = "7", Class = "inputw50" })
                                                    </td>
                                                    <td>@Translation.Get("Övrig kostnad", SessionFacade.CurrentLanguageId)<br />
                                                        @Html.TextBoxFor(model => model.CaseSolution.OtherCost, new { maxlength = "7", Class = "inputw50" })
                                                    </td>
                                                    <td>@Translation.Get("Valuta", SessionFacade.CurrentLanguageId)<br />
                                                        <select id="Casesolution.Currency" name="Casesolution.Currency" class="inputw100">
                                                            <option value="">&nbsp;</option>
                                                            @if (Model.currencies != null)
                                                            {
                                                                foreach (var e in Model.currencies)
                                                                {
                                                                <option value="@e.Code" @e.Code.ValueIsSelected(Model.CaseSolution.Currency) >@e.Code</option>
                                                                }
                                                            }
                                                        </select>
                                                    </td> 
                                                </tr>
                                            </table>
                                        </td>
                                        <td>
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Cost, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Cost)
                                        </td>
                                     </tr>
                                 }
                                 <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Filename.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Filename.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @if (Model.EditMode == Enums.AccessMode.FullAccess)
                                            {
                                                <a href="#upload_files_popup" role="button" class="btn" data-toggle="modal">@Translation.Get("Lägg till", SessionFacade.CurrentLanguageId)</a>
                                            }
                                            <div id="divCaseFiles">
                                                @*@Html.Partial("_CaseFiles", Model.CaseFilesModel)*@
                                            </div>
                                        </td>
                                         <td>
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.FileName, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Filename)
                                        </td>
                                 </tr>
                                <tr>
                                    <th colspan="3" class="header">@Translation.Get("Övrigt")</th>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString())">
                                    <td class="span3">
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseWorkingGroup_Id, Model.CaseWorkingGroups, "", new { id = "WorkingGroup" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.WorkingGroup, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.WorkingGroup_Id)
                                    </td>
                                </tr>
@*                                "Handläggare" aka Performer*@
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.PerformerUser_Id, Model.PerformerUsers, new { id = "PerformerUser" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Administrator, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Performer_User_Id)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Priority_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Priority_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Priority_Id, Model.Priorities, "", new { id = "Priority" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Priority, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Priority_Id)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Status_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Status_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Status_Id, Model.Status, "", new { id = "Status" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Status, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Status_Id)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.StateSecondary_Id, Model.StateSecondaries, "", new { id = "StateSecondary" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.StateSecondary, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.StateSecondary_Id)
                                    </td>
                                </tr>
                                @if (Model.projects != null)
                                {
                                <tr>
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.Project.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                         @*<select id="Project" name="CaseSolution.Project_Id">
                                                <option value="">&nbsp;</option>
                                                @if (Model.Projects != null)
                                                {
                                                    foreach (var e in Model.Projects)
                                                    {
                                                        <option value="@e.Id" @e.Id.IdIsSelected(Model.Projects.ToString())>@e.Name</option>
                                                    }
                                                }
                                            </select>*@
                                        @Html.DropDownListFor(model => model.CaseSolution.Project_Id, Model.projects, "", new { id = "Project" })
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Project, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Project)
                                    </td>
                                </tr>
                                }
                               @if (Model.problems != null)
                               {
                                    <tr>
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Problem.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                                @*<select id="Problems" name="model.Problems">
                                                    <option value="">&nbsp;</option>
                                               
                                                        @foreach (var e in Model.Problems)
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.Problems.ToString())>@e.Name</option>
                                                        }
                                               
                                                </select>*@
                                             @Html.DropDownListFor(model => model.CaseSolution.Problem_Id, Model.problems, "", new { id = "Problem" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Problem, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Problem)
                                        </td>
                                    </tr>
                               }
                                 <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.CausingPart.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.CausingPart.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        <select id="CausingPart" name="CaseSolution.CausingPartId" class='chosen-single-select'>    
                                            <option> &nbsp; </option>
                                            @if (Model.CausingParts != null)
                                            {
                                                foreach (var causingPart in Model.CausingParts)
                                                {                                                                                                           
                                                    <option value="@causingPart.Value" @(causingPart.Selected ? "Selected" : "")> @causingPart.Text </option>
                                                }
                                            }                                               
                                        </select>

                                        @*@Html.DropDownListFor(model => model.CaseSolution.CausingPartId, Model.CausingParts, "", new { id = "CausingPart" })*@
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.CausingPart, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.CausingPart)
                                    </td>
                                </tr>
                                 @if (Model.changes != null)
                                 {
                                       <tr>
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.Change.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                                @*<select id="changes" name="model.changes">
                                                    <option value="">&nbsp;</option>
                                               
                                                        @foreach (var e in Model.changes)
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.changes.ToString())>@e.ChangeTitle</option>
                                                        }
                                               
                                                </select>*@
                                            @Html.DropDownListFor(model => model.CaseSolution.Change_Id, Model.changes, "", new { id = "Change" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Change, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Change)
                                        </td>
                                    </tr>
                                 }
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.PlanDate.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.PlanDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>                                      
                                                @Html.EditorFor(model => Model.CaseSolution.PlanDate, "DatePicker", new { id = "PlanDate" }) 
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.PlanDate, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.PlanDate)
                                        </td>
                                    </tr>
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.WatchDate.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.WatchDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>                                      
                                                @Html.EditorFor(model => Model.CaseSolution.WatchDate, "DatePicker", new { id = "WatchDate" }) 
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.WatchDate, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.WatchDate)
                                        </td>
                                    </tr>
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.Verified.ToString())">
                                        <td>
                                           @Translation.Get(GlobalEnums.TranslationCaseFields.Verified.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="checkbox" style="padding-left: 20px">
                                            <input type="checkbox" name="Casesolution.Verified" @(Model.CaseSolution.Verified == 1 ? "checked=checked" : "") value ="1" />
                                            <input type="hidden" name="Casesolution.Verified" value="0" />
                                        </td>
                                        
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.Verified, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.Verified)
                                        </td>
                                    </tr>
                               
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.VerifiedDescription.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.VerifiedDescription.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.VerifiedDescription, new { id = "VerifiedDescription", maxlength = "200" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.VerifiedDescription, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.VerifiedDescription)
                                        </td>
                                    </tr>
                               
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.SolutionRate.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.SolutionRate.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            <select id="casesolution__SolutionRate" name="CaseSolution.SolutionRate">
                                                <option value="">&nbsp;</option>
                                                @for (var i = 10; i < 110; i = i + 10)
                                                {
                                                    <option value="@i.ToString()" @i.IdIsSelected(Model.CaseSolution.SolutionRate) >@i.ToString()</option>
                                                }
                                            </select>
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.SolutionRate, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.SolutionRate)
                                        </td>
                                    </tr> 
                              
                                 <tr>
                                    <th colspan="3" class="header">@Translation.Get("Logg")</th>
                                </tr>
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString())">
                                        <td class="span3">
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.tblLog_Text_External.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_External, new { style = "height:100px;", maxlength = "3000" })                                            
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.ExternalLogNote, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.tblLog_Text_External)                                            
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.tblLog_Text_Internal.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_Internal, new { style = "height:100px;", maxlength = "3000" })                                            
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.InternalLogNote, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.tblLog_Text_Internal)
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Count() != 0)
                                {
                                    <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.FinishingDescription.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.FinishingDescription.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.FinishingDescription, new { style = "height:100px;", maxlength = "1000" })
                                        </td>
                                        <td class="span9">
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.FinishingDescription, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.FinishingDescription)
                                        </td>
                                    </tr>
                                }

                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.tblLog_Filename.ToString())">
                                        <td>
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.tblLog_Filename.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                        </td>
                                        <td>                                        
                                        </td>
                                         <td>
                                            @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.LogFileName, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.tblLog_Filename)
                                        </td>
                                 </tr>

                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.FinishingDate.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.FinishingDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>                                      
                                            @Html.EditorFor(model => Model.CaseSolution.FinishingDate, "DatePicker", new { id = "FinishingDate" }) 
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.FinishingDate, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.FinishingDate)
                                    </td>
                                </tr>
                                <tr style="@Model.CaseFieldSettings.displayHtml(GlobalEnums.TranslationCaseFields.ClosingReason.ToString())">
                                    <td>
                                        @Translation.Get(GlobalEnums.TranslationCaseFields.ClosingReason.ToString(), Enums.TranslationSource.CaseTranslation, Model.CaseSolution.Customer_Id)
                                    </td>
                                    <td>
                                        <div id="divFinishingCause" class="btn-group">
                                            <div class="btn" id="divBreadcrumbs_FinishingCause">@Model.Finishing_Cause_Path</div>
                                            <button class="btn dropdown-toggle" data-toggle="dropdown">
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="#" value="">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                @Html.FinishingCauseDropdownButtonString(Model.FinishingCauses)
                                            </ul>
                                            @Html.HiddenFor(model => model.CaseSolution.FinishingCause_Id)
                                        </div>
                                    </td>
                                    <td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.FinishingCause, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.ClosingReason)
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
           @*         <h4>@Translation.Get("Ärendeinformation", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Logg", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                               
                            </table>
                        </div>
                    </div>*@
                    <h4>@Translation.Get("Säkerhet", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>@Translation.Get("Ärendemallen är endast tillgänglig för", Enums.TranslationSource.TextTranslation)
                                    <td class="span3">
                                        <b>@Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)</b>
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.WorkingGroup_Id, Model.WorkingGroups, "")
                                    </td>
                                    @*<td class="span9">
                                        @Html.CaseSolutionSettingsFor(x => x.CaseSolutionSettingModels, CaseSolutionFields.WorkingGroup, Model.CaseFieldSettings, GlobalEnums.TranslationCaseFields.WorkingGroup_Id)
                                    </td>*@
                                </tr>
                            </table>
                        </div>
                    </div>
                    <h4>
                        <input type="checkbox" id="chkSchedule" name="Schedule" @(Model.Schedule.ToBool() ? "checked='checked'" : "")  value="1" style="vertical-align:top"  />
                        <input type="hidden" name="Schedule" value="0" />
                        @Translation.Get("Schema", Enums.TranslationSource.TextTranslation)
                    </h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform" border="0">
                                <tr>
                                    <td class="span3"></td>

                                    @* <td class="span9">
                                      
                                    </td>*@

                                </tr>
                                <tr id="scheduleOptions" style="@(Model.Schedule.ToBool() ? "display:block" : "display:none")">
                                    <td class="span3">
                                        <p><label class="radio">
                                        <!-- This is for cell width -->
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 1 ? "checked='checked'" : "") id="optScheduleType1" value="1" />
                                        @Translation.Get("Varje dag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                        <p>
                                        <label class="radio">
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 2 ? "checked='checked'" : "") id="optScheduleType2" value="2" />
                                        @Translation.Get("Varje vecka", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                        <p>
                                        <label class="radio">
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 3 ? "checked='checked'" : "") id="optScheduleType3" value="3" />
                                        @Translation.Get("Varje månad", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                    </td>
                                    <!-- ******************************* DAY ************************************** -->
                                    <td id="chosenDay" class="chDay span3" style="display: none;">
                                        
                                        <!--This is for cell width -->
                                        @Translation.Get("Starttid", Enums.TranslationSource.TextTranslation):  
                                        <select name="ScheduleTime" style="width: 80px;">
                                            @for (int i = 0; i < 24; i++)
                                            {
                                                <option  @(Model.ScheduleTime == i ? "selected='selected'" : "") value="@i">@i.ToString().PadLeft(2, '0'):00</option>
                                            }
                                        </select>

                                        <br />
                                        @Translation.Get("Bevakningsdatum", Enums.TranslationSource.TextTranslation):
                                        <br />
                                        @Translation.Get("Datum", Enums.TranslationSource.TextTranslation)
                                        +
                                        <select name="ScheduleWatchDate" style="width: 80px;">
                                            @for (int i = 0; i <= 20; i++)
                                            {
                                                <option  @(Model.ScheduleWatchDate == i ? "selected='selected'" : "") value="@i">@i</option>
                                            }
                                        </select>
                                        @Translation.Get("dagar", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <!-- ********************************* WEEK ************************************* -->
                                    <td id="chosenWeek" class="chWeek span6" style="display: none;">
                                        <!-- This is for cell width -->
                                        <label>
                                        @Translation.Get("Dagar i veckan", Enums.TranslationSource.TextTranslation):                                        
                                        </label>
                                        <p>
                                        <label class="checkbox inline">
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Måndag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">                                  
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Tisdag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">                                    
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Onsdag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">                                   
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("Torsdag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                        <p>
                                        <label class="checkbox inline">
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Fredag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">                                 
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Lördag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">                                   
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Söndag", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                    </td>
                                    <!-- ********************************* MONTH ************************************* -->
                                    <td id="chosenMonth" class="chMonth" style="display: none;">
                                        <p class="form-inline">
                                        <label class="radio">
                                        <!-- This is for cell width -->
                                        <input type="radio" name="ScheduleMonthly" @(Model.ScheduleMonthlyOrder == 0 ? "checked='checked'" : "") id="optday" value="1" style="vertical-align:top"/>
                                        @Translation.Get("Dag", Enums.TranslationSource.TextTranslation):
                                        </label>
                                        <select name="ScheduleMonthlyDay" style="width: 85px;" id="cbo0">
                                            @for (int i = 1; i <= 31; i++)
                                            {     
                                                <option @(Model.ScheduleDays == i.ToString() ? "selected='selected'" : "") value="@i">@i</option>
                                            }
                                        </select>
                                        </p>
                                        <p class="form-inline">
                                        <label class="radio">
                                        <input type="radio" name="ScheduleMonthly" onchange="click()" @(Model.ScheduleMonthlyOrder != 0 ? "checked='checked'" : "") id="optthe"  value="2" style="vertical-align:top"/>
                                        @Translation.Get("Den", Enums.TranslationSource.TextTranslation):
                                        </label>
                                        <select name="ScheduleMonthlyOrder" style="width: 85px;" id="cbo1">
                                            <option value="1" @(Model.ScheduleMonthlyOrder == 1 ? "selected='selected'" : "")>@Translation.Get("första", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="2" @(Model.ScheduleMonthlyOrder == 2 ? "selected='selected'" : "")>@Translation.Get("andra", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="3" @(Model.ScheduleMonthlyOrder == 3 ? "selected='selected'" : "")>@Translation.Get("tredje", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="4" @(Model.ScheduleMonthlyOrder == 4 ? "selected='selected'" : "")>@Translation.Get("fjärde", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="5" @(Model.ScheduleMonthlyOrder == 5 ? "selected='selected'" : "")>@Translation.Get("sista", Enums.TranslationSource.TextTranslation)</option>
                                        </select>
                                        <select name="ScheduleMonthlyWeekday" style="width: 110px;" id="cbo2">
                                            <option value="1" @(Model.ScheduleMonthlyWeekday == 1 ? "selected='selected'" : "")>@Translation.Get("Måndagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="2" @(Model.ScheduleMonthlyWeekday == 2 ? "selected='selected'" : "")>@Translation.Get("Tisdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="3" @(Model.ScheduleMonthlyWeekday == 3 ? "selected='selected'" : "")>@Translation.Get("Onsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="4" @(Model.ScheduleMonthlyWeekday == 4 ? "selected='selected'" : "")>@Translation.Get("Torsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="5" @(Model.ScheduleMonthlyWeekday == 5 ? "selected='selected'" : "")>@Translation.Get("Fredagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="6" @(Model.ScheduleMonthlyWeekday == 6 ? "selected='selected'" : "")>@Translation.Get("Lördagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="7" @(Model.ScheduleMonthlyWeekday == 7 ? "selected='selected'" : "")>@Translation.Get("Söndagen", Enums.TranslationSource.TextTranslation)</option>
                                        </select>
                                        </p>
                                        <p>
                                        <label>
                                        @Translation.Get("Månader", Enums.TranslationSource.TextTranslation):
                                        </label>
                                        </p>
                                        <p>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Januari", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Februari", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Mars", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">  
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("April", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                        <p>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Maj", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline">  
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Juni", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Juli", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",8,") >= 0 ? "checked='checked'" : "") value="8" />
                                        @Translation.Get("Augusti", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                        <p>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",9,") >= 0 ? "checked='checked'" : "") value="9" />
                                        @Translation.Get("September", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",10,") >= 0 ? "checked='checked'" : "") value="10" />
                                        @Translation.Get("Oktober", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",11,") >= 0 ? "checked='checked'" : "") value="11" />
                                        @Translation.Get("November", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        <label class="checkbox inline"> 
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",12,") >= 0 ? "checked='checked'" : "") value="12" />
                                        @Translation.Get("December", Enums.TranslationSource.TextTranslation)
                                        </label>
                                        </p>
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.CaseSolution.Customer_Id)
                            @Html.HiddenFor(model => model.CaseSolution.Id)
                            @Html.HiddenFor(model => model.CaseSolution.FormGUID)                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    
 

    var validator = $("#target").validate({
        ignore: "",
        rules: {
            "CaseSolution.Name": {
                required: true
            }
            
            //"CaseSolution.Text_External": {
            //    maxlength: 3000
            //}
        },
        
        messages: {
            "CaseSolution.Name": {
                required: "@Translation.GetForJS("Du måste ange ett namn på ärendemallen", Enums.TranslationSource.TextTranslation)"
            }
        },
       submitHandler: function (form) {
           form.submit();
       }
   });
</script>
<script>
    $('#CaseSolution_Text_External').on('onchange', function () {
        checkLength(this);
    });

    $('#CaseSolution_Text_External').on('onkeyup', function () {
        checkLength(this);
    });

    $('#CaseSolution_Text_External').on('onpaste', function () {
        checkLength(this);
    });

    $('#CaseSolution_Text_Internal').on('onchange', function () {
        checkLength(this);
    });

    $('#CaseSolution_Text_Internal').on('onkeyup', function () {
        checkLength(this);
    });

    $('#CaseSolution_Text_Internal').on('onpaste', function () {
        checkLength(this);
    });

    var maxLength = 3000;
    function checkLength(el) {
        if (el.value.length > maxLength) {
            el.value = el.value.substring(0, maxLength);
        }
    }

    $(function () {       
       
        $('#CaseSolution_Text_External').resizable();
        $('#CaseSolution_Text_Internal').resizable();
              
        $('#SaveCaseSolution').on('click', function () {                                 
            $('#target').submit();
        })
    });

</script>