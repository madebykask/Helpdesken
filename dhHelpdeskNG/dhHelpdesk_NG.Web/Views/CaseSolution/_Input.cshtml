@model dhHelpdesk_NG.Web.Models.CaseSolutionInputViewModel
@if (TempData["Error"] != null)
{
    <div class="alert alert-error">@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)
        @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
    </div>    
}
<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Allmänt", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Ärendemall", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="span9">
                                        @Html.TextBoxFor(model => model.CaseSolution.Name, new { maxlength = "50", style = "width: 200px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Kategori", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseSolutionCategory_Id, Model.CsCategories, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Användarinformation", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                @*@{dhHelpdesk_NG.Domain.CaseFieldSettings caseUFS = Model.CaseFieldSettings.Where(x => x.ShowOnStartPage == 1).Count() != 0) }*@
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 1 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Användarnamn", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="span9">
                                            @Html.TextBoxFor(model => model.CaseSolution.ReportedBy, new { maxlength = "40", style = "width: 200px;" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 3 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("E-post", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="field switch">
                                            @Html.SpecialLabel("NoMailToNotifier", Model.CaseSolution.NoMailToNotifier, Translation.Get("Ja", Enums.TranslationSource.TextTranslation))
                                            @Html.SpecialLabelOff("NoMailToNotifier", Model.CaseSolution.NoMailToNotifier, Translation.Get("Nej", Enums.TranslationSource.TextTranslation))
                                            @Html.SpecialCheckBox("casesolution.NoMailToNotifier", Model.CaseSolution.NoMailToNotifier, 1, new { @class = "checkbox" })
                                            &nbsp; &nbsp;@Translation.Get("skickas ej till anmälaren", Enums.TranslationSource.TextTranslation)
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Ärendeinformation", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 26 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Incidenttyp", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="span9">
                                            @Html.DropDownListFor(model => model.CaseSolution.CaseType_Id, Model.CaseTypes, "", new { style = "width: auto;" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 157 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Ämnesområde", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(model => model.CaseSolution.ProductArea_Id, Model.ProductAreas, "", new { style = "width: auto;" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 542 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("_Kategori123", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(model => model.CaseSolution.Category_Id, Model.Categories, "", new { style = "width: auto;" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 27 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Rubrik", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(model => model.CaseSolution.Caption, new { maxlength = "60", style = "width: 200px;" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 28 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Beskrivning", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Description, new { style = "width:600px; height:250px;", maxlength = "2000" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 29 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Miscellaneous, new { style = "width:600px; height:250px;", maxlength = "2000" })
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Övrigt", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.CaseWorkingGroup_Id, Model.CaseWorkingGroups, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Handläggare", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.PerformerUser_Id, Model.PerformerUsers, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Prioritet", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Priority_Id, Model.Priorities, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Projekt", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.Project_Id, Model.Projects, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Logg", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 382 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td class="span3">
                                            @Translation.Get("Extern notering", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td class="span9">
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_External, new { style = "width:600px; height:250px;", maxlength = "1500" })
                                        </td>
                                    </tr>
                                }
                                @if (Model.CaseFieldSettings.Where(x => x.Id == 381 && x.ShowOnStartPage == 1).Count() != 0)
                                {
                                    <tr>
                                        <td>
                                            @Translation.Get("Intern notering", Enums.TranslationSource.TextTranslation)
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.CaseSolution.Text_Internal, new { style = "width:600px; height:250px;", maxlength = "1000" })
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td>
                                        @Translation.Get("Avslutsorsak", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.CaseSolution.FinishingCause_Id, Model.FinishingCauses, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <h4>@Translation.Get("Säkerhet", Enums.TranslationSource.TextTranslation)</h4>
                            <table class="tableform">
                                <tr>@Translation.Get("Ärendemallen är endast tillgänglig för", Enums.TranslationSource.TextTranslation)
                                    <td class="span3">
                                        <b>@Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)</b>
                                    </td>
                                    <td class="span9">
                                        @Html.DropDownListFor(model => model.CaseSolution.WorkingGroup_Id, Model.WorkingGroups, "", new { style = "width: auto;" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        <input type="checkbox" id="chkSchedule" @(Model.Schedule ? "checked='checked'" : "") name="Schedule" value="1" />
                                    </td>
                                    <td class="span9">
                                        @Translation.Get("Schema", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr id="scheduleOptions" style="@(Model.Schedule ? "display:block" : "display:none")">
                                    <td>
                                        <br />
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 1 ? "checked='checked'" : "") id="optScheduleType1" value="1" />
                                        @Translation.Get("Varje dag", Enums.TranslationSource.TextTranslation)
                                        <br />
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 2 ? "checked='checked'" : "") id="optScheduleType2" value="2" />
                                        @Translation.Get("Varje vecka", Enums.TranslationSource.TextTranslation)
                                        <br />
                                        <input type="radio" name="ScheduleType" @(Model.ScheduleType == 3 ? "checked='checked'" : "") id="optScheduleType3" value="3" />
                                        @Translation.Get("Varje månad", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td id="chosenDay" class="chDay" style="display: none;">
                                        @Translation.Get("Starttid", Enums.TranslationSource.TextTranslation):
                        <select name="ScheduleTime" style="width: auto">
                            @for (int i = 0; i < 24; i++)
                            {
                                <option @(Model.ScheduleTime == i ? "selected='selected'" : "") value="@i">@i.ToString().PadLeft(2, '0'):00</option>
                            }
                        </select>
                                        <br />
                                        @Translation.Get("Bevakningsdatum", Enums.TranslationSource.TextTranslation): @Translation.Get("Datum", Enums.TranslationSource.TextTranslation)
                                        +
                        <select name="ScheduleWatchDate" style="width: auto">
                            @for (int i = 0; i <= 20; i++)
                            {
                                <option @(Model.ScheduleWatchDate == i ? "selected='selected'" : "") value="@i">@i</option>
                            }
                        </select>
                                        @Translation.Get("dagar", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td id="chosenWeek" class="chWeek" style="display: none;">
                                        @Translation.Get("Dagar i veckan", Enums.TranslationSource.TextTranslation):
                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Måndag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Tisdag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Onsdag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("Torsdag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Fredag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Lördag", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleDay" @(Model.ScheduleDays.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Söndag", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td id="chosenMonth" class="chMonth" style="display: none;">
                                        <input type="radio" name="ScheduleMonthly" @(Model.ScheduleMonthlyOrder == 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Dag", Enums.TranslationSource.TextTranslation):
                        <select name="ScheduleMonthlyDay" style="width: auto;">
                            @for (int i = 1; i <= 31; i++)
                            {     
                                <option @(Model.ScheduleDays == i.ToString() ? "selected='selected'" : "") value="@i">@i</option>
                            }
                        </select>
                                        <br />
                                        <input type="radio" name="ScheduleMonthly" @(Model.ScheduleMonthlyOrder != 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Den", Enums.TranslationSource.TextTranslation):
                        <select name="ScheduleMonthlyOrder" style="width: auto;">
                            <option value="1" @(Model.ScheduleMonthlyOrder == 1 ? "selected='selected'" : "")>@Translation.Get("första", Enums.TranslationSource.TextTranslation)</option>
                            <option value="2" @(Model.ScheduleMonthlyOrder == 2 ? "selected='selected'" : "")>@Translation.Get("andra", Enums.TranslationSource.TextTranslation)</option>
                            <option value="3" @(Model.ScheduleMonthlyOrder == 3 ? "selected='selected'" : "")>@Translation.Get("tredje", Enums.TranslationSource.TextTranslation)</option>
                            <option value="4" @(Model.ScheduleMonthlyOrder == 4 ? "selected='selected'" : "")>@Translation.Get("fjärde", Enums.TranslationSource.TextTranslation)</option>
                            <option value="5" @(Model.ScheduleMonthlyOrder == 5 ? "selected='selected'" : "")>@Translation.Get("sista", Enums.TranslationSource.TextTranslation)</option>
                        </select>
                                        <select name="ScheduleMonthlyWeekday" style="width: auto;">
                                            <option value="1" @(Model.ScheduleMonthlyWeekday == 1 ? "selected='selected'" : "")>@Translation.Get("Måndagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="2" @(Model.ScheduleMonthlyWeekday == 2 ? "selected='selected'" : "")>@Translation.Get("Tisdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="3" @(Model.ScheduleMonthlyWeekday == 3 ? "selected='selected'" : "")>@Translation.Get("Onsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="4" @(Model.ScheduleMonthlyWeekday == 4 ? "selected='selected'" : "")>@Translation.Get("Torsdagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="5" @(Model.ScheduleMonthlyWeekday == 5 ? "selected='selected'" : "")>@Translation.Get("Fredagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="6" @(Model.ScheduleMonthlyWeekday == 6 ? "selected='selected'" : "")>@Translation.Get("Lördagen", Enums.TranslationSource.TextTranslation)</option>
                                            <option value="7" @(Model.ScheduleMonthlyWeekday == 7 ? "selected='selected'" : "")>@Translation.Get("Söndagen", Enums.TranslationSource.TextTranslation)</option>
                                        </select>
                                        <br />
                                        @Translation.Get("Månader", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",1,") >= 0 ? "checked='checked'" : "") value="1" />
                                        @Translation.Get("Januari", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",2,") >= 0 ? "checked='checked'" : "") value="2" />
                                        @Translation.Get("Februari", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",3,") >= 0 ? "checked='checked'" : "") value="3" />
                                        @Translation.Get("Mars", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",4,") >= 0 ? "checked='checked'" : "") value="4" />
                                        @Translation.Get("April", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",5,") >= 0 ? "checked='checked'" : "") value="5" />
                                        @Translation.Get("Maj", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",6,") >= 0 ? "checked='checked'" : "") value="6" />
                                        @Translation.Get("Juni", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",7,") >= 0 ? "checked='checked'" : "") value="7" />
                                        @Translation.Get("Juli", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",8,") >= 0 ? "checked='checked'" : "") value="8" />
                                        @Translation.Get("Augusti", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",9,") >= 0 ? "checked='checked'" : "") value="9" />
                                        @Translation.Get("September", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",10,") >= 0 ? "checked='checked'" : "") value="10" />
                                        @Translation.Get("Oktober", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",11,") >= 0 ? "checked='checked'" : "") value="11" />
                                        @Translation.Get("November", Enums.TranslationSource.TextTranslation)
                                        <input type="checkbox" name="ScheduleMonth" @(Model.ScheduleMonths.IndexOf(",12,") >= 0 ? "checked='checked'" : "") value="12" />
                                        @Translation.Get("December", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.CaseSolution.Customer_Id)
                            @Html.HiddenFor(model => model.CaseSolution.Id)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    var checkScheduleChange = function () {
        if ($('#optScheduleType1').is(':checked')) {
            $(".chDay").toggle($("[name$=ScheduleType]").index($('#optScheduleType1')) == 0);
            $('.chWeek, .chMonth').hide();
        }
        else if ($('#optScheduleType2').is(':checked')) {
            $('.chDay, .chWeek').toggle($("[name$=ScheduleType]").index($('#optScheduleType2')) == 1);
            $('.chMonth').hide();
        }
        else if ($('#optScheduleType3').is(':checked')) {
            $('.chDay, .chMonth').toggle($("[name$=ScheduleType]").index($('#optScheduleType3')) == 2);
            $('.chWeek').hide();
        }
    }

    $(function () {
        $("#chkSchedule").click(function () {
            $("#scheduleOptions").toggle();
        });

        checkScheduleChange();
        $("[name$=ScheduleType]").change(checkScheduleChange);
    });

    $(function () {
        var validator = $("#target").validate({
            rules: {
                "CaseSolution.Name": {
                    required: true
                },
                "CaseSolution.Caption": {
                    required: true
                },
                "CaseSolution.Miscellaneous": {
                    required: true
                },
                "CaseSolution.Text_External": {
                    required: true
                },
                "Casesolution.Text_Internal": {
                    required: true
                }
            },
            messages: {
                "CaseSolution.Name": {
                    required: "@Translation.Get("Du måste ange en ärendemall", Enums.TranslationSource.TextTranslation)"
                            },
                            "CaseSolution.Caption": {
                                required: "@Translation.Get("Du måste ange en rubrik", Enums.TranslationSource.TextTranslation)"
                },
                            "CaseSolution.Miscellaneous": {
                                required: "@Translation.Get("Du måste fylla i övrigt-fältet", Enums.TranslationSource.TextTranslation)"
                },
                            "CaseSolution.Text_External": {
                                required: "@Translation.Get("Du måste fylla i extern notering-fältet", Enums.TranslationSource.TextTranslation)"
                },
                            "CaseSolution.Text_Internal": {
                                required: "@Translation.Get("Du måste fylla i intern notering-fältet", Enums.TranslationSource.TextTranslation)"
                }
                        },
                        submitHandler: function (form) {
                            form.submit();
                        }
                    });
                });

</script>
