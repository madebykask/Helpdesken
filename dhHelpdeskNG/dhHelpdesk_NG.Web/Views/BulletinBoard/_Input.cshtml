@model dhHelpdesk_NG.Web.Models.BulletinBoardInputViewModel
@if (TempData["Error"] != null)
{
    <div class="alert alert-error">@Translation.Get("Anslagstavla", Enums.TranslationSource.TextTranslation)
        @Translation.Get("som används går inte att ta bort", Enums.TranslationSource.TextTranslation)
    </div>    
}
<div class="content">
    <div class="container">
        <ul class="nav nav-tabs" id="myTab">
            <li class="active"><a href="#fragment-1">@Translation.Get("Anslagstavla", Enums.TranslationSource.TextTranslation)</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane tab-pane-border active" id="fragment1">
                <div class="container">
                    <h4>@Translation.Get("Anslagstavla", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Visa f.r.o.m", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="span9">
                                        <div class="input-append date dateie" data-date="">
                                            @Html.EditorFor(model => model.BulletinBoard.ShowDate)<span class="add-on"><i class="icon-calendar"></i></span>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa t.o.m", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        <div class="input-append date dateie" data-date="">
                                            @Html.EditorFor(model => model.BulletinBoard.ShowUntilDate)<span class="add-on"><i class="icon-calendar"></i></span>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Anslagstavla", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(model => model.BulletinBoard.Text, new { style = "width:600px; height:250px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Translation.Get("Visa", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td class="field switch">
                                        @Html.SpecialLabel("ShowOnStartPage", Model.BulletinBoard.ShowOnStartPage, Translation.Get("Ja", Enums.TranslationSource.TextTranslation))
                                        @Html.SpecialLabelOff("ShowOnStartPage", Model.BulletinBoard.ShowOnStartPage, Translation.Get("Nej", Enums.TranslationSource.TextTranslation))
                                        @Html.SpecialCheckBox("BulletinBoard.ShowOnStartPage", Model.BulletinBoard.ShowOnStartPage, 1, new { @class = "checkbox" })
                                        &nbsp; &nbsp;@Translation.Get("på startsidan", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td class="field switch">
                                        @Html.SpecialLabel("PublicInformation", Model.BulletinBoard.PublicInformation, Translation.Get("Ja", Enums.TranslationSource.TextTranslation))
                                        @Html.SpecialLabelOff("PublicInformation", Model.BulletinBoard.PublicInformation, Translation.Get("Nej", Enums.TranslationSource.TextTranslation))
                                        @Html.SpecialCheckBox("BulletinBoard.PublicInformation", Model.BulletinBoard.PublicInformation, 1, new { @class = "checkbox" })
                                        &nbsp; &nbsp;@Translation.Get("på självservice", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <h4>@Translation.Get("Säkerhet", Enums.TranslationSource.TextTranslation)</h4>
                    <div class="row">
                        <div class="span12">
                            <table class="tableform" id="security">
                                <tr>
                                    <td class="span3">
                                        @Translation.Get("Driftgrupp", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td>
                                        @Translation.Get("Tillgängliga", Enums.TranslationSource.TextTranslation)
                                    </td>
                                    <td></td>
                                    <td>
                                        @Translation.Get("Valda", Enums.TranslationSource.TextTranslation)
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td>
                                        @Html.ListBox("WGsAvailable", Model.WGsAvailable, new { style = "width: 340px; height: 150px" })                                        
                                    </td>
                                    <td>
                                        <input type="button" value="&gt;" id="addWGs" class="btn btn-success" /><br />
                                        <input type="button" value="&lt;" id="removeWGs" class="btn btn-danger" />                                        
                                    </td>
                                    <td>
                                        @Html.ListBox("WGsSelected", Model.WGsSelected, new { style = "width: 340px; height: 150px" })
                                    </td>
                                </tr>
                            </table>
                            @Html.HiddenFor(model => model.BulletinBoard.Customer_Id)
                            @Html.HiddenFor(model => model.BulletinBoard.Id)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    $(function () {
        if ($("#chkSecurity").is(":checked"))
            $("#securityOptions").show();

        $("#chkSecurity").click(function () {
            $("#securityOptions").toggle();
        });
    });

    function submitForm() {
        $("#WGsSelected option").attr("selected", "selected");
        $("#target").submit();
    }

    $("#addWGs").click(function () {
        $("#WGsAvailable option:selected").remove().appendTo("#WGsSelected");
        $("#WGsAvailable").get(0).selectedIndex = -1;
        $("#WGsSelected").get(0).selectedIndex = -1;
        return false;
    });

    $("#removeWGs").click(function () {
        $("#WGsSelected option:selected").remove().appendTo("#WGsAvailable");
        $("#WGsAvailable").get(0).selectedIndex = -1;
        $("#WGsAvailable").get(0).selectedIndex = -1;
        return false;
    });

    $(function () {
        var validator = $("#target").validate({
            rules: {
                "BulletinBoard.Text": {
                    required: true
                }
            },
            messages: {
                "BulletinBoard.Text": {
                    required: "@Translation.Get("Du måste ange en anslagstavla", Enums.TranslationSource.TextTranslation)"
                }
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    });

</script>
