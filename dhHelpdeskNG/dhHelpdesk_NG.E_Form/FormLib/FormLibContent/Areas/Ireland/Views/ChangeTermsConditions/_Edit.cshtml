@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    var url = Url.CurrentController() + "typeahead";
    //var firstEventVal = TempData["FirstEventVal"];
    //var lockedFields = TempData["LockedFields"];
    //var PublicHasEvent = TempData["HasEvent"];
    //var appliedEventName = TempData["AppliedEventName"];
    //var canApplyRule = TempData["CanApplyRule"];
    //var lastValidation = TempData["LastValidation"];  
}

@functions{  
    public string PrintText()
    {
        return Model.Translate("Print");
    }
}

@using (Html.BeginForm("edit", "ChangeTermsConditions", new { id = Model.Contract.Id }, FormMethod.Post, new { area = "Ireland", novalidate = "novalidate", id = "changeform" }))
{   
    @*<input type="hidden" name="LastValidation" id="LastValidation" value="@lastValidation" />
    <input type="hidden" name="LockedFields" id="LockedFields" value="@lockedFields" />
    <input type="hidden" name="HasEvent" id="HasEvent" value="@PublicHasEvent" />
    <input type="hidden" name="AppliedEventName" id="AppliedEventName" value="@appliedEventName" />
    <input type="hidden" name="CanApplyRule" id="CanApplyRule" value="@canApplyRule" />
    <input type="hidden" name="FirstEventName" id="FirstEventName" value="@firstEventVal" />*@
    
    <span style="display: none;" id="narrowDownInit" url="@url"></span>
    @Html.Partial("_GlobalNavRev", Model)
    <div class="container containeralignright">
        @Html.Partial("_FormInfo", Model)
        @Html.Partial("_ErrorMessage", Model)
        <ul class="nav nav-tabs">
            @if (Model.VisibleTab("#ServiceRequestDetails"))
            {
                <li class="active @(Model.TabHasError("#ServiceRequestDetails") ? "error" : "")">
                    <a href="#ServiceRequestDetails">@Model.Translate("Service Request Details")</a></li>
            }
            @if (Model.VisibleTab("#OrganisationalAssignment"))
            {
                <li class="@(Model.TabHasError("#OrganisationalAssignment") ? "error" : "")">
                    <a href="#OrganisationalAssignment">@Model.Translate("Organisational Assignment")</a></li>
            }
            @if (Model.VisibleTab("#Payment"))
            {
                <li class="@(Model.TabHasError("#Payment") ? "error" : "")">
                    <a href="#Payment">@Model.Translate("Payment Information")</a></li>
            }
            @if (Model.VisibleTab("#documents"))
            {
                <li class="@(Model.TabHasError("#documents") ? "error" : "")">
                    <a href="#documents">@Model.Translate("Documents")</a></li>
            }
            @if (Model.VisibleTab("#globalview"))
            {
                <li class="@(Model.TabHasError("#globalview") ? "error" : "")">
                    <a href="#globalview" data-url="@Url.Action("GetGlobalViewFields", new { caseId = Model.Contract.Id, formGuid = Model.FormGuid })">@Model.Translate("Global View")</a></li>
            }

            @if (Model.VisibleTab("#SSCUseOnly"))
            {
                <li class="@(Model.TabHasError("#SSCUseOnly") ? "error" : "")">
                    <a href="#SSCUseOnly">@Model.Translate("SSC use only")</a></li>
            }
            <li>
                <a href="@Url.Action("ChangePrint", "ChangeTermsConditions", new
                {
                    id = "Print",
                    caseId = Model.Contract.Id,
                    path = "",
                    userId = FormLibSessions.User.UserId,
                    allowanceNr = ""
                })" class="changeprint"><i class="icon-print icon-white"></i>&nbsp;@PrintText()</a>
            </li>
             @if (Model.VisibleTab("#attachments"))
             {
                <li class="pull-right">
                    <a href="#attachments"><i class="icon-file icon-white"></i>&nbsp;@Model.Translate("Attachments")&nbsp;(<b id="attachmentCounter">@(Model.Contract.CaseFiles != null ? Model.Contract.CaseFiles.Count() : 0)</b>)</a>
                </li>
             }

        </ul>
        <div class="content">
            <div class="row-fluid">
                <div class="tab-content overflow-visible">
                    @if (Model.VisibleTab("#ServiceRequestDetails"))
                    {
                        @Html.Partial("_TabServiceRequestDetails", Model)
                    }
                    @if (Model.VisibleTab("#OrganisationalAssignment"))
                    {
                        @Html.Partial("_TabOrganisationalAssignment", Model)
                    }
                    @if (Model.VisibleTab("#Payment"))
                    {
                        @Html.Partial("_TabPayment", Model)
                    }
                    @if (Model.VisibleTab("#SSCUseOnly"))
                    {
                        @Html.Partial("_TabSsc", Model)
                    }
                    @if (Model.VisibleTab("#documents"))
                    {
                        @Html.Partial("_TabDocuments", Model)
                    }
                    @if (Model.VisibleTab("#globalview"))
                    {
                        @Html.Partial("_TabGlobalView", Model)
                    }
                    @if (Model.VisibleTab("#attachments"))
                    {
                        @Html.Partial("_GlobalAttachments", Model)
                    }
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="activeTab" name="activeTab" value="@Model.ActiveTab" />
    @Html.Partial("_Validate", Model)

     <script>

         function changeFunctionsCallback() {


             //GetXML('predefined_function_jobtitleIE_outs.xml', setLineManagerDefault);

             //setTimeout(function () { GetXML('predefined_function_department_linemanager_outs.xml', setLineManagerAndCostCentre); }, 1);


             //setTimeout(function () { GetXML('predefined_function_jobtitleIE_outs.xml', setLineManagerJobTitle); }, 1);


             GetXML('predefined_function_jobtitleIE_outs.xml', NarrowDownJobTitle);

             function NarrowDownJobTitle(xml) {
                 var show = ''

                 var dep = '';

                 if (document.getElementById('NewServiceArea')) {
                     dep = $("#NewServiceArea option:selected").text();
                 }
                 
                 var jobtitle_value;
                 jobtitle_value = $('#JobTitle').val();

                 var selectize_tags = $("#JobTitle")[0].selectize
                 selectize_tags.clearOptions();


                 $(xml).find('dependent').each(function () {


                     var $sel = $(this);
                     show = '';

                     var department = $sel.find('selected').text();

                     show = $sel.find('show').text();


                     if (department == dep) {

                         if (show != '') {





                             var optionsarray = show.split(',');
                             optionsarray.unshift('');

                             $.each(optionsarray, function (i) {
                                 selectize_tags.addOption({
                                     text: optionsarray[i],
                                     value: optionsarray[i]
                                 });
                                 selectize_tags.addItem(optionsarray[i])
                             });

                             if (jobtitle_value != '')
                                 selectize_tags.setValue(jobtitle_value);
                             else
                                 selectize_tags.setValue('');
                             return;


                             return;

                         }
                     }
                 });
             }
         }

         validate.run($('#actionState').val());

         $(document).on('change', '#actionState', function (e) {
             var val = $(this).val();
             validate.run(val);
         });

    </script>
}