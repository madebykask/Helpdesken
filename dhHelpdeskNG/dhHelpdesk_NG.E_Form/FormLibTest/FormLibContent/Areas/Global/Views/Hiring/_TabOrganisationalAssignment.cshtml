@model DH.Helpdesk.EForm.FormLib.Models.FormModel
@using DH.Helpdesk.EForm.FormLib;
@using DH.Helpdesk.EForm.FormLib.Models;

<div class="tab-pane" id="OrganisationalAssignment">
    <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Organisation")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("OrganisationCountry")</td>
                    <td>@Model.Element("OrganisationCountry")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Company")</td>
                    <td>@Model.Element("Company")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("BusinessUnit")</td>
                    <td>@Model.Element("BusinessUnit")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ServiceArea")</td>
                    <td>@Model.Element("ServiceArea")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("Department")</td>
                    <td>@Model.Element("Department")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HomeCostCentre")</td>
                    <td>@Model.Element("HomeCostCentre")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CostAllocation")</td>
                    <td>@Model.Element("CostAllocation")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("CrossChargeCostCentre")</td>
                    <td>@Model.Element("CrossChargeCostCentre")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Job")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("JobTitle")</td>
                    <td>@Model.Element("JobTitle")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("LocalJobTitle")</td>
                    <td>@Model.Element("LocalJobTitle")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("NewPosition")</td>
                    <td>@Model.Element("NewPosition")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ReportsToLineManager")</td>
                    <td>@Model.Element("ReportsToLineManager")</td>
                </tr>

                

            </tbody>
        </table>
    </div>
     <div class="span6">
        <table class="table">
            <tbody>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("Employment Conditions")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("EmploymentCategory")</td>
                    <td>@Model.Element("EmploymentCategory")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractedHours")</td>
                    <td>@Model.Element("ContractedHours")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ContractType")</td>
                    <td>@Model.Element("ContractType")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationPeriod")</td>
                    <td>@Model.Element("ProbationPeriod")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("ProbationEndDate")</td>
                    <td>@Model.Element("ProbationEndDate")</td>
                </tr>
                <tr>
                    <td class="tdstrong" colspan="2">
                        <h4>@Model.Translate("CDS")</h4>
                    </td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("PrimarySite")</td>
                    <td>@Model.Element("PrimarySite")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("TECApprover")</td>
                    <td>@Model.Element("TECApprover")</td>
                </tr>
                <tr>
                    <td class="tdstrong">@Model.Label("HelpDesk")</td>
                    <td>@Model.Element("HelpDesk")</td>
                </tr>
            </tbody>
        </table>
    </div>
    
</div>

<script>
    
    

    $('#date_ContractStartDate').not(".disabled").datepicker().on('changeDate', function (e) {
        SetProbationEndDate();
    });

    $('#ContractStartDate').change(function () {
        SetProbationEndDate();
    });


    function SetProbationEndDate() {

        var probationEndDate = $('#ProbationEndDate');

        if (document.getElementById('ProbationPeriod').value == 'Yes') {

            var sStart = $('#ContractStartDate').val();
            var format = APIGlobal.DateTime.parseFormat('dd.mm.yyyy');
            var dStart = APIGlobal.DateTime.parseDate(sStart, format);

            var endDate = new Date(dStart.getFullYear(), dStart.getMonth(), dStart.getDate() + 90, 0, 0, 0, 0);
            var visibleDate = APIGlobal.DateTime.formatDate(endDate, format);
            probationEndDate.val(visibleDate.toString());
        }
        else {
            probationEndDate.val("");
        }

    };


    var lockedbyUserGroup = document.getElementById('LockedByUserGroup').getAttribute('status');
    if ("@Model.ReadOnlyTab("#OrganisationalAssignment")" == 'False' && lockedbyUserGroup == 'False') {
        $(function () {

            function setEndDateBehavior(value) {
                if (value == 'No') {
                    $('#date_ProbationEndDate').datepicker("destroy");
                    $('#date_ProbationEndDate').addClass("disabled");
                    $('#ProbationEndDate').prop('disabled', true);
                    $('#ProbationEndDate').val("");
                }
                else {
                    $('#date_ProbationEndDate').datepicker();
                    $('#ProbationEndDate').prop('disabled', false);
                    $("#ProbationEndDate").removeClass("disabled");
                }
            }

            if ($('#ProbationPeriod').val() == 'No') {
                $('#date_ProbationEndDate').datepicker("destroy");
                $('#date_ProbationEndDate').addClass("disabled");
                $('#ProbationEndDate').prop('disabled', true);
                $('#ProbationEndDate').val("");
            }


            $('#ProbationPeriod').change(function () {
                setEndDateBehavior($(this).val());
            });
        });
    }



    //function selectIndexChangeProbationPeriod() {
    //        if (this.options[this.selectedIndex].value == 'No') {
    //            document.getElementById('ProbationEndDate').disabled = true;
    //        } else {
    //            document.getElementById('ProbationEndDate').disabled = false;
    //        }
    //}

    //document.getElementById('ProbationPeriod').onchange = selectIndexChangeProbationPeriod;

  
    //$("#BusinessUnit").change(function () {

    //    SetHelpDeskDefault();
    //    SetPrimarySiteDefault();
    //    GetXML('Predefined_BusinessUnit_JobTitle.xml', setJobTitle);
    //});

    ////setJobTitle();

    function SetPrimarySiteDefault()
    {
        $('#PrimarySite').val($("#BusinessUnit option:selected").text());
    };

    $('#Department').change(function () {

        if ($(this).val() !== " ") {

            GetXML('Predefined_Department_HomeCostCentre.xml', setCostCentre);
        }

        else {
            $('#HomeCostCentre')[0].selectize.setValue("");
            $('#CrossChargeCostCentre')[0].selectize.setValue("");
        }

    });


    function GetXML(xmlFile, url) {
        //////////
        //Gets XML File
        //////////

        var path = window.location.protocol + '//';
        path = path + window.location.host + '/';

        path = site.baseUrl + '/FormLibContent/Xmls/Global/Templates/' + xmlFile

        $.ajax({
            type: "GET",
            url: path,
            dataType: "xml",
            success: url,
            error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
                alert(textStatus);
                alert(errorThrown);
            }

        });


    }

    function setCostCentre(xml) {
        var show = ''
        var dep = $("#Department option:selected").text();
        $(xml).find('dependent').each(function () {
            
            var $book = $(this);
            show = '';

            var department = $book.find('selected').text();

            show = $book.find('show').text();

            if (department == dep) {

                if (show != '') {
                    var n = show.indexOf(",");

                    if (n == -1) {

                        $('#HomeCostCentre')[0].selectize.setValue(show);
                        $('#CrossChargeCostCentre')[0].selectize.setValue(show);

                    }
                    else {
                        var res = show.substring(0, n);

                        $('#HomeCostCentre')[0].selectize.setValue(res);
                        $('#CrossChargeCostCentre')[0].selectize.setValue(res);
                    }
                    return;
                }
            }
        });
    }


    $('#ReportsToLineManager').change(function () {
        var value = $(this).val();
        if ($('#ReportsToLineManager')[0].selectize) {
            var selectedText = $('#ReportsToLineManager')[0].selectize.getItem(value).text();

            if ($('#TECApprover')[0].selectize) {
                $('#TECApprover')[0].selectize.setValue(selectedText);
            }
            else {
                $('#TECApprover').val(selectedText);
            }
        }
        else {
            var selectedText = $('#ReportsToLineManager').find('option:selected').text();
            if ($('#TECApprover')[0].selectize) {
                $('#TECApprover')[0].selectize.setValue(selectedText);
            }
            else {
                var selectedText = $('#ReportsToLineManager').find('option:selected').text();
                $('#TECApprover').val(selectedText);
            }
        }
    });

    function setJobTitle(xml) {
        //////////
        //setLineManagerJobTitle:
        //Adds Jobtitles on selected Function
        //////////
        var show = ''
        var dep = '';
        
        if (document.getElementById('BusinessUnit')) {
            dep = $("#BusinessUnit option:selected").text();
        }
        var selectize_tags;

        selectize_tags = $('#JobTitle')[0].selectize;

        var jobtitle_value;
        jobtitle_value = $('#JobTitle').val();

        selectize_tags.clearOptions();

        

        $(xml).find('dependent').each(function () {
            var $sel = $(this);
            show = '';

            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department == dep) {

                if (show != '') {

                    show = ' ,' + show;

                    var optionsarray = show.split(',');
                    optionsarray.unshift('');

                    var items = optionsarray.map(function (x) { return { text: x, value: x }; });
                    selectize_tags.addOption(items);
                                       
                    if (jobtitle_value != '')
                        selectize_tags.setValue(jobtitle_value);
                    else
                        selectize_tags.setValue('');
                  
                    return;
                }
            }
        });
    }

    $('#JobTitle').change(function () {

        GetXML('Predefined_LocalJobTitle_JobTitle.xml', setLocalJobTitle);

    });

    function setLocalJobTitle(xml) {
        var show = ''
        //var dep = $("#JobTitle option:selected").text();
        var dep = document.getElementById('JobTitle').value;

        $(xml).find('dependent').each(function () {

            var $book = $(this);
            show = '';

            var department = $book.find('selected').text();

            show = $book.find('show').text();


            if (department == dep) {
                if (show != '') {
                    var n = show.indexOf(",");
                    if (n == -1) {
                        $('#LocalJobTitle')[0].selectize.setValue(show);
                    }
                    else {
                        var res = show.substring(0, n);
                        $('#LocalJobTitle')[0].selectize.setValue(res);
                    }
                    return;
                }
            }
        });
    }



    function SetHelpDeskDefault()
    {
        
        switch ($("#BusinessUnit option:selected").text()) {
            case "DC North":
                $('#HelpDesk').val('GL Dist. Helpdesk');
                break;
            case "DC South":
                $('#HelpDesk').val('GL Dist. Helpdesk');
                break;
            case "DC East":
                $('#HelpDesk').val('GL Dist. Helpdesk');
                break;
            case "DC West":
                $('#HelpDesk').val('GL Dist. Helpdesk');
                break;
        }


        switch ($("#BusinessUnit option:selected").text()) {
            case "Service Office":
                $('#HelpDesk').val('GL Retail Helpdesk');
                break;
            case "Big Store North":
                $('#HelpDesk').val('GL Retail Helpdesk');
                break;
            case "Big Store South":
                $('#HelpDesk').val('GL Retail Helpdesk');
                break;
            case "Big Store East":
                $('#HelpDesk').val('GL Retail Helpdesk');
                break;
            case "Big Store West":
                $('#HelpDesk').val('GL Retail Helpdesk');
                break;
        }
    };

</script>