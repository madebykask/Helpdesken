using Autofac;
using DH.Helpdesk.Dal.DbQueryExecutor;
using DH.Helpdesk.Dal.Infrastructure;
using DH.Helpdesk.Dal.NewInfrastructure;
using DH.Helpdesk.Dal.NewInfrastructure.Concrete;
using DH.Helpdesk.Dal.Repositories;
using DH.Helpdesk.Dal.Repositories.ActionSetting;
using DH.Helpdesk.Dal.Repositories.ActionSetting.Concrete;
using DH.Helpdesk.Dal.Repositories.ADFS;
using DH.Helpdesk.Dal.Repositories.ADFS.Concrete;
using DH.Helpdesk.Dal.Repositories.BusinessRules;
using DH.Helpdesk.Dal.Repositories.BusinessRules.Concrete;
using DH.Helpdesk.Dal.Repositories.Cases;
using DH.Helpdesk.Dal.Repositories.Cases.Concrete;
using DH.Helpdesk.Dal.Repositories.Changes;
using DH.Helpdesk.Dal.Repositories.Changes.Concrete;
using DH.Helpdesk.Dal.Repositories.Computers;
using DH.Helpdesk.Dal.Repositories.Computers.Concrete;
using DH.Helpdesk.Dal.Repositories.Concrete;
using DH.Helpdesk.Dal.Repositories.Condition;
using DH.Helpdesk.Dal.Repositories.Condition.Concrete;
using DH.Helpdesk.Dal.Repositories.Faq;
using DH.Helpdesk.Dal.Repositories.Faq.Concrete;
using DH.Helpdesk.Dal.Repositories.Inventory;
using DH.Helpdesk.Dal.Repositories.Inventory.Concrete;
using DH.Helpdesk.Dal.Repositories.Invoice;
using DH.Helpdesk.Dal.Repositories.Invoice.Concrete;
using DH.Helpdesk.Dal.Repositories.MailTemplates;
using DH.Helpdesk.Dal.Repositories.MailTemplates.Concrete;
using DH.Helpdesk.Dal.Repositories.MetaData;
using DH.Helpdesk.Dal.Repositories.MetaData.Concrete;
using DH.Helpdesk.Dal.Repositories.Notifiers;
using DH.Helpdesk.Dal.Repositories.Notifiers.Concrete;
using DH.Helpdesk.Dal.Repositories.Printers;
using DH.Helpdesk.Dal.Repositories.Printers.Concrete;
using DH.Helpdesk.Dal.Repositories.Problem;
using DH.Helpdesk.Dal.Repositories.Problem.Concrete;
using DH.Helpdesk.Dal.Repositories.Projects;
using DH.Helpdesk.Dal.Repositories.Projects.Concrete;
using DH.Helpdesk.Dal.Repositories.Questionnaire;
using DH.Helpdesk.Dal.Repositories.Questionnaire.Concrete;
using DH.Helpdesk.Dal.Repositories.Servers;
using DH.Helpdesk.Dal.Repositories.Servers.Concrete;
using DH.Helpdesk.Dal.Repositories.Users;
using DH.Helpdesk.Dal.Repositories.Users.Concrete;
using DH.Helpdesk.Dal.Repositories.WorkstationModules;
using DH.Helpdesk.Dal.Repositories.WorkstationModules.Concrete;
using IUnitOfWork = DH.Helpdesk.Dal.Infrastructure.IUnitOfWork;
using UnitOfWork = DH.Helpdesk.Dal.Infrastructure.UnitOfWork;

namespace DH.Helpdesk.WebApi.DependencyInjection
{
    public class RepositoriesModule : Module
    {
        protected override void Load(ContainerBuilder builder)
        {
            builder.RegisterType<SqlDbQueryExecutor>().As<IDbQueryExecutor>();
            builder.RegisterType<SqlDbQueryExecutorFactory>().As<IDbQueryExecutorFactory>();
            builder.RegisterType<DatabaseFactory>().As<IDatabaseFactory>();
            builder.RegisterType<UnitOfWork>().As<IUnitOfWork>();
            builder.RegisterType<HelpdeskSessionFactory>().As<ISessionFactory>();
            builder.RegisterType<UnitOfWorkFactory>().As<IUnitOfWorkFactory>();

            builder.RegisterType<CircularRepository>().As<ICircularRepository>();
            builder.RegisterType<QuestionnaireQuestionOptionRepository>().As<IQuestionnaireQuestionOptionRepository>();
            builder.RegisterType<QuestionnaireQuestionRepository>().As<IQuestionnaireQuestionRepository>();
            builder.RegisterType<QuestionnaireRepository>().As<IQuestionnaireRepository>();

            builder.RegisterType<CausingPartRepository>().As<ICausingPartRepository>();
            builder.RegisterType<CustomerRepository>().As<ICustomerRepository>();
            builder.RegisterType<TextRepository>().As<ITextRepository>();
            builder.RegisterType<LanguageRepository>().As<ILanguageRepository>();
            builder.RegisterType<ReportCustomerRepository>().As<IReportCustomerRepository>();
            builder.RegisterType<CaseFieldSettingRepository>().As<ICaseFieldSettingRepository>();
            builder.RegisterType<CaseFieldSettingLanguageRepository>().As<ICaseFieldSettingLanguageRepository>();
            builder.RegisterType<ReportRepository>().As<IReportRepository>();
            builder.RegisterType<SettingRepository>().As<ISettingRepository>();
            builder.RegisterType<UserRepository>().As<IUserRepository>();
            builder.RegisterType<CaseRepository>().As<ICaseRepository>();
            builder.RegisterType<CaseFileRepository>().As<ICaseFileRepository>();
            builder.RegisterType<CaseHistoryRepository>().As<ICaseHistoryRepository>();
            builder.RegisterType<EmailLogRepository>().As<IEmailLogRepository>();
            builder.RegisterType<LogRepository>().As<ILogRepository>();
            builder.RegisterType<LogFileRepository>().As<ILogFileRepository>();
            builder.RegisterType<FormFieldValueRepository>().As<IFormFieldValueRepository>();
            builder.RegisterType<RegionRepository>().As<IRegionRepository>();
            builder.RegisterType<CaseTypeRepository>().As<ICaseTypeRepository>();
            builder.RegisterType<SupplierRepository>().As<ISupplierRepository>();
            builder.RegisterType<PriorityRepository>().As<IPriorityRepository>();
            builder.RegisterType<PriorityLanguageRepository>().As<IPriorityLanguageRepository>();
            builder.RegisterType<StatusRepository>().As<IStatusRepository>();
            builder.RegisterType<UserWorkingGroupRepository>().As<IUserWorkingGroupRepository>();
            builder.RegisterType<ProductAreaRepository>().As<IProductAreaRepository>();
            builder.RegisterType<MailTemplateRepository>().As<IMailTemplateRepository>();
            builder.RegisterType<WorkingGroupRepository>().As<IWorkingGroupRepository>();
            builder.RegisterType<MailTemplateLanguageRepository>().As<IMailTemplateLanguageRepository>();
            builder.RegisterType<MailTemplateIdentifierRepository>().As<IMailTemplateIdentifierRepository>();
            builder.RegisterType<CaseSettingRepository>().As<ICaseSettingRepository>();
            builder.RegisterType<UserGroupRepository>().As<IUserGroupRepository>();
            builder.RegisterType<InfoTextRepository>().As<IInfoTextRepository>();
            builder.RegisterType<PriorityImpactUrgencyRepository>().As<IPriorityImpactUrgencyRepository>();
            builder.RegisterType<DepartmentRepository>().As<IDepartmentRepository>();
            builder.RegisterType<SystemRepository>().As<ISystemRepository>();
            builder.RegisterType<OperatingSystemRepository>().As<IOperatingSystemRepository>();
            builder.RegisterType<CategoryRepository>().As<ICategoryRepository>();
            builder.RegisterType<CurrencyRepository>().As<ICurrencyRepository>();
            builder.RegisterType<CountryRepository>().As<ICountryRepository>();
            builder.RegisterType<NotifierFieldSettingRepository>().As<INotifierFieldSettingRepository>();
            builder.RegisterType<NotifierGroupRepository>().As<INotifierGroupRepository>();
            builder.RegisterType<NotifierRepository>().As<INotifierRepository>();
            builder.RegisterType<ComputerUsersBlackListRepository>().As<IComputerUsersBlackListRepository>();
            builder.RegisterType<ComputerUsersRepository>().As<IComputerUsersRepository>();
            builder.RegisterType<ComputerRepository>().As<IComputerRepository>();
            builder.RegisterType<ComputerStatusRepository>().As<IComputerStatusRepository>();
            builder.RegisterType<OrganizationUnitRepository>().As<IOrganizationUnitRepository>();
            builder.RegisterType<AccountActivityRepository>().As<IAccountActivityRepository>();
            builder.RegisterType<CustomerUserRepository>().As<ICustomerUserRepository>();
            builder.RegisterType<OrderTypeRepository>().As<IOrderTypeRepository>();
            builder.RegisterType<UserRoleRepository>().As<IUserRoleRepository>();
            builder.RegisterType<DepartmentUserRepository>().As<IDepartmentUserRepository>();
            builder.RegisterType<LogProgramRepository>().As<ILogProgramRepository>();
            builder.RegisterType<ModuleRepository>().As<IModuleRepository>();
            builder.RegisterType<UserModuleRepository>().As<IUserModuleRepository>();
            builder.RegisterType<CaseSearchRepository>().As<ICaseSearchRepository>();
            builder.RegisterType<GlobalSettingRepository>().As<IGlobalSettingRepository>();
            builder.RegisterType<ProblemLogRepository>().As<IProblemLogRepository>();
            builder.RegisterType<ProblemEMailLogRepository>().As<IProblemEMailLogRepository>();
            builder.RegisterType<ProblemRepository>().As<IProblemRepository>();
            builder.RegisterType<ImpactRepository>().As<IImpactRepository>();
            builder.RegisterType<FinishingCauseRepository>().As<IFinishingCauseRepository>();
            builder.RegisterType<FinishingCauseCategoryRepository>().As<IFinishingCauseCategoryRepository>();
            builder.RegisterType<StateSecondaryRepository>().As<IStateSecondaryRepository>();
            builder.RegisterType<CaseSolutionRepository>().As<ICaseSolutionRepository>();
            builder.RegisterType<CaseSolutionCategoryRepository>().As<ICaseSolutionCategoryRepository>();
            builder.RegisterType<CaseSolutionConditionRepository>().As<ICaseSolutionConditionRepository>();
            builder.RegisterType<CaseSolutionScheduleRepository>().As<ICaseSolutionScheduleRepository>();
            builder.RegisterType<NotifierFieldSettingLanguageRepository>().As<INotifierFieldSettingLanguageRepository>();
            builder.RegisterType<ActionSettingRepository>().As<IActionSettingRepository>();
            builder.RegisterType<InvoiceArticleUnitRepository>().As<IInvoiceArticleUnitRepository>();
            builder.RegisterType<InvoiceArticleRepository>().As<IInvoiceArticleRepository>();
            builder.RegisterType<CaseInvoiceArticleRepository>().As<ICaseInvoiceArticleRepository>();
            builder.RegisterType<BulletinBoardRepository>().As<IBulletinBoardRepository>();
            builder.RegisterType<CaseSolutionSettingRepository>().As<ICaseSolutionSettingRepository>();
            builder.RegisterType<DocumentRepository>().As<IDocumentRepository>();
            builder.RegisterType<DocumentCategoryRepository>().As<IDocumentCategoryRepository>();
            builder.RegisterType<FormRepository>().As<IFormRepository>();
            builder.RegisterType<ADFSRepository>().As<IADFSRepository>();
            builder.RegisterType<HolidayRepository>().As<IHolidayRepository>();
            builder.RegisterType<HolidayHeaderRepository>().As<IHolidayHeaderRepository>();
            builder.RegisterType<DomainRepository>().As<IDomainRepository>();
            builder.RegisterType<LinkRepository>().As<ILinkRepository>();
            builder.RegisterType<CaseLockRepository>().As<ICaseLockRepository>();
            builder.RegisterType<CalendarRepository>().As<ICalendarRepository>();
            builder.RegisterType<LinkGroupRepository>().As<ILinkGroupRepository>();
            builder.RegisterType<UsersPasswordHistoryRepository>().As<IUsersPasswordHistoryRepository>();
            builder.RegisterType<CaseFilterFavoriteRepository>().As<ICaseFilterFavoriteRepository>();
            builder.RegisterType<CaseInvoiceSettingsRepository>().As<ICaseInvoiceSettingsRepository>();
            builder.RegisterType<ProjectCollaboratorRepository>().As<IProjectCollaboratorRepository>();
            builder.RegisterType<ProjectFileRepository>().As<IProjectFileRepository>();
            builder.RegisterType<ProjectLogRepository>().As<IProjectLogRepository>();
            builder.RegisterType<ProjectRepository>().As<IProjectRepository>();
            builder.RegisterType<ProjectScheduleRepository>().As<IProjectScheduleRepository>();
            builder.RegisterType<ReportFavoriteRepository>().As<IReportFavoriteRepository>();
            builder.RegisterType<Mail2TicketRepository>().As<IMail2TicketRepository>();
            builder.RegisterType<BusinessRuleRepository>().As<IBusinessRuleRepository>();
            builder.RegisterType<EmailGroupRepository>().As<IEmailGroupRepository>();
            builder.RegisterType<EmailGroupEmailRepository>().As<IEmailGroupEmailRepository>();
            builder.RegisterType<FaqRepository>().As<IFaqRepository>();
            builder.RegisterType<FaqFileRepository>().As<IFaqFileRepository>();
            builder.RegisterType<QuestionRepository>().As<IQuestionRepository>();
            builder.RegisterType<FaqCategoryRepository>().As<IFaqCategoryRepository>();
            builder.RegisterType<FaqCategoryLanguageRepository>().As<IFaqCategoryLanguageRepository>();
            builder.RegisterType<UrgencyRepository>().As<IUrgencyRepository>();
            builder.RegisterType<CaseExtraFollowersRepository>().As<ICaseExtraFollowersRepository>();
            builder.RegisterType<UserEmailRepository>().As<IUserEmailRepository>();
            builder.RegisterType<OrderEMailLogRepository>().As<IOrderEMailLogRepository>();
            builder.RegisterType<OrderFieldSettingsRepository>().As<IOrderFieldSettingsRepository>();
            builder.RegisterType<OrderLogRepository>().As<IOrderLogRepository>();
            builder.RegisterType<OrderRepository>().As<IOrderRepository>();
            builder.RegisterType<OrderStateRepository>().As<IOrderStateRepository>();
            builder.RegisterType<ExtendedCaseFormRepository>().As<IExtendedCaseFormRepository>();
			builder.RegisterType<ExtendedCaseDataRepository>().As<IExtendedCaseDataRepository>();
            builder.RegisterType<TextTranslationRepository>().As<ITextTranslationRepository>();
            builder.RegisterType<TextTypeRepository>().As<ITextTypeRepository>();
            builder.RegisterType<ExtendedCaseValueRepository>().As<IExtendedCaseValueRepository>();
            builder.RegisterType<ApplicationRepository>().As<IApplicationRepository>();
            builder.RegisterType<EmailLogAttemptRepository>().As<IEmailLogAttemptRepository>();
            builder.RegisterType<WatchDateCalendarValueRepository>().As<IWatchDateCalendarValueRepository>();
            builder.RegisterType<WatchDateCalendarRepository>().As<IWatchDateCalendarRepository>();
            builder.RegisterType<MetaDataRepository>().As<IMetaDataRepository>();
            builder.RegisterType<EntityInfoRepository>().As<IEntityInfoRepository>();
            builder.RegisterType<CaseFollowUpRepository>().As<ICaseFollowUpRepository>();
            builder.RegisterType<ConditionRepository>().As<IConditionRepository>();
            builder.RegisterType<InventoryTypeRepository>().As<IInventoryTypeRepository>();
            builder.RegisterType<InventoryTypeStandardSettingsRepository>().As<IInventoryTypeStandardSettingsRepository>();
            builder.RegisterType<ServerRepository>().As<IServerRepository>();
            builder.RegisterType<PrinterRepository>().As<IPrinterRepository>();
            builder.RegisterType<InventoryRepository>().As<IInventoryRepository>();
            builder.RegisterType<InventoryTypePropertyValueRepository>().As<IInventoryTypePropertyValueRepository>();
            builder.RegisterType<ComputerLogRepository>().As<IComputerLogRepository>();
            builder.RegisterType<ComputerInventoryRepository>().As<IComputerInventoryRepository>();
            builder.RegisterType<OperationLogRepository>().As<IOperationLogRepository>();
            builder.RegisterType<InventoryTypeGroupRepository>().As<IInventoryTypeGroupRepository>();
            builder.RegisterType<InventoryFieldSettingsRepository>().As<IInventoryFieldSettingsRepository>();
            builder.RegisterType<InventoryDynamicFieldSettingsRepository>().As<IInventoryDynamicFieldSettingsRepository>();
            builder.RegisterType<ComputerFieldSettingsRepository>().As<IComputerFieldSettingsRepository>();
            builder.RegisterType<ComputerHistoryRepository>().As<IComputerHistoryRepository>();
            builder.RegisterType<LogicalDriveRepository>().As<ILogicalDriveRepository>();
            builder.RegisterType<SoftwareRepository>().As<ISoftwareRepository>();
            builder.RegisterType<ServerFieldSettingsRepository>().As<IServerFieldSettingsRepository>();
            builder.RegisterType<OperationObjectRepository>().As<IOperationObjectRepository>();
            builder.RegisterType<OperationLogEMailLogRepository>().As<IOperationLogEMailLogRepository>();
            builder.RegisterType<ServerLogicalDriveRepository>().As<IServerLogicalDriveRepository>();
            builder.RegisterType<ServerSoftwareRepository>().As<IServerSoftwareRepository>();
            builder.RegisterType<PrinterFieldSettingsRepository>().As<IPrinterFieldSettingsRepository>();
            builder.RegisterType<CaseSectionsRepository>().As<ICaseSectionsRepository>();
            builder.RegisterType<ComputerUserCategoryRepository>().As<IComputerUserCategoryRepository>();
            builder.RegisterType<RegistrationSourceCustomerRepository>().As<IRegistrationSourceCustomerRepository>();
            builder.RegisterType<ProblemRepository>().As<IProblemRepository>();
            builder.RegisterType<ChangeCategoryRepository>().As<IChangeCategoryRepository>();
            builder.RegisterType<ChangeChangeGroupRepository>().As<IChangeChangeGroupRepository>();
            builder.RegisterType<ChangeChangeRepository>().As<IChangeChangeRepository>();
            builder.RegisterType<ChangeContactRepository>().As<IChangeContactRepository>();
            builder.RegisterType<ChangeCouncilRepository>().As<IChangeCouncilRepository>();
            builder.RegisterType<ChangeDepartmentRepository>().As<IChangeDepartmentRepository>();
            builder.RegisterType<ChangeEmailLogRepository>().As<IChangeEmailLogRepository>();
            builder.RegisterType<ChangeFieldSettingRepository>().As<IChangeFieldSettingRepository>();
            builder.RegisterType<ChangeFileRepository>().As<IChangeFileRepository>();
            builder.RegisterType<ChangeGroupRepository>().As<IChangeGroupRepository>();
            builder.RegisterType<ChangeHistoryRepository>().As<IChangeHistoryRepository>();
            builder.RegisterType<ChangeImplementationStatusRepository>().As<IChangeImplementationStatusRepository>();
            builder.RegisterType<ChangeLogRepository>().As<IChangeLogRepository>();
            builder.RegisterType<ChangeObjectRepository>().As<IChangeObjectRepository>();
            builder.RegisterType<ChangePriorityRepository>().As<IChangePriorityRepository>();
            builder.RegisterType<ChangeRepository>().As<IChangeRepository>();
            builder.RegisterType<ChangeStatusRepository>().As<IChangeStatusRepository>();
            builder.RegisterType<TextTypeRepository>().As<ITextTypeRepository>();
            builder.RegisterType<CaseSolutionSettingRepository>().As<ICaseSolutionSettingRepository>();
            builder.RegisterType<FileIndexingRepository>().As<IFileIndexingRepository>();
            builder.RegisterType<FeatureToggleRepository>().As<IFeatureToggleRepository>();
			builder.RegisterType<FileViewLogRepository>().As<IFileViewLogRepository>();
			builder.RegisterType<ContractLogRepository>().As<IContractLogRepository>();
		}
    }
}