@model DH.Helpdesk.SelfService.Models.Orders.FieldModels.ConfigurableFieldModel<string>
           
@if (!Model.Show)
{    
    @Html.HiddenFor(m => m.Value, new { data_dh_is_required = false, @class = "inputw450 inputmh100" })
    return;
}

@{
    var inputAttributes = (Dictionary<string, object>)ViewData["inputAttributes"];
    Dictionary<string, object> htmlAttributes;
    if (inputAttributes != null)
    {
        htmlAttributes = new Dictionary<string, object>(inputAttributes.Count + 1);

        foreach (var inputAttribute in inputAttributes)
        {
            htmlAttributes.Add(inputAttribute.Key, inputAttribute.Value);
            if (inputAttribute.Key.Equals("maxlength", StringComparison.InvariantCultureIgnoreCase))
            {
                htmlAttributes.Add("data-val-length", string.Format(Translation.Get("Ange högst {0} tecken."), inputAttribute.Value));
                htmlAttributes.Add("data-val-length-max", inputAttribute.Value);
            }
        }

    }
    else
    {
        htmlAttributes = new Dictionary<string, object>(1);
    }
    htmlAttributes.Add("data-dh-is-required", Model.IsRequired);
    htmlAttributes.Add("class", "inputw450 inputmh100");
}

<div class="row form-group">
    <div class="col-md-3">
        @Html.FieldCaption(Model)
    </div>
    <div class="col-md-6">
        @Html.TextAreaFor(m => m.Value, htmlAttributes)
        @Html.HiddenFor(m => m.IsRequired)
        @Html.ValidationMessageFor(m => m.Value)
    </div>
    <div class="col-md-3">
        @Model.Help
    </div>
</div>