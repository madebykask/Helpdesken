@using System.Web.Optimization
@using DH.Helpdesk.Common.Constants

@model DH.Helpdesk.SelfService.Models.Case.ExtendedCaseViewModel
@{
    var lastErrorMessage = "";
    if (Model.Result != null)
    {
        if (!Model.Result.IsSucceed)
        {
            lastErrorMessage = Model.Result.GenerateRawMessage();
        }
    }
    var extendedFormId = Model.ExtendedCaseDataModel.FormModel.Id;
    /*Debug mode*/
    //Model.ExtendedCaseDataModel.FormModel.Path =
    //    "http://dhhelpdesk-ikea-bschr-v5-ec.datahalland.se/ExtendedCase/?formId=" + extendedFormId + "&autoLoad=1";
}

<script type="text/javascript">
    window.parameters = {
        saveCaseUrl: '@Url.Content("~/Case/ExtendedCase")',

        caseFieldIds: {
            CaseId: "CaseDataModel_Id",
            CustomerId: "CaseDataModel_Customer_Id",
            CaseLanguageId: "CaseDataModel_RegLanguage_Id",
            ReportedBy: "CaseDataModel_ReportedBy",
            PersonsName: "CaseDataModel_PersonsName",
            PersonsPhone: "CaseDataModel_PersonsPhone",
            PersonsEmail: "CaseDataModel_PersonsEmail",
            PersonsCellphone: "CaseDataModel_PersonsCellphone",
            UserCode: "CaseDataModel_UserCode",
            RegionId: "CaseDataModel_Region_Id",
            DepartmentId: "CaseDataModel_Department_Id",
            OUId: "CaseDataModel_OU_Id",
            CaseTypeId: "CaseDataModel_CaseType_Id",
            ProductAreaId: "CaseDataModel_ProductArea_Id",
            CategoryId: "CaseDataModel_Category_Id",
            SupplierId: "CaseDataModel_Supplier_Id",
            WorkingGroupId: "CaseDataModel_WorkingGroup_Id",
            AdministratorId: "CaseDataModel_Performer_User_Id",
            ResponsibleId: "CaseDataModel_CaseResponsibleUser_Id",
            PriorityId: "CaseDataModel_Priority_Id",
            StatusId: "CaseDataModel_Status_Id",
            SubStatusId: "CaseDataModel_StateSecondary_Id",
            CausingPartId: "CaseDataModel_CausingPartId",
            PlanDate: "CaseDataModel_PlanDate",
            Place: "CaseDataModel_Place",
            WatchDate: "CaseDataModel_WatchDate",
            FinishingDate: "CaseDataModel_FinishingDate",
            ClosingReasonId: "CaseDataModel_FinishingType_Id",
            SourceId: "CaseDataModel_RegistrationSourceCustomer_Id",
            log_InternalText: "CaseDataModel_Text_Internal",
            CostCentre: "CaseDataModel_CostCentre",
        },

        caseInitValues: {
            CaseId: '@Model.CaseDataModel.Id',
            CustomerId: '@Model.CaseDataModel.Customer_Id',
            ReportedBy: '@Model.CaseDataModel.ReportedBy',
            PersonsName: '@Model.CaseDataModel.PersonsName',
            PersonsPhone: '@Model.CaseDataModel.PersonsPhone',
            UserCode: '@Model.CaseDataModel.UserCode',
            RegionId: '@Model.CaseDataModel.Region_Id',
            DepartmentId: '@Model.CaseDataModel.Department_Id',
            ParentOUId: '@(Model.CaseOU != null && Model.CaseOU.Parent_OU_Id != null ? Model.CaseOU.Parent_OU_Id : null)',
            ChildOUId: '@Model.CaseDataModel.OU_Id',
            ProductAreaId: '@Model.CaseDataModel.ProductArea_Id',
            StatusId: '@Model.CaseDataModel.Status_Id',
            SubStatusId: '@Model.CaseDataModel.StateSecondary_Id',
            PlanDate: '@(Model.CaseDataModel.PlanDate != null ? Model.CaseDataModel.PlanDate.Value.ToString() : "" )',
            WatchDate: '@(Model.CaseDataModel.WatchDate != null ? Model.CaseDataModel.WatchDate.Value.ToString() : "" )',
            PriorityId: '@Model.CaseDataModel.Priority_Id',
            PersonsEmail: '@Model.CaseDataModel.PersonsEmail',
            PersonsCellphone: '@Model.CaseDataModel.PersonsCellphone',
            Place: '@Model.CaseDataModel.Place',
            CostCentre: '@Model.CaseDataModel.CostCentre',
        },

        extendedCaseGuid: '@(Model.ExtendedCaseDataModel.ExtendedCaseGuid)',
        extendedCaseFormId: '@(Model.ExtendedCaseDataModel.FormModel.Id)',
        extendedCaseLanguageId: '@(Model.ExtendedCaseDataModel.FormModel.LanguageId)',
        extendedCasePath: '@(Model.ExtendedCaseDataModel.FormModel.Path)',
        userRole: '@(Model.UserRole)',
        caseStatus: '@(Model.StateSecondaryId)',
        currentUser: '@(Model.CurrentUser)',

        lastError: '@Html.Raw(lastErrorMessage)'
    }

</script>

@Scripts.Render("~/Content/js/Case/extendedCase")


<div class="jumbotron greybar">
    <div class="container-fluid">
        <div class="col-lg-12 secnav">

                <input id="btnSave" type="button" value='@Translation.Get("Save", Enums.TranslationSource.TextTranslation)' class="btn btn-default pull-left" style="margin-right:20px !important;" />
            @if (Model.WorkflowSteps != null && Model.WorkflowSteps.Any())
            {
                
                    <div class="input-group" >
                        <select id="steps" name="steps" class="dropdown-group pull-left">
                            <option value="0" class="form-control">@Translation.Get(Text.SelectStep)</option>
                            @if (Model.WorkflowSteps != null && Model.WorkflowSteps.Any())
                            {
                                foreach (var step in Model.WorkflowSteps)
                                {
                            <option data-next-step="@step.NextStep" value="@step.CaseTemplateId">@Translation.Get(step.Name)</option>
                                }
                            }
                        </select>
                        <span class="input-group-btn pull-left">
                            <input id="btnGo" type="button" class="btn btn-default go-button" value="@Translation.Get("Send")" />
                        </span>
                    </div>
                
            }
        </div>
    </div>
</div>

@using (Html.BeginForm("ExtendedCase", "case", null, FormMethod.Post, new { id = "extendedCaseForm" }))
{
    // Base
    @Html.HiddenFor(model => model.CaseDataModel.Id)
    @Html.HiddenFor(model => model.CaseDataModel.CaseNumber)
    @Html.HiddenFor(model => model.CaseDataModel.CaseGUID)
    @Html.HiddenFor(model => model.CaseDataModel.Customer_Id)
    @Html.HiddenFor(model => model.CaseDataModel.User_Id)
    @Html.HiddenFor(model => model.CaseDataModel.IpAddress)
    @Html.HiddenFor(model => model.CaseDataModel.RegLanguage_Id)
    @Html.HiddenFor(model => model.CaseDataModel.RegUserId)
    @Html.HiddenFor(model => model.CaseDataModel.RegUserDomain)
    @Html.HiddenFor(model => model.CaseDataModel.ChangeByUser_Id)
    @Html.HiddenFor(model => model.CaseDataModel.ExternalTime)
    @Html.HiddenFor(model => model.CaseDataModel.Deleted)
    @Html.HiddenFor(model => model.CaseDataModel.RegUserName)

    // Initiator
    @Html.HiddenFor(model => model.CaseDataModel.ReportedBy)
    @Html.HiddenFor(model => model.CaseDataModel.PersonsName)
    @Html.HiddenFor(model => model.CaseDataModel.PersonsEmail)
    @Html.HiddenFor(model => model.CaseDataModel.NoMailToNotifier)
    @Html.HiddenFor(model => model.CaseDataModel.PersonsPhone)
    @Html.HiddenFor(model => model.CaseDataModel.PersonsCellphone)
    @Html.HiddenFor(model => model.CaseDataModel.CostCentre)
    @Html.HiddenFor(model => model.CaseDataModel.Place)
    @Html.HiddenFor(model => model.CaseDataModel.UserCode)
    @Html.HiddenFor(model => model.CaseDataModel.UpdateNotifierInformation)
    @Html.HiddenFor(model => model.CaseDataModel.Region_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Department_Id)
    @Html.HiddenFor(model => model.CaseDataModel.OU_Id)

    // IsAout
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_ReportedBy)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_PersonsName)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_PersonsEmail)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_PersonsPhone)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_PersonsCellPhone)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_CostCentre)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_Place)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_UserCode)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_Region_Id)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_Department_Id)
    @Html.HiddenFor(model => model.CaseDataModel.IsAbout_OU_Id)

    // Computer info
    @Html.HiddenFor(model => model.CaseDataModel.InventoryNumber)
    @Html.HiddenFor(model => model.CaseDataModel.InventoryType)
    @Html.HiddenFor(model => model.CaseDataModel.InventoryLocation)

    // Case info
    @Html.HiddenFor(model => model.CaseDataModel.RegistrationSource)
    @Html.HiddenFor(model => model.CaseDataModel.CaseType_Id)
    @Html.HiddenFor(model => model.CaseDataModel.ProductArea_Id)
    @Html.HiddenFor(model => model.CaseDataModel.ProductAreaSetDate)
    @Html.HiddenFor(model => model.CaseDataModel.ProductAreaQuestionVersion_Id)
    @Html.HiddenFor(model => model.CaseDataModel.System_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Urgency_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Impact_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Category_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Supplier_Id)
    @Html.HiddenFor(model => model.CaseDataModel.InvoiceNumber)
    @Html.HiddenFor(model => model.CaseDataModel.Caption)
    @Html.HiddenFor(model => model.CaseDataModel.Description)
    @Html.HiddenFor(model => model.CaseDataModel.Miscellaneous)
    @Html.HiddenFor(model => model.CaseDataModel.ContactBeforeAction)
    @Html.HiddenFor(model => model.CaseDataModel.SMS)
    @Html.HiddenFor(model => model.CaseDataModel.Available)
    @Html.HiddenFor(model => model.CaseDataModel.Cost)
    @Html.HiddenFor(model => model.CaseDataModel.OtherCost)
    @Html.HiddenFor(model => model.CaseDataModel.Currency)


    //Other info
    @Html.HiddenFor(model => model.CaseDataModel.WorkingGroup_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Performer_User_Id)
    @Html.HiddenFor(model => model.CaseDataModel.CaseResponsibleUser_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Priority_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Status_Id)
    @Html.HiddenFor(model => model.CaseDataModel.StateSecondary_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Project_Id)
    @Html.HiddenFor(model => model.CaseDataModel.ProjectSchedule_Id)
    @Html.HiddenFor(model => model.CaseDataModel.Problem_Id)
    @Html.HiddenFor(model => model.CaseDataModel.CausingPartId)
    @Html.HiddenFor(model => model.CaseDataModel.Change_Id)
    @Html.HiddenFor(model => model.CaseDataModel.PlanDate)
    @Html.HiddenFor(model => model.CaseDataModel.WatchDate)
    @Html.HiddenFor(model => model.CaseDataModel.Verified)
    @Html.HiddenFor(model => model.CaseDataModel.VerifiedDescription)
    @Html.HiddenFor(model => model.CaseDataModel.SolutionRate)
    @Html.HiddenFor(model => model.CaseDataModel.AgreedDate)
    @Html.HiddenFor(model => model.CaseDataModel.ApprovedDate)
    @Html.HiddenFor(model => model.CaseDataModel.ApprovedBy_User_Id)
    @Html.HiddenFor(model => model.CaseDataModel.FinishingDate)
    @Html.HiddenFor(model => model.CaseDataModel.FinishingDescription)
    @Html.HiddenFor(model => model.CaseDataModel.FinishingType_Id)
    @Html.HiddenFor(model => model.CaseDataModel.RegistrationSourceCustomer_Id)
    @Html.HiddenFor(model => model.CaseDataModel.LockCaseToWorkingGroup_Id)
    @Html.HiddenFor(model => model.CaseDataModel.FollowUpDate)
    @Html.HiddenFor(model => model.CaseDataModel.RelatedCaseNumber)
    @Html.HiddenFor(model => model.CaseDataModel.LeadTime)
    @Html.HiddenFor(model => model.CaseDataModel.CaseCleanUp_Id)
    @Html.HiddenFor(model => model.CaseDataModel.DefaultOwnerWG_Id)    
    @Html.HiddenFor(model => model.CaseDataModel.Moved)
    @Html.HiddenFor(model => model.CaseDataModel.LatestSLACountDate)
    @Html.HiddenFor(model => model.CaseDataModel.RegTime)
    @Html.HiddenFor(model => model.CaseDataModel.ChangeTime)

    // Log
    @Html.HiddenFor(model => model.CaseDataModel.Text_External)
    @Html.HiddenFor(model => model.CaseDataModel.Text_Internal)

    @Html.HiddenFor(model => model.CaseDataModel.CaseSolution_Id)


    // Etc
    @Html.HiddenFor(model => model.CaseTemplateId)
    @Html.HiddenFor(model => model.CaseId)
    @Html.HiddenFor(model => model.CaseTemplateId)
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.LanguageId)


    // Extended Case Data
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.Id)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.ExtendedCaseGuid)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.ExtendedCaseFormId)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.CreatedBy)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.CreatedOn)

    // Extended Case Form
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.Id)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.Name)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.CaseId)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.CaseStatus)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.LanguageId)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.UserGuid)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.UserRole)
    @Html.HiddenFor(model => model.ExtendedCaseDataModel.FormModel.Path)

    @Html.HiddenFor(model => model.StateSecondaryId)
    @Html.HiddenFor(model => model.UserRole)
    @Html.HiddenFor(model => model.CurrentUser)

    /*according to Helpdesk*/
    @Html.Hidden("ButtonClick", "") @*TEMP, used to define if "Send" button is clicked*@
    @Html.HiddenFor(model => model.SelectedWorkflowStep)

}
<div class="container-fluid dh-container">
    <ul class="nav nav-tabs" id="tabsArea">
        <li id="extendedcase-tab-@extendedFormId" class="active">
            <a href="#fragment-1">
                @Model.ExtendedCaseDataModel.FormModel.Name
                <i id="exTabIndicator_@extendedFormId" class="tab-indicator" style="display:none;">&nbsp;</i>
            </a>
        </li>
    </ul>
    <div class="content">
        <div id="fragment-1" class="tab-pane active">
            <div class="container-fluid dh-container">
                <div id="container_@extendedFormId" class="">
                    @*Extended case placement*@
                </div>
            </div>
        </div>
    </div>
</div>
