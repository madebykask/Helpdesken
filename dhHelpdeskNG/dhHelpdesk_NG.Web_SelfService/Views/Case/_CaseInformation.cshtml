@model DH.Helpdesk.BusinessData.Models.Case.CaseModel
@using DH.Helpdesk.BusinessData.OldComponents;
@using DH.Helpdesk.Common.Extensions.String

@{
    var templateText = "<strong>{0}</strong>&nbsp;{1}&nbsp;|&nbsp;";

    var reportedBy = string.Empty;
    var personsName = string.Empty;
    var personPhone = string.Empty;
    var stateSecondary = string.Empty;
    var workingGroup = string.Empty;

    var texts = new Dictionary<string, string>();

    if (Model.Id > 0)
    {

        var customerId = Model.Customer_Id;

        if (!string.IsNullOrEmpty(Model.ReportedBy))
        {
            reportedBy = string.Format(templateText, Translation.GetForCase(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), customerId), Model.ReportedBy);
            texts.Add("ReportedBy", reportedBy);
        }

        if (!string.IsNullOrEmpty(Model.PersonsName))
        {
            personsName = string.Format(templateText, Translation.GetForCase(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), customerId), Model.PersonsName);
            texts.Add("PersonsName", personsName);
        }

        //Note, IKEA MYHR uses Phone for last name
        if (!string.IsNullOrEmpty(Model.PersonsPhone))
        {
            personPhone = string.Format(templateText, Translation.GetForCase(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), customerId), Model.PersonsPhone);
            texts.Add("PersonsPhone", personPhone);
        }

        if (!string.IsNullOrEmpty(Model.StateSecondaryName))
        {
            stateSecondary = string.Format(templateText, Translation.GetForCase(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString(), customerId), Model.StateSecondaryName);
            texts.Add("StateSecondary", stateSecondary);
        }

        if (!string.IsNullOrEmpty(Model.WorkingGroupName))
        {


            workingGroup = string.Format(templateText, Translation.GetForCase(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString(), customerId), Model.WorkingGroupName);
            texts.Add("Workinggroup", workingGroup);
        }
    }
}

@if (texts.Count > 0)
{
    <h4 style="font-weight:normal !important; font-size:11px !important;">

        @if (texts.Count > 0 && !string.IsNullOrEmpty(ViewData["Headline"].ToString()))
        {
            <strong>@ViewData["Headline"].ToString()</strong>
            if (texts.Any())
            {
                <text> | </text>
            }
        }
        else
        {
            <text>&nbsp;</text>
        }

        @foreach (var item in texts)
        {
            if (!texts[item.Key].Equals(texts.Last().Value))
            {
                @item.Value.RemoveRequiredText().ToHtmlString()
            }
            else
            {
                @item.Value.RemoveRequiredText().Replace("|", "").ToHtmlString()
            }
        }
    </h4>
}
