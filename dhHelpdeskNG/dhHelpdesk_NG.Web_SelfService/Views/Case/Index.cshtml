@using System.Web.Optimization
@using DH.Helpdesk.BusinessData.OldComponents
@using DH.Helpdesk.Common.Enums

@model DH.Helpdesk.SelfService.Models.Case.CaseOverviewModel

@{
    ViewBag.Title = "Index";    
}

@functions
{
    bool CheckField(string fieldName)
    {
        var fieldNameToCheck = 
            fieldName == GlobalEnums.TranslationCaseFields.tblLog_Filename.ToString() 
            ? fieldName.Replace('_', '.') 
            : fieldName;

        return Model.FieldSettings.Select(f => f.Name).Contains(fieldNameToCheck);
    }
}

<div class="container-fluid dh-container">    
            
    <ul class="nav nav-tabs" id="NewCaseTab">
        <li id="CasePreviewTab" class="active">                             
            <a href="#fragment-1">@Translation.Get("Case", Enums.TranslationSource.TextTranslation): @Model.CasePreview.CaseNumber</a>                                         
        </li>
        @if (ViewBag.AttachmentPlacement == 1 && Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Filename.ToString()))
        {
            <li>
                <a href="#attachment-tab">@Translation.Get("Attachments", Enums.TranslationSource.TextTranslation) <span id="nrOfAttachedFiles">@(Model.CasePreview.CaseFiles != null && Model.CasePreview.CaseFiles.Count > 0 ? "(" + Model.CasePreview.CaseFiles.Count.ToString() + ")" : "")</span></a>
            </li>
        }
    </ul>

    <div class="content tab-content">
        @if (Model.CasePreview != null)
        {
            <div id="fragment-1" class="tab-pane active">
                <div class="container-fluid dh-container">

                    @if (Model.CasePreview.FinishingDate != null)
                    {
                        @Html.Partial("_ClosedCaseAlert", Model.GetClosedCaseAlertModel())
                    }
                    else
                    {
                        if (Model.ShowRegistringMessage && !string.IsNullOrEmpty(Model.CaseRegistrationMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.CaseRegistrationMessage.SetHtmlParameters())</div>
                        }
                    }
                    
                    @Html.Partial("_CaseReceipt", Model)

                </div>
            </div>

            if (ViewBag.AttachmentPlacement == 1 && Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Filename.ToString()))
            {
                <div id="attachment-tab" class="tab-pane" style="overflow:hidden;">
                    <div class="container-fluid dh-container">
                        <table id="case_files_table" class="table table-striped">
                            @if (Model.CasePreview.CaseFiles != null)
                            {
                                foreach (var file in Model.CasePreview.CaseFiles)
                                {
                                    <tr>
                                        <td>
                                            <a style="color:blue" href="@this.Url.Action("DownloadFile", new RouteValueDictionary { { "id", Model.CasePreview.Id }, { "fileName", file.FileName } })"><i class="icon-file"></i>@file.FileName</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>

                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Content/js/Case/log")    
}

@section Dialogs {
    
    @if (Model.CasePreview.Id > 0 && 
         !Model.IsFinished && 
         CheckField(GlobalEnums.TranslationCaseFields.tblLog_Filename.ToString())) 
    {
        //Show Communication for Selfservice (only if enabled in config)
        if (ViewBag.IsLineManagerApplication || 
           (ViewBag.ApplicationType == ApplicationTypes.SelfService && ViewBag.ShowCommunicationForSelfservice)) 
        {
             @Html.Partial("_Communication", Model.GetCaseLogModel())
        }

        @Html.Partial("ModalDialogs/_UploadExistingLogFilePopup")
        @Html.Partial("ModalDialogs/_UploadFileFromClipboardPopup")    
    }
}

