@using System.Web.Script.Serialization
@using DH.Helpdesk.BusinessData.OldComponents
@using System.Web.Optimization

@model DH.Helpdesk.SelfService.Models.Case.NewCaseModel
@{
    var jsSerializer = new JavaScriptSerializer();
}



<script type="text/javascript">
    window.appOptions = '@Html.Raw(jsSerializer.Serialize(Model.JsApplicationOptions))';

    window.appParameters = {        
        uploadCaseFileUrl: '@Url.Action("NewCaseUploadFile")',
        caseFileKey: '@Model.CaseFileKey',
        newCaseFilesUrl: '@Url.Action("NewCaseFiles")',
        fileAlreadyExistsMsg: '@Html.Raw(Translation.Get("File already exists", Enums.TranslationSource.TextTranslation))',
        downloadCaseFileUrl: '@Url.Action("DownloadNewCaseFile")',
        downloadCaseFileParamUrl: '@(!string.IsNullOrEmpty(Model.CaseFileKey) ? "id=" + Model.CaseFileKey + "&" : string.Empty)',
        deleteCaseFileUrl: '@Url.Action("DeleteNewCaseFile")',
        searchUserUrl: '@Url.Content("~/Case/SearchUser")',
        seachComputerUrl: '@Url.Content("~/Case/SearchComputer")',
        saveNewCaseUrl: '@Url.Content("~/Case/NewCase")',
        fetchDepartmentsUrl: '@Url.Content("~/Case/GetDepartmentsByRegion")',
        fetchOUUrl: '@Url.Content("~/Case/GetOrgUnitsByDepartments")'
    };
       
</script>
@*<script  src="~/Content/js/Case/edit.js"></script>*@

@Scripts.Render("~/Content/js/Case/edit")

<div class="jumbotron greybar">
        <div class="container-fluid">
            <ul class="secnav">                               
                <li>                                        
                    <input type="button" value='@Translation.Get("Save and Send", Enums.TranslationSource.TextTranslation)' onclick = "SaveNewCase(); return false;" class = "btn btn-default" /> 
                </li>                
            </ul>
        </div>
    </div>
<div class="container-fluid dh-container">
    <ul class="nav nav-tabs" id="NewCaseTab">
        <li id="NewCaseT" class="active">
            <a href="#fragment-1"> @Translation.Get("New Case", Enums.TranslationSource.TextTranslation)  </a>
        </li>
    </ul>

    <div class="content">
        <div id="fragment-1" class="tab-pane active">
            <div class="container-fluid dh-container">

                @using (Html.BeginForm("NewCase", "case", null, FormMethod.Post, new { id = "newCaseForm" }))
                {
                    @Html.HiddenFor(model => model.NewCase.Id)
                    @Html.HiddenFor(model => model.NewCase.CaseGUID)
                    @Html.HiddenFor(model => model.NewCase.Customer_Id)
                    @Html.HiddenFor(model => model.NewCase.User_Id)
                    @Html.HiddenFor(model => model.NewCase.IpAddress)
                    @Html.HiddenFor(model => model.NewCase.Deleted)
                    @Html.HiddenFor(model => model.NewCase.RegistrationSource)   
                    @Html.HiddenFor(model => model.NewCase.RegUserDomain)
                    @Html.HiddenFor(model => model.NewCase.RegUserId)
                    @Html.HiddenFor(model => model.NewCase.CaseNumber)
                    @Html.HiddenFor(model => model.NewCase.ProductAreaSetDate)
                    @Html.HiddenFor(model => model.NewCase.LockCaseToWorkingGroup_Id)
                    @Html.HiddenFor(model => model.NewCase.FinishingDate)
                    @Html.HiddenFor(model => model.NewCase.ProductAreaQuestionVersion_Id)
                    @Html.HiddenFor(model => model.NewCase.LeadTime)
                    @Html.HiddenFor(model => model.NewCase.CaseCleanUp_Id)
                    @Html.HiddenFor(model => model.NewCase.RelatedCaseNumber)
                    @Html.HiddenFor(model => model.NewCase.ApprovedDate)
                    @Html.HiddenFor(model => model.NewCase.ApprovedBy_User_Id)
                    @Html.HiddenFor(model => model.NewCase.ApprovedBy_User_Id)
                    @Html.HiddenFor(model => model.NewCase.FollowUpDate)
                    @Html.HiddenFor(model => model.NewCase.ExternalTime)
                    @Html.HiddenFor(model => model.NewCase.DefaultOwnerWG_Id)
                    @Html.HiddenFor(model => model.CaseMailSetting.SendMailAboutNewCaseTo)
                    @Html.HiddenFor(model => model.CaseMailSetting.HelpdeskMailFromAdress)
                    @Html.HiddenFor(model => model.CaseMailSetting.AbsoluterUrl)
                    @Html.HiddenFor(model => model.CaseMailSetting.DontConnectUserToWorkingGroup)
                    @Html.HiddenFor(l => Model.NewCase.RegLanguage_Id)     
     
                    @Html.HiddenFor(k => Model.CaseFileKey)

                    @Html.HiddenFor(model => model.DepartmentFilterFormat, new { data_field = "departmentFilterFormat" })
    
                    if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.UserInformation))
                    {
                        <h4>@Translation.Get("User Information", Enums.TranslationSource.TextTranslation)</h4>
                        <div class="row">
                            <div class="col-md-3 dh-col">
                                <div class="container form-horizontal">
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Customer_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                 @Translation.Get(GlobalEnums.TranslationCaseFields.Customer_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                            </label>
                                            <div class="col-md-9">
                                                @Model.NewCase.Customer.Name
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReportedBy.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                                                                   
                                                  @Translation.Get(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                                                                 
                                                  @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.ReportedBy.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                  {
                                                      <span class="mandatorystar">*</span>
                                                  }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextBoxFor(model => model.NewCase.ReportedBy, new { maxlength = "40", autocomplete = "Off" })
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Name.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Persons_Name.ToString()).Select(f => f.Required).FirstOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                                
                                                @Html.TextBoxFor(p => Model.NewCase.PersonsName)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Persons_EMail.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(p => Model.NewCase.PersonsEmail)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Persons_Phone.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                      
                                                @Html.TextBoxFor(p => Model.NewCase.PersonsPhone)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                              
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(c => Model.NewCase.PersonsCellphone)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Region_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                               
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Region_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                <select id="NewCase_Region_Id" name="NewCase.Region_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Regions != null)
                                                    {
                                                        foreach (var e in Model.Regions.Where(e => e.IsActive != 0))
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.NewCase.Region_Id.ToString())> @e.Name </option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Department_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Department_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                                
                                                <select id="NewCase_Department_Id" name="NewCase.Department_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Departments != null)
                                                    {
                                                        foreach (var e in Model.Departments.Where(e => e.IsActive != 0))
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.NewCase.Department_Id.ToString()) >@e.DepartmentName </option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.OU_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.OU_Id.ToString()).Select(f => f.Required).FirstOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                                
                                                <select id="NewCase_Ou_Id" name="NewCase.OU_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.OrganizationUnits != null)
                                                    {
                                                        foreach (var e in Model.OrganizationUnits.Where(e => e.IsActive != 0))
                                                        {
                                                            <option value="@e.Id" @e.Id.IdIsSelected(Model.NewCase.OU_Id.ToString())> @e.Name </option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Place.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Place.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                               
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Place.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextBoxFor(p => Model.NewCase.Place)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.UserCode.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.UserCode.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.UserCode.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                             
                                                @Html.TextBoxFor(u => Model.NewCase.UserCode)
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }                   
                    <!-- User Information Fields -->

                    if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.ComputerInformation))
                    {
                        <h4>@Translation.Get("Computer Information", Enums.TranslationSource.TextTranslation)</h4>
                        <div class="row">
                            <div class="col-md-3 dh-col">
                                <div class="container form-horizontal">
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                              
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.InventoryNumber.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(i => Model.NewCase.InventoryNumber)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(i => Model.NewCase.InventoryType)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                               
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.InventoryLocation.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextBoxFor(i => Model.NewCase.InventoryLocation)
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }                   
                    <!-- Computer Information Fields -->
                    
                    if (Model.CaseFieldGroups.Contains(Enums.CaseFieldGroups.CaseInfo))
                    {
                        <h4>@Translation.Get("Case Information", Enums.TranslationSource.TextTranslation) </h4>
                        <div class="row">
                            <div class="col-md-3 dh-col">
                                <div class="container form-horizontal">                                    
                                    <div class="form-group row">
                                        <label class="col-md-3">                                                
                                            @Translation.Get(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                            @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.CaseType_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                            {
                                                <span class="mandatorystar">*</span>
                                            }
                                        </label>
                                        <div class="col-md-9">                                                
                                            <div id="divCaseType" class="btn-group">
                                                <div class="btn btn-default" id="divBreadcrumbs_CaseType">@Model.CaseTypeParantPath</div>
                                                <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                                                    <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                    @Html.CaseTypeDropdownButtonString(Model.CaseTypes)
                                                </ul>
                                                <input type="hidden" id="NewCase.CaseType_Id" name="NewCase.CaseType_Id" value="@Model.NewCase.CaseType_Id.supressZero()" />

                                            </div>
                                        </div>
                                    </div>
                                    

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                <div id="divProductArea" class="btn-group">
                                                    <div class="btn btn-default" id="divBreadcrumbs_ProductArea">@Model.ProductAreaParantPath</div>
                                                    <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                                                        <span class="caret"></span>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a href="#">@Translation.Get("--", Enums.TranslationSource.TextTranslation)</a></li>
                                                        @Html.ProductAreaDropdownButtonString(Model.ProductAreas)
                                                    </ul>
                                                    @Html.HiddenFor(model => model.NewCase.ProductArea_Id)
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.System_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.System_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.System_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                                
                                                <select id="NewCase_System_Id" name="NewCase.System_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Systems != null)
                                                    {
                                                        foreach (var e in Model.Systems)
                                                        {
                                                            <option value="@e.Id">@e.SystemName</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Urgency_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                <select id="NewCase_Urgency_Id" name="NewCase.Urgency_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Urgencies != null)
                                                    {
                                                        foreach (var e in Model.Urgencies)
                                                        {
                                                            <option value="@e.Id">@e.Name</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Impact_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Impact_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Impact_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                <select id="NewCase_Impact_Id" name="NewCase.Impact_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Impacts != null)
                                                    {
                                                        foreach (var e in Model.Impacts)
                                                        {
                                                            <option value="@e.Id">@e.Name</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }
                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Category_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                               
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Category_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                <select id="NewCase_Category_Id" name="NewCase.Category_Id">
                                                    <option value="">&nbsp;</option>
                                                    @if (Model.Categories != null)
                                                    {
                                                        foreach (var e in Model.Categories.Where(c => c.IsActive == 1))
                                                        {
                                                            <option value="@e.Id">@e.Name</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                               
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Supplier_Id.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>                                        
                                            @if (Model.Suppliers != null)
                                            {
                                                <div class="col-md-9">                                                   
                                                    <select id="NewCase_Supplier_Id" name="NewCase.Supplier_Id">
                                                        <option value="">&nbsp;</option>
                                                        @foreach (var e in Model.Suppliers.Where(e => e.IsActive == 1))
                                                        {
                                                            <option value="@e.Id">@e.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                            }
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextBoxFor(i => Model.NewCase.InvoiceNumber)
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                              
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">
                                                @Html.TextBoxFor(r => Model.NewCase.ReferenceNumber)
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Caption.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                             
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Caption.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextBoxFor(c => Model.NewCase.Caption)
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Description.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Description.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextAreaFor(d => Model.NewCase.Description)
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                               
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Miscellaneous.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                
                                                @Html.TextAreaFor(m => Model.NewCase.Miscellaneous)
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.ContactBeforeAction.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                            </label>
                                            <div class="col-md-9">
                                                <input type="checkbox" name="NewCase.ContactBeforeAction" @(Model.NewCase.ContactBeforeAction == 1 ? "checked=checked" : "") value="1"/>
                                                @Translation.Get("Should the initiator be contacted before action?", Enums.TranslationSource.TextTranslation)
                                                <input type="hidden" name="NewCase.ContactBeforeAction" value="0" />
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.SMS.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.SMS.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                               
                                            </label>
                                            <div class="col-md-9">
                                                <input type="checkbox" name="NewCase.SMS" @(Model.NewCase.SMS == 1 ? "checked=checked" : "") value="1"/>
                                                @Translation.Get("Send SMS when case is closed", Enums.TranslationSource.TextTranslation)
                                                <input type="hidden" name="NewCase.SMS" value="0" />
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Available.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Available.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                                @if (Model.FieldSettings.Where(f => f.Name == GlobalEnums.TranslationCaseFields.Available.ToString()).Select(f => f.Required).SingleOrDefault() == 1)
                                                {
                                                    <span class="mandatorystar">*</span>
                                                }
                                            </label>
                                            <div class="col-md-9">                                                                                                
                                                @Html.TextBoxFor(m => Model.NewCase.Available)
                                                @*@Translation.Get("Initiator is available during the following times", Enums.TranslationSource.TextTranslation)*@                                                                                                                 
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Cost.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Cost.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                              
                                            </label>
                                            <div class="col-md-9">
                                                <table>
                                                    <tr>
                                                        <td>@Translation.Get("Item Cost", Enums.TranslationSource.TextTranslation)<br />
                                                            @Html.TextBoxFor(model => model.NewCase.Cost, new { maxlength = "7", Class = "inputw50" })
                                                        </td>
                                                        <td>@Translation.Get("Additional Cost", Enums.TranslationSource.TextTranslation)<br />
                                                            @Html.TextBoxFor(model => model.NewCase.OtherCost, new { maxlength = "7", Class = "inputw50" })
                                                        </td>
                                                        <td>@Translation.Get("Currency", Enums.TranslationSource.TextTranslation)<br />
                                                            <select id="NewCase_Currency" name="NewCase.Currency" class="inputw100">
                                                                <option value="">&nbsp;</option>
                                                                @if (Model.Currencies != null)
                                                                {
                                                                    foreach (var e in Model.Currencies)
                                                                    {
                                                                        <option value="@e.Code" >@e.Code</option>
                                                                    }
                                                                }
                                                            </select>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    }

                                    @if (Model.FieldSettings.Select(f => f.Name).Contains(GlobalEnums.TranslationCaseFields.Filename.ToString()))
                                    {
                                        <div class="form-group row">
                                            <label class="col-md-3">                                                
                                                @Translation.Get(GlobalEnums.TranslationCaseFields.Filename.ToString(), Enums.TranslationSource.CaseTranslation, SessionFacade.CurrentCustomerID)                                                
                                            </label>
                                            <div class="col-md-4">                                                
                                                <a href="#NewCase_upload_files_popup" role="button" class="btn btn-default" data-toggle="modal">@Translation.Get("Add", Enums.TranslationSource.TextTranslation)</a>                                                
                                                <div id="NewCase_upload_files_popup" role="dialog" class="modal fade" aria-labelledby="myModalLabel" aria-hidden="true">                                                    
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">                                                
                                                            <div class="modal-header">
                                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                                                <h5 class="modal-title">&nbsp;</h5>
                                                            </div>
                                                            <div class="modal-body">
                                                                <div id="NewCasefile_uploader"></div>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button class="btn btn-default" data-dismiss="modal" aria-hidden="true">@Translation.Get("Close", Enums.TranslationSource.TextTranslation)</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <a href="#upload_clipboard_file_popup" role="button" class="btn btn-default" data-src="case">@Translation.Get("Add from clipboard", Enums.TranslationSource.TextTranslation)</a>
                                                <div id="upload_clipboard_file_popup" role="dialog" class="modal fade" aria-labelledby="myModalLabelCase" aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                                                <h3>&nbsp;</h3>
                                                            </div>
                                                            <div class="modal-body" style="max-height: 600px; text-align:center;">
                                                                <form onsubmit="return false;">
                                                                    <div class="form-group">
                                                                        <label>@Translation.Get("File name", Enums.TranslationSource.TextTranslation) </label>
                                                                        <input class="" type="text" id="imgFilename" autocomplete = "Off" />
                                                                        <span id="imageNameRequired" style="color:red"> @Translation.Get("must be specified", Enums.TranslationSource.TextTranslation) </span>
                                                                    </div>
                                                                    <div class="form-group">
                                                                        <label>@(Translation.Get("Preview") + " (" + Translation.Get("Copy image data into clipboard and press Ctrl+V", Enums.TranslationSource.TextTranslation) + ")") </label>
                                                                        <div id="previewPnl"></div>
                                                                    </div>
                                                                </form>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" id="btnSave" class="btn btn-ok btn-default" style="display: none">@Translation.Get("Save", Enums.TranslationSource.TextTranslation)</button>
                                                                <button type="button" id="btnCancel" class="btn btn-cancel btn-default" data-dismiss="modal">@Translation.Get("Cancel", Enums.TranslationSource.TextTranslation)</button>
                                                            </div>
                                                        </div>
                                                    </div>                                                    
                                                </div>

                                                <table id="NewCasefiles_table" class="table table-striped">
                                                    <tbody>
                                                        @if (Model.NewCase.CaseFiles == null)
                                                        {
                                                            <div id="no_uploaded_files_label">
                                                            </div>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group row">
                                        <label class="col-md-3"></label>                                        
                                    </div>                                    
                                </div>
                            </div>
                        </div>
                    }
                    <!-- Case Info Fields -->
 
                }
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">     
    
    var $mainForm = $("#newCaseForm");
    var requiredText = '@Translation.Get("must be specified", Enums.TranslationSource.TextTranslation)';

    function SaveNewCase() {
        if (!isFormValid()) {            
            return;
        }

        $mainForm.attr("action", '@Url.Content("~/Case/NewCase")');
        $mainForm.submit();
    }
     
    function isFormValid() {        
        var validator = $mainForm.validate();
        return validator.form();        
    }

    var validator = $mainForm.validate({
        ignore: "",
        rules: {
                    "NewCase.ReportedBy": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.ReportedBy.ToString())")
                },
                    "NewCase.PersonsName": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Persons_Name.ToString())")
                },
                    "NewCase.PersonsEmail": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString())")
                },
                    "NewCase.PersonsCellphone": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString())")
                },
                    "NewCase.PersonsPhone": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString())")
                },
                    "NewCase.Region_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Region_Id.ToString())")
                },
                    "NewCase.Department_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Department_Id.ToString())")
                },
                    "NewCase.OU_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.OU_Id.ToString())")
                },
                    "NewCase.Place": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Place.ToString())")
                },
                    "NewCase.UserCode": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.UserCode.ToString())")
                },
                    "NewCase.InventoryNumber": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString())")
                },
                    "NewCase.InventoryLocation": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString())")
                },
                    "NewCase.InventoryType": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString())")
                },
                    "NewCase.CaseType_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString())")
                },
                    "NewCase.ProductArea_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString())")
                },
                    "NewCase.System_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.System_Id.ToString())")
                },
                    "NewCase.Urgency_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString())")
                },
                    "NewCase.Impact_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Impact_Id.ToString())")
                },
                    "NewCase.Category_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Category_Id.ToString())")
                },
                    "NewCase.Supplier_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString())")
                },
                    "NewCase.InvoiceNumber": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString())")
                },
                    "NewCase.ReferenceNumber": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString())")
                },
                    "NewCase.Caption": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Caption.ToString())")
                },
                    "NewCase.Description": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Description.ToString())")
                },
                    "NewCase.Miscellaneous": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString())")
                },
                    "NewCase.AgreedDate": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.AgreedDate.ToString())")
                },
                    "NewCase.Available": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Available.ToString())")
                },
                    "NewCase.WorkingGroup_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString())")
                },
                    "NewCase.Performer_User_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString())")
                },
                    "NewCase.CaseResponsible_User_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.CaseResponsibleUser_Id.ToString())")
                },
                    "NewCase.Priority_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Priority_Id.ToString())")
                },
                    "NewCase.Status_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.Status_Id.ToString())")
                },
                    "NewCase.StateSecondary_Id": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString())")
                },
                    "NewCase.PlanDate": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.PlanDate.ToString())")
                },
                    "NewCase.WatchDate": {
                        required: FieldIsRequired("@Model.CaseFieldSettings.CaseFieldSettingExternalRequiredCheck(GlobalEnums.TranslationCaseFields.WatchDate.ToString())")
                },
            },

            messages: {
                "NewCase.ReportedBy": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.ReportedBy.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.PersonsName": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Persons_Name.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.PersonsEmail": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Persons_EMail.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.PersonsCellPhone": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Persons_CellPhone.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.PersonsPhone": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Persons_Phone.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Region_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Region_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Department_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Department_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.OU_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.OU_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Place": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Place.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.UserCode": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.UserCode.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.InventoryNumber": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.InventoryNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.InventoryLocation": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.InventoryLocation.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.InventoryType": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.ComputerType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.ProductArea_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.ProductArea_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.CaseType_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.CaseType_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.System_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.System_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Urgency_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Urgency_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Impact_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Impact_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Category_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Category_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Supplier_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Supplier_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.InvoiceNumber": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.InvoiceNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.ReferenceNumber": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.ReferenceNumber.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Caption": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Caption.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Description": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Description.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Miscellaneous": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Miscellaneous.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.AgreedDate": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.AgreedDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Available": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Available.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.WorkingGroup_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.WorkingGroup_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Performer_User_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Performer_User_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.CaseResponsible_User_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.CaseResponsibleUser_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Priority_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Priority_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.Status_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.Status_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.StateSecondary_Id": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.StateSecondary_Id.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.PlanDate": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.PlanDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
                "NewCase.WatchDate": {
                    required: "@Translation.GetForJS(GlobalEnums.TranslationCaseFields.WatchDate.ToString(), Enums.TranslationSource.CaseTranslation, Model.NewCase.Customer_Id) " + requiredText
                },
            },

            submitHandler: function (form) {
                form.submit();
            }
        });

    function FieldIsRequired(value) {
        var ret = false;
        if (value == '1') {            
            ret = true;
        }
        return ret;
    }
</script>
