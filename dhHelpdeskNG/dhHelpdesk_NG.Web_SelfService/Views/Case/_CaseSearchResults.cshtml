
@using DH.Helpdesk.Common.Enums.Cases;

@model DH.Helpdesk.SelfService.Models.Case.CaseSearchResultModel

@functions
{
    string GetSortIcon(string colName)
    {
        var sortBy = Model.SortBy;
        var sortOrder = Model.SortOrder;

        if (colName.Equals(sortBy, StringComparison.OrdinalIgnoreCase))
        {
            return sortOrder == Enums.SortOrder.Asc ? "fa fa-chevron-up" : "fa fa-chevron-down";
        }
        return "";
    }

    string GetCaseTranslation(string name)
    {
        var customerId = Model.CustomerId;
        return Translation.Get(name, Enums.TranslationSource.CaseTranslation, customerId);
    }
}
@Html.Hidden("SortBy_" + Model.CustomerId, Model.SortBy)
@Html.Hidden("SortOrder_" + Model.CustomerId, (int)Model.SortOrder)
@Html.Hidden("hdnCasesCount_" + Model.CustomerId, Model.Cases.Count)

<!-- SEARCH RESULTS: BEGIN -->
<div class="row" style="">
    <div class="col-md-12 table-responsive">
        <table class="table table-striped table-bordered table-hover linkcolor">
            <thead>
                <tr>
                    <th></th>
                    @if (Model.CaseSettings != null)
                    {
                        foreach (var cs in Model.CaseSettings)
                        {
                            <th onclick="sortCases(@Model.CustomerId, '@cs.Name')" class="thpointer">
                                @GetCaseTranslation(cs.Name)
                                <i class="@GetSortIcon(cs.Name)"></i>
                            </th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.Cases != null)
                {
                    foreach (var caseInfo in Model.Cases)
                    {
                        var dynamicUrl = "";
                        if (Model.DynamicCases != null && Model.DynamicCases.Any())
                        {
                            dynamicUrl = Model.DynamicCases.Where(w => w.CaseId == caseInfo.Id).Select(d => "~/" + d.FormPath).FirstOrDefault();
                        }

                        <tr>
                            <!--fasta kolumner -->
                            <td style="width:40px">
                                <a href="@Url.Action("Index", "case", new { id = caseInfo.Id , area ="" })"> <span class='@(caseInfo.IsClosed? "glyphicon glyphicon-check":"glyphicon glyphicon-file")' title="@caseInfo.CaseIcon.CaseIconTitle()"></span> </a>
                            </td>
                            <!-- valbara kolumner -->
                            @foreach (var c in caseInfo.Columns)
                            {
                                <td>
                                    @if (c.FieldType == FieldTypes.Date)
                                    {
                                        <!-- date -->
                                        if (string.IsNullOrEmpty(dynamicUrl))
                                        {
                                            <a href="@Url.Action("Index", "case", new { id = caseInfo.Id , area ="" })"> @Html.DisplayFor(m => c.DateTimeValue, "Date") </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Content(dynamicUrl.SetUrlParameters(caseInfo.Id))">@Html.DisplayFor(m => c.DateTimeValue, "Date")</a>
                                        }
                                    }
                                    else if (c.FieldType == FieldTypes.Time)
                                    {
                                        <!-- dateTime -->
                                        if (string.IsNullOrEmpty(dynamicUrl))
                                        {
                                            <a href="@Url.Action("Index", "case", new { id = caseInfo.Id, area ="" })">@Html.DisplayFor(m => c.DateTimeValue, "DateAndTime")</a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Content(dynamicUrl.SetUrlParameters(caseInfo.Id))">@Html.DisplayFor(m => c.DateTimeValue, "DateAndTime")</a>
                                        }
                                    }
                                    else
                                    {
                                        if (c.TranslateThis)
                                        {
                                            <!-- string -->
                                            if (string.IsNullOrEmpty(dynamicUrl))
                                            {
                                                <a href="@Url.Action("Index", "case", new { id = caseInfo.Id, area ="" })">@Translation.Get(c.StringValue, Enums.TranslationSource.TextTranslation)</a>
                                            }
                                            else
                                            {
                                                <a href="@Url.Content(dynamicUrl.SetUrlParameters(caseInfo.Id))">@Translation.Get(c.StringValue, Enums.TranslationSource.TextTranslation)</a>
                                            }
                                        }
                                        else
                                        {
                                            if (string.IsNullOrEmpty(dynamicUrl))
                                            {
                                                if (c.Key == "Description")
                                                {
                                                    <a href="@Url.Action("Index", "case", new { id = caseInfo.Id, area ="" })">@Html.Raw(c.StringValue.StripHTML())</a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("Index", "case", new { id = caseInfo.Id, area ="" })">@c.StringValue</a>
                                                }


                                            }
                                            else
                                            {

                                                if (c.Key == "Description")
                                                {
                                                    <a href="@Url.Action("Index", "case", new { id = caseInfo.Id, area ="" })">@Html.Raw(c.StringValue.StripHTML())</a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Content(dynamicUrl.SetUrlParameters(caseInfo.Id))">@c.StringValue</a>
                                                }


                                            }
                                        }
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<!-- SEARCH RESULTS: END -->