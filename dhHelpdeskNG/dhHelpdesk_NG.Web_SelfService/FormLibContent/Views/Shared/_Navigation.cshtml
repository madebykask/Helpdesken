@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;

@{
    var freezeAction = "";
    var freeze = "";

    if(ECT.FormLib.FormLibSessions.User.WorkingGroups.FirstOrDefault(x => x.Id == Model.Contract.WorkingGroupId) == null)
    {
        freezeAction = "disabled";
    }

    if(Model.IsLooked || Model.Contract.StateSecondaryId > 89)
    {
        freezeAction = "disabled";
        freeze = "disabled";
    }
}

@functions{
    
    public bool ShowStatusBar()
    {
        if (!string.IsNullOrEmpty(Model.Contract.StateSecondary) | !string.IsNullOrEmpty(Model.Contract.FirstName) | !string.IsNullOrEmpty(Model.Contract.FirstName) | !string.IsNullOrEmpty(Model.Contract.EmployeeNumber))
        {
            return true;
        }
        else
        {
            return false;
        }
    }

}       

@if(Model.Contract != null && Model.Contract.Id != 0)
{
    <style>
        @*Define top margin depending on if StatusBar is visible or not*@
        .containeralignright { margin-top: 90px;
    </style>
    
    <div class="navbar navbar-inverse navbar-fixed-top">
          @*Add by Tan /Case: 51017*@
        <div class="navbarbgcolorblue">
            <ul class="nav">
                @if (Model.Form != null)
                {<li class="pull-left">@Model.Translate(Model.Form.FormName)</li>}
                <li class="pull-right">@ECT.FormLib.FormLibSessions.User.FullName</li>
                <li style="float:right;"><i class="icon icon-user"></i>&nbsp;</li>
            </ul>
    </div>
        <div class="clearfix"></div>

    @*don't show statusbar if we dont have any values*@
    @if (ShowStatusBar())
    {
        <div class="statusbar">
            <ul class="nav nav-pills" role="tablist">
                <li role="presentation">@if (!string.IsNullOrEmpty(Model.Contract.StateSecondary))
                                        {
                                            <text><strong>@Model.Translate("Status")</strong>: </text>@Model.Translate(Model.Contract.StateSecondary)
                                        }</li>
                
             
                @if (Model.Contract != null)
                {
                    if (!string.IsNullOrEmpty(Model.Contract.FirstName) | !string.IsNullOrEmpty(Model.Contract.FirstName))
                    {
                    <li class="employeename pull-right" role="presentation"><strong>@Model.Translate("Co-Worker name"):</strong> @Model.Contract.FirstName @Model.Contract.Surname</li>
                    }

                    if (!string.IsNullOrEmpty(Model.Contract.EmployeeNumber))
                    {
                    <li class="employeenumber pull-right" role="presentation"><strong>@Model.Translate("Co-Worker ID"):</strong> @Model.Contract.EmployeeNumber

                        @if (!string.IsNullOrEmpty(Model.Contract.FirstName) | !string.IsNullOrEmpty(Model.Contract.FirstName))
                        {
                            <text>&nbsp;|&nbsp;</text>
                        }

                    </li>
                    }
                }

            </ul>

        </div>
        <div class="clearfix"></div>
    }
          
@*  End Add by Tan /Case: 51017*@

        <div class="navbar-inner navbarbgcolor">
            <div class="nav-collapse collapse">
                <ul class="nav" id="navigation">
                    <li>
                        <button type="submit" class="btn btnmarginleft" @freeze>
                            @Model.Translate("Save")
                        </button>
                    </li>
                    <li style="width: 400px;">
                        <div class="input-append input-append-top margintopleft">
                            <select name="actionState" id="actionState" class="ieselect" @freezeAction>
                                <option value="">-- @Model.Translate("Select action") --</option>
                                @foreach(var pair in Model.GetStatusActions())
                                {
                                    <option @((pair.Key == Model.ActiveStatus ? "selected" : "")) value="@pair.Key">@Model.Translate(pair.Value)</option>
                                }
                            </select>
                            <button class="btn" name="actionStateChange" id="actionStateChange" type="button" @freezeAction>@Model.Translate("Go") <i class="icon-chevron-right"></i></button>
                        </div>
                    </li>
                   @* <li>
                        <div class="margintopleft" style="padding: 5px;">
                            @Model.Translate(Model.Contract.StateSecondary)
                        </div>
                    </li>*@
                </ul>
            </div>
        </div>
    </div>
}
else
{
    
    <style>
       @*Define top margin depending on if StatusBar is visible or not*@
        .containeralignright { margin-top: 60px;
    </style>
    <div class="navbar navbar-inverse navbar-fixed-top">
       <div class="navbarbgcolorblue">
            <ul class="nav">
                @if (Model.Form != null)
                {<li class="pull-left">@Model.Translate(Model.Form.FormName)</li>}
                <li class="pull-right">@ECT.FormLib.FormLibSessions.User.FullName</li>
                <li style="float:right;"><i class="icon icon-user"></i>&nbsp;</li>
            </ul>
    </div>
        <div class="clearfix"></div>
    <div class="navbar-inner navbarbgcolor">
            <div class="nav-collapse collapse">
                <ul class="nav" id="navigation">
                    <li>
                        <button type="submit" class="btn btnmarginleft">
                            <i class="icon-ok"></i>&nbsp;@Model.Translate("Initiate service request")
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </div>
}
