@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using System.Globalization;
@using ECT.Model.Entities;
@{
    Layout = null;
    Model.Language = "en";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <div>
        <table style="@IrelandPdfPage.StyleValue() width: 100%;" border="0">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>
        <p style="@IrelandPdfPage.StyleValue()">
            <strong>Private & Confidential</strong><br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.FirstName, true) @Model.GetDocumentAnswer(FormLibConstants.FormField.LastName, true)<br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine1, true)
            @if (!string.IsNullOrEmpty(Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine2)))
            {
                <br />
                @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentAddressLine2)
            }
            <br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentCity, true)
            <br />
            @Model.GetDocumentAnswer(FormLibConstants.FormField.PermanentPostalCode, true)
            <br />
            <br />
            <br />
            <br />
            <br />
            Dear @Model.GetDocumentAnswer(FormLibConstants.FormField.FirstName, true),
            <br />
            <br />
            <br />
            I am very pleased to be able to confirm to you our offer of the permanent position of @Model.GetDocumentAnswer(FormLibConstants.FormField.JobTitle, true) in the 
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true) != "")
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true) </text>
            }
            else
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.Department, true) </text>
            }
            Department at @Model.GetDocumentAnswer(FormLibConstants.FormField.Company, true), reporting to the 
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager).ToLower() == "Shopkeeper".ToLower())
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager, true) 
                @if (Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true) != "")
                {
                    <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true)</text>
                }
                else
                {
                    <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.Department, true)</text>
                }.</text>
            }
            else
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.ReportsToLineManager, true).</text>
            }
            <br />
            <br />
            The principal Terms and Conditions of your employment will be as follows:
            <br />
            <br />
            1.	Your first day of permanent employment with IKEA Dublin will be on @Model.GetDocumentAnswer(FormLibConstants.FormField.ChangeValidFrom, true).  Your previous employment with IKEA Dublin counts as part of your continuous service with IKEA which began on @Model.GetDocumentAnswer(FormLibConstants.FormField.PreviousContractStartDate, true).
            <br />
            <br />
            2.	The 
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true) != "")
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.NewDepartment, true) </text>
            }
            else
            {
                <text> @Model.GetDocumentAnswer(FormLibConstants.FormField.Department, true) </text>
            }
            is your primary area of work.  You will on occasions be expected to work in other areas within the Store/Unit to support the business need.
            <br />
            <br />
            3.	Your hours of work will be @Model.GetDocumentAnswer(FormLibConstants.FormField.ContractedHours, true) hours per week over @Model.GetDocumentAnswer(FormLibConstants.FormField.DaysPerWeek, true) days, Sunday – Saturday. 
            <br />
            <br />
            4.	
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.PayrollCategory, true) == "Hourly")
            {
                <text>	Your starting rate of pay will be &euro; @Model.GetDocumentAnswer(FormLibConstants.FormField.BasicPayAmount, true) calculated on pro rata basis payable monthly in arrears on the last Friday of each month by direct transfer into your Bank or Building Society account.  Next review date will be @Model.GetDocumentAnswer(FormLibConstants.FormField.DateOfNextSalaryReview, true).</text>
            }
            else
            {
                <text>	Your starting salary will be &euro; @Model.GetDocumentAnswer(FormLibConstants.FormField.BasicPayAmount, true) payable monthly in arrears on the last Friday of each month by direct transfer into your Bank or Building Society account.  Next review date will be @Model.GetDocumentAnswer(FormLibConstants.FormField.DateOfNextSalaryReview, true).</text>
            }
            <br />
            <br />
            5.	Your annual holiday entitlement (inclusive of 9 days annual public holidays) per holiday year is @Model.GetDocumentAnswer(FormLibConstants.FormField.HolidayFull, true) hours.  Holiday entitlement runs from 1st September – 31st August and is calculated on a pro rata basis.  As a result of the above change, you will now incur 
            @if (Model.GetDocumentAnswer(FormLibConstants.FormField.AdditionDeduction, true) == "addition")
            {
                <text> an additional </text>
            }
            else
            {
                <text> a deduction of </text>
            }
            @Model.GetDocumentAnswer(FormLibConstants.FormField.HolidayAdjustment, true) hours for the current holiday year.
            <br />
            <br />
            6.	You must save holiday hours for days of store closure when you would normally be scheduled to work. In @Model.GetDocumentAnswer(FormLibConstants.FormField.HolidayYear, true), the store will be closed on Easter Sunday and Christmas Day.  
            <br />
            <br />
            7.	Untaken basic holiday entitlement can only be carried forward with prior permission from the Store Manager. See the Co-worker handbook for details of when holiday can be taken. 
            <br />
            <br />
            8.	Beyond the probationary period and up to four years service you will give/be given four weeks notice in writing. After 4 years service the 4 week notice from IKEA will increase by one week per year of service to a maximum of 12 weeks after 12 years service.  IKEA reserves the right to terminate your employment, without notice, in cases of gross misconduct. IKEA reserves the right to make a payment in lieu of notice.
            <br />
            <br />
            9.	IKEA reserves the right to vary terms and conditions of employment subject to consultation and reasonable notice. 
            <br />
            <br />
            <br />
        </p>

        <endpage />
    </div>
</body>
</html>
