@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;
@using ECT.FormLib.Pdfs;
@using System.Globalization;
@using System.Web;
@using ECT.Model.Entities;

@{
    Layout = null;
    Model.Language = "en";

    //set fields that are mandatory in the contract here. This can be done in a better way... /TA
    Model.SetDocumentMandatoryField("ServiceArea");
    Model.SetDocumentMandatoryField("ContractStartDate");

    Model.SetDocumentMandatoryField("InductionStartTime");
    Model.SetDocumentMandatoryField("LengthOfInductionInDays");
    Model.SetDocumentMandatoryField("InductionEndTime");

    Model.SetDocumentMandatoryField("DateOfNextSalaryReview");
    
}

@functions
{
    /// <summary>Get Allowances text depending on Allowances type and Allowance Amount/Units.
    /// </summary> 
    /// //To do: Do this in a better way, get data from xml/db? /TA
    string GetAllowancesText(string allowancesType, string allowancesAmountUnits, FormModel model)
    {

        //if (model.GetDocumentAnswer(allowancesType).ToLower() == "Fork Lift Truck Allowance".ToLower())
        //{
        //    return "In addition you will receive a fork lift truck skills allowance of &euro; " + model.GetDocumentAnswer(allowancesAmountUnits) + " per hour (subject to having a valid fork lift truck licence and using this skill).";
        //}

        if (model.GetDocumentAnswer(allowancesType).ToLower() == "Night Shift".ToLower())
        {
            return "In addition you will receive a night allowance of &euro; " + model.GetDocumentAnswer(allowancesAmountUnits, true) + " per hour for hours worked between 24.00 and 07.00 (subject to working a minimum of three hours during this period)";
        }

        //if (model.GetDocumentAnswer(allowancesType).ToLower() == "Power Stacker".ToLower())
        //{
        //    return "In addition you will receive a Power Stacker skills allowance of &euro; " + model.GetDocumentAnswer(allowancesAmountUnits) + " per hour (subject to having valid Power-Stacker SPE160L and Pedestrian Stacker SPE125 licences and using this skill)";
        //}


        return "";
    }
}
<!DOCTYPE html>
<html>
<body>
    <div>
        @*<table style="@IrelandPdfPage.StyleValue() width: 100%;" border="0">
            <tr style="text-align: right;">
                <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:d MMMMMM yyyy}", DateTime.Now)</td>
            </tr>
        </table>*@
        <p style="@IrelandPdfPage.StyleValue()">
           @* @Html.Partial("_HeaderAddress", Model)*@
            Dear @Model.GetDocumentAnswer("FirstName", true),<br /><br />

            I am very pleased to be able to confirm to you our offer of the position of @Model.GetDocumentAnswer("JobTitle", true) in our @IrelandPdfPage.GetServiceAreaText("ServiceArea", Model) at IKEA @CustomPdfPage.IsEmpty(Model.Department.Unit, "Unit") reporting to the 
        
        @if (Model.GetDocumentAnswer("ManagersJobTitle").ToLower() == "Shopkeeper".ToLower())
        {
            <text> @Model.GetDocumentAnswer("ManagersJobTitle", true) @Model.GetDocumentAnswer("Department", true)</text><text>.</text>
        }
        else
        {
            <text> @Model.GetDocumentAnswer("ManagersJobTitle", true)</text><text>.</text>
        }
            <br />
            <br />
            The principal Terms and Conditions of your employment will be as follows:
            <br />
            <br />
            Your first day of employment with IKEA Ireland Ltd. will be on the @CustomPdfPage.GetDateInWords("ContractStartDate", Model). Please report to your place of work: IKEA Dublin, St. Margaret’s Road, Ballymun Dublin 11, at @CustomPdfPage.GetAmPm("InductionStartTime", Model)  for @CustomPdfPage.GetLengthOfInductionInDaysText("LengthOfInductionInDays", Model) introduction finishing at @CustomPdfPage.GetAmPm("InductionEndTime", Model).
            <br />
            <br />
        </p>
        @{
            var list = new List<PdfListItem>();
            var pdfList = new List<PdfListItem>();

            var brText = "<br /><br />";

            if (!string.IsNullOrEmpty(Model.GetDocumentAnswer("PreviousBusinessUnit")))
            {

                //set mandatory
                Model.SetDocumentMandatoryField("PreviousContractStartDate");

                ////1
                string text1 = "Your previous employment with " + Model.GetDocumentAnswer("PreviousBusinessUnit") + " counts as part of your continuous service with IKEA which began on " + CustomPdfPage.GetDateInWords("PreviousContractStartDate", Model) + ".";
                list.Add(new PdfListItem { Text = text1 });
            }


            //2
            string text2 = "The " + IrelandPdfPage.GetServiceAreaText("ServiceArea", Model) + " is your primary area of work. You will on occasions be expected to work in other areas within the Store/Unit to support the business need.";
            list.Add(new PdfListItem { Text = text2 });

            //3
            string text3 = "Your hours of work will be " + Model.GetDocumentAnswer("ContractedHours", true) + " hours per week over " + Model.GetDocumentAnswer("DaysPerWeek", true) + ", Sunday – Saturday and will involve evening and weekend working.";
            list.Add(new PdfListItem { Text = text3 });

            //4
            string text4 = "You will receive breaks as detailed in the co-worker handbook.";
            list.Add(new PdfListItem { Text = text4 });

            //5
            string text5 = "Your starting salary will be &euro; " + Model.GetDocumentAnswer("BasicPayAmount", true) + " " + IrelandPdfPage.GetPayInfoText(Model) + " Next review date will be " + CustomPdfPage.GetDateInWords("DateOfNextSalaryReview", Model) + ".";


            //ALLOWANCES //
            string text5a = "";

            string allowancesText1 = GetAllowancesText("AllowancesType", "AllowancesAmountUnits", Model);
            if (!string.IsNullOrEmpty(allowancesText1))
            {

                //set mandatory for contract
                Model.SetDocumentMandatoryField("AllowancesAmountUnits");

                //1
                text5 += "<br /><br />";
                text5 += allowancesText1;
                text5 += "<br />";
            }

            for (int i = 2; i <= int.Parse(Model.GetAnswer(FormLibConstants.FormField.Allowances)); i++)
            {

                string allowancesText2 = GetAllowancesText("AllowancesType" + i.ToString(), "AllowancesAmountUnits" + i.ToString(), Model);
                if (!string.IsNullOrEmpty(allowancesText2))
                {

                    if (!text5.EndsWith("<br />"))
                    {
                        text5 += "<br />";
                    }

                    //set mandatory for contract
                    Model.SetDocumentMandatoryField("AllowancesAmountUnits" + i.ToString());

                    //2
                    text5 += "<br />";
                    text5 += allowancesText2;
                    text5 += "<br />";
                }
            }
          
            list.Add(new PdfListItem { Text = text5 });

            string text6 = "You will be entitled to Private Medical Health (VHI) for yourself paid for by IKEA. You will also receive Dental Insurance cover paid for by IKEA for yourself.";
            list.Add(new PdfListItem { Text = text6 });

            //7
            string text7 = "You have the benefit of up to 13 weeks paid sick leave in any calendar year from your first day at IKEA. Sick pay is a discretionary benefit.";
            list.Add(new PdfListItem { Text = text7 });

            //7
            string text8 = "Your basic annual holiday entitlement per calendar year is " + Model.GetDocumentAnswer("HolidayFull", true) + " (5 WEEKS plus 9 bank holidays days). Holiday entitlement runs from 1st September – 31st August and is calculated on a pro rata basis. Your holiday entitlement for " + Model.GetDocumentAnswer("HolidayYear", true) + " is " + Model.GetDocumentAnswer("HolidayCurrent", true) + " hours. Payment for holidays will be at your normal rate of pay.";
            text8 += "<br /><br />";
            text8 += "You must save holiday hours for days of store closure when you would normally be scheduled to work. In " + Model.GetDocumentAnswer("HolidayYear", true) + ", the Store will be closed on Christmas Day.";

            text8 += "<br /><br />";
            text8 += "Untaken basic holiday entitlement can only be carried forward with prior permission from " + CustomPdfPage.IsEmpty(Model.Department.StoreManager, "Store Manager") + ", Store Manager, up to a maximum of three days. You will not be paid in lieu for holidays not taken. See the Co-worker handbook for details of when holiday can be taken.";

            text8 += "<br /><br />";
            text8 += "Upon termination of your employment, you will be normally be entitled to annual holiday with pay, or pay in lieu thereof, proportional to your length of service. If you have taken more holiday entitlement than you have accrued during the holiday year, the balance will be deducted from any outstanding pay. Payment for holidays in these circumstances will be made on a pro rata basis to your service in the current holiday year and compensatory days, as specified, are excluded from this calculation.";

            text8 += "<br /><br />";
            text8 += "Where termination of your employment is due to gross misconduct or where the full contractual notice is not served and worked, unused holiday pay will not be paid, apart from any payment required to meet the statutory minimum holiday obligations.";
            list.Add(new PdfListItem { Text = text8 });

            //9
            string text9 = "Your employment will be probationary for the first six months. During probation you will be given advice and guidance to enable you meet your job expectations and job performance will be assessed to determine suitably for employment. The probationary period may be extended at the company’s discretion, but will not, in any case, exceed 9 months. Termination of this agreement within the probationary period shall be at the discretion of the Company and in the event of such a termination you will receive one week’s notice, likewise, where you intend to resign from your employment, during your probationary period you will be required to give the company one week’s notice in writing. During the probationary period the provisions of the company disciplinary procedure will not apply. Fair procedures will be adopted at all times.";

            list.Add(new PdfListItem { Text = text9 });

            //10
            string text10 = "It is a condition of your employment that you advise us of a relationship that exists, or begins, with a fellow Co-worker in your store/unit. This is in order that you will be excluded from any investigation/disciplinary/grievance/appeal or successor meetings relating to that individual in order to avoid conflict of interest and ensure that our standard of impartiality and fairness is maintained.";
            list.Add(new PdfListItem { Text = text10 });


            //11
            string text11 = "Please complete and return the enclosed Medical Questionnaire in the envelope provided. Only our Occupational Health Advisor will read it. Please note that this offer of employment is subject to a satisfactory result.";
            list.Add(new PdfListItem { Text = text11 });


            //12
            string text12 = "In order to comply with the Employment Permits Acts 2003 and 2006, this offer is made on the condition that you are legally entitled to work in Ireland and that you provide proof of this on or prior to your first day at work. Please bring one of the original documents listed below:<br/><br/>";

            list.Add(new PdfListItem { Text = text12 });

            pdfList = new List<PdfListItem>();

            pdfList.Add(new PdfListItem { Text = "Your passport showing Irish citizenship or your birth certificate showing your birth in Ireland prior to 1 January 2005" });
            pdfList.Add(new PdfListItem { Text = "A passport or national identity card showing that you are a national of a European Economic Area country or Switzerland (except for Bulgarian and Romanian nationals)" });
            pdfList.Add(new PdfListItem { Text = "Your Bulgarian or Romanian passport and proof that you have been living and working legally in Ireland for over 12 months and are eligible to work without need for a work permit" });
            pdfList.Add(new PdfListItem { Text = "Your passport and Immigration Certificate of Registration (GNIB Card) or other valid official documentation showing that you can live and work in Ireland as the partner of an EU national" });
            pdfList.Add(new PdfListItem { Text = "Your passport and Immigration Certificate of Registration (GNIB Card) or other valid official documentation showing that you can live and work in Ireland as the spouse of an Irish national" });
            pdfList.Add(new PdfListItem { Text = "A visa in your passport or other formal document showing that you have been granted a working holiday visa" });
            pdfList.Add(new PdfListItem { Text = "A visa stamp in your passport and on your Immigration Certificate of Registration (GNIB Card) indicating that you are a student permitted to undertake casual work" });
            pdfList.Add(new PdfListItem { Text = "A Geneva Convention Travel document or other document stating that you are a recognised refugee in Ireland" });
            pdfList.Add(new PdfListItem { Text = "Your employment permit and Immigration Certificate of Registration (GNIB Card). This includes work permits, Green Cards and Spousal work permits" });
            pdfList.Add(new PdfListItem { Text = "A passport or other travel document and your Immigration Certificate of Registration (GNIB Card) showing that you are living in Ireland under the Irish born child scheme, have been grated humanitarian leave to remain or any other relevant permission type." });
            list[list.Count - 1].SubList = pdfList;

            //13
            string text13 = "If you are unable to provide the original documentation listed above you will be required to bring available documentation clearly showing your entitlement to live and work in Ireland. If you have any questions relating to the above, please contact the Human Resources department on " + CustomPdfPage.IsEmpty(Model.Department.TelNbr, "TelNbr") + " prior to your first day of work.";
            list.Add(new PdfListItem { Text = text13 });



            //14
            string text14 = "On your first day please bring along with you the following:";
            list.Add(new PdfListItem { Text = text14 });

            pdfList = new List<PdfListItem>();

            pdfList.Add(new PdfListItem { Text = "Bank/Building Society details" });
            pdfList.Add(new PdfListItem { Text = "Your P45 if you have one" });
            pdfList.Add(new PdfListItem { Text = "Official proof of your PPS number, for example your PPS card or an original letter from a government agency identifying your PPS number." });
            list[list.Count - 1].SubList = pdfList;


            //15
            string text15 = "In the event of any change to the main terms and conditions of your employment, you will be individually notified in writing of the particulars of the change within one month of the change. This provision concerns notification only and does not mean that the employer has a contractual right to vary the terms of your contract without your agreement.";
            list.Add(new PdfListItem { Text = text15 });


            //16
            string text16 = "By signing these terms and conditions, you agree to IKEA holding and retaining personal and sensitive information about you. All information will be managed as stipulated in the Data Protection Acts 1998-2003.";
            list.Add(new PdfListItem { Text = text16 });        
      
              
        }

        @if (list.Count > 1)
        {
            <table border="0">
                @for (int i = 0; i < list.Count; i++)
                { 
                
                     <tr>
                        <td width="5%" valign="top" CELLPADDING=4 style="@IrelandPdfPage.StyleValue()">@(i + 1). </td>                 
                        <td width="95%" valign="top" CELLPADDING=4>
                            <p style="@IrelandPdfPage.StyleValue()">@Html.Raw(list[i].Text)</p>   

                    @if (list[i].SubList != null && list[i].SubList.Count > 0)
                    {
                        
                        <table border="0">
                        @foreach (var item in list[i].SubList)
                        {   
                            <tr>
                                <td width="3%" valign="top" CELLPADDING=0> &bull;</td> 
                                <td width="97%" valign="top" CELLPADDING=0><p style="@IrelandPdfPage.StyleValue()">@Html.Raw(item.Text)</p></td> 
                            </tr>                  
                        }
                        </table>
                    }

                            </td>
                     </tr> 
                    if (list[i].SubList2 != null && list[i].SubList2.Count > 0)
                    {
                        foreach (var item in list[i].SubList2)
                        {              
                            <tr>
                                <td width="95%" valign="top" CELLPADDING=4 colspan="2">
                                  <p style="@IrelandPdfPage.StyleValue()">@Html.Raw(item.Text)</p> 
                                </td>
                            </tr>                     
                        }
                    }

                }
            </table>
        }
        else
        {
            for (int i = 0; i == list.Count - 1; i++)
            {
            <p style="@IrelandPdfPage.StyleValue()">@Html.Raw(list[i])</p>
            }
        }

        <br />
        <p style="@IrelandPdfPage.StyleValue()">
           This letter, together with the Terms and Conditions Appendix and Section 1 of the Co-worker handbook forms the basis of your contract.          
        </p>
        <endpage />
    </div>
</body>
</html>
