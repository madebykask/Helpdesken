@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;


@functions{
    public string GetContract()
    {

        if (string.IsNullOrEmpty(Model.GetAnswer("Payrollcategory")))
        {
            return "";
        }

        //This template is applicable only if <Payrollcategory> = “Flex - Hourly”
        if (Model.GetAnswer("Payrollcategory").ToLower() == "Flex - Hourly".ToLower())
        {
            return "ContractFlexHourly";
        }

        //This template is applicable only if <Payrollcategory> = “Flex - Monthly”
        if (Model.GetAnswer("Payrollcategory").ToLower() == "Flex - Monthly".ToLower())
        {
            return "ContractFlexMonthly";
        }

        //This template is applicable only if <Payrollcategory> = “Exempted”
        if (Model.GetAnswer("Payrollcategory").ToLower() == "Exempted".ToLower())
        {
            return "ContractMonthlyExempted";
        }

        //This template is applicable only if <Payrollcategory> = “Salaried - Monthly or Salaried - Hourly”
        if (Model.GetAnswer("Payrollcategory").ToLower() == "Salaried - Monthly".ToLower() || Model.GetAnswer("Payrollcategory").ToLower() == "Salaried - Hourly".ToLower())
        {
            return "ContractSalaried";
        }

        return "";
            
    }

    public string PrintText()
    {
        return Model.Translate("Print");
    }
}

<div class="tab-pane" id="documents">
    <div class="span12">
        <table class="table-striped">
            <thead>
                <tr>
                    <th>@Model.Translate("Document")
                    </th>
                    <th>@Model.Translate("Type")
                    </th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
            @if (!string.IsNullOrEmpty(GetContract()))
            {
                    <tr>
                        <td>@Model.Translate("Contract")</td>
                        <td>pdf</td>
                        <td>&nbsp;</td>
                        <td>
                            <a href="@Url.Action("print", "hiring", new
                {
                    id = GetContract(),
                    caseId = Model.Contract.Id,
                    path = Path.Combine(Path.GetDirectoryName(Model.FormXmlPath), Path.GetFileNameWithoutExtension(Model.FormXmlPath)),
                    userId = FormLibSessions.User.UserId
                })" class="btn pull-right print"><i class="icon-file"></i>&nbsp;@PrintText()</a>
                        </td>
                    </tr>

                 }
            else
            {
                <tr><td colspan="4"><div class="alert alert-info"><strong><i class="icon-info-sign"></i>&nbsp;@Model.Translate("A document can not be created based on current selections")</strong></div></td></tr>
            }

           @* @Html.Partial("_StaticDocuments", Model)*@
            </tbody>
        </table>
    </div>
</div>





