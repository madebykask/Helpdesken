@model ECT.FormLib.Models.FormModel
@using ECT.FormLib;
@using ECT.FormLib.Models;


@functions{
    public string GetContract()
    {

        if (string.IsNullOrEmpty(Model.GetAnswer("ContractType")))
        {
            return "";
        }

        //This template is applicable only if Business unit = "Distribution Centre Doncaster"
        if (Model.GetDocumentAnswer("BusinessUnit").ToLower() == "Distribution Centre Doncaster".ToLower() && (Model.GetAnswer("NewToIKEA").ToLower() == "New Hire".ToLower() | Model.GetAnswer("NewToIKEA").ToLower() == "Re-Hire".ToLower()))
         {
             return "Doncaster";
         }

        //This template is applicable only if <Contract Type/OA14> = “Zero Hour”
        if (Model.GetAnswer("ContractType").ToLower() == "Zero Hours".ToLower() && Model.GetDocumentAnswer("BusinessUnit").ToLower() != "Distribution Centre Doncaster".ToLower())
        {
            return "ZeroHour";
        }

        //<Business Unit/OA3> different than U.K & IE Contact Centre or Distribution Services Ltd or Distribution Service Office
        if (Model.GetDocumentAnswer("BusinessUnit").ToLower() != "Peterborough Contact Centre".ToLower() && Model.GetDocumentAnswer("BusinessUnit").ToLower() != "Distribution Centre Peterborough 012".ToLower() && Model.GetDocumentAnswer("BusinessUnit").ToLower() != "Distribution Service Office".ToLower() && Model.GetDocumentAnswer("BusinessUnit").ToLower() != "Distribution Centre Doncaster".ToLower())
        {

            //IF <Employment Category/OA12> = Temporary or Fixed Term AND <Business Unit/OA3> different than U.K & IE Contact Centre or Distribution Services Ltd or Distribution Service Office   
            if (Model.GetAnswer("ContractType").ToLower() == "Temporary".ToLower() | Model.GetAnswer("ContractType").ToLower() == "Fixed Term".ToLower())
            {
                return "TemporaryFixedTerm";
            }

            //IF <Employment Category/OA12> = Permanent AND <Business Unit/OA3> different than U.K & IE Contact Centre or Distribution Services Ltd or Distribution Service Office
            if (Model.GetAnswer("ContractType").ToLower() == "Permanent".ToLower())
            {
                return "Permanent";
            }

        }
        //This template should be applicable for Permanent type and unit Contact Centre only which means both conditions must be met:
        //IF <Employment Category/OA12> = Permanent AND <Business Unit/OA3> = U.K & IE Contact Centre
        else if (Model.GetAnswer("ContractType").ToLower() == "Permanent".ToLower() && Model.GetDocumentAnswer("BusinessUnit").ToLower() == "Peterborough Contact Centre".ToLower())
        {
            return "ContactCentre";
        }

        return "";

    }

    public string PrintText()
    {
        return Model.Translate("Print");
    }
}

<div class="tab-pane" id="documents">
    <div class="span12">
        <table class="table-striped">
            <thead>
                <tr>
                    <th>@Model.Translate("Document")
                    </th>
                    <th>@Model.Translate("Type")
                    </th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
            @if (!string.IsNullOrEmpty(GetContract()))
            {
                    <tr>
                        <td>@Model.Translate("Contract")</td>
                        <td>pdf</td>
                        <td>&nbsp;</td>
                        <td>
                            <a href="@Url.Action("print", "hiring", new
                {
                    id = GetContract(),
                    caseId = Model.Contract.Id,
                    path = Path.Combine(Path.GetDirectoryName(Model.FormXmlPath), Path.GetFileNameWithoutExtension(Model.FormXmlPath)),
                    userId = FormLibSessions.User.UserId
                })" class="btn pull-right print"><i class="icon-file"></i>&nbsp;@PrintText()</a>
                        </td>
                    </tr>

                 }
            else
            {
                <tr><td colspan="4"><div class="alert alert-info"><strong><i class="icon-info-sign"></i>&nbsp;@Model.Translate("A document can not be created based on current selections")</strong></div></td></tr>
            }

            @Html.Partial("_StaticDocuments", Model)
            </tbody>
        </table>
    </div>
</div>





