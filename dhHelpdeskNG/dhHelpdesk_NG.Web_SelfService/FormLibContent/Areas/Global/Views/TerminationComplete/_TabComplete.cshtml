@model DH.Helpdesk.EForm.FormLib.Models.FormModel
@using DH.Helpdesk.EForm.FormLib;
@using DH.Helpdesk.EForm.FormLib.Models;

<div class="tab-pane" id="Complete">
    <div class="span6">
        <table class="table">       
            <tbody>
                 <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("Termination Details")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("CompleteTerminationType")</td>
                <td>
                    @Model.Element("CompleteTerminationType")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("TerminationReason")</td>
                <td>
                    @Model.Element("TerminationReason")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("TerminationPaymentMethod")</td>
                <td>
                    @Model.Element("TerminationPaymentMethod")</td>
            </tr>
            <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("Termination Payments")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("PaymentType")</td>
                <td>
                    @Model.Element("PaymentType")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("Amount")</td>
                <td>
                    @Model.Element("Amount")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("Net_Gross")</td>
                <td>
                    @Model.Element("Net_Gross")
                </td>
            </tr>
            <tr>
                <td class="tdstrong">@Model.Label("PaymentDate")</td>
                <td>
                    @Model.Element("PaymentDate")</td>
            </tr>

             @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
             {
                    <tr class="terminationpayments@(i.ToString())" id="allowance@(i.ToString())">
                        <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Termination Payments") @(i.ToString())</h4>
                        </td>
                    </tr>
                    <tr class="terminationpayments@(i.ToString())">
                        <td class="tdstrong">@Model.Label("PaymentType" + i.ToString())</td>
                        <td>
                            @Model.Element("PaymentType" + i.ToString())</td>
                    </tr>
                    <tr class="terminationpayments@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Amount" + i.ToString())</td>
                        <td>
                            @Model.Element("Amount" + i.ToString())</td>
                    </tr>
                    <tr class="terminationpayments@(i.ToString())">
                        <td class="tdstrong">@Model.Label("Net_Gross" + i.ToString())</td>
                        <td>
                            @Model.Element("Net_Gross" + i.ToString())</td>
                    </tr>
                    <tr class="terminationpayments@(i.ToString())">
                        <td class="tdstrong">@Model.Label("PaymentDate" + i.ToString())</td>
                        <td>
                            @Model.Element("PaymentDate" + i.ToString())</td>
                    </tr>                   
                }
                <tr id="addTerminationPaymentsTrr">
                    <td colspan="2">
                        @Model.Element("TerminationPayments")
                        <a id="addTerminationPayment" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another payment")</a></td>
                </tr>                                                      

             <tr>
                <td class="tdstrong" colspan="2">
                    <h4>@Model.Translate("Deductions from Termination Payment")</h4>
                </td>                
            </tr>  
            <tr>
                <td class="tdstrong">@Model.Label("DeductionType")</td>
                <td>
                    @Model.Element("DeductionType")</td>
            </tr>           
            <tr>
                <td class="tdstrong">@Model.Label("DeductionAmount")</td>
                <td>
                    @Model.Element("DeductionAmount")</td>
            </tr>
@*            <tr>
                <td class="tdstrong">@Model.Label("DeductionNet_Gross")</td>
                <td>
                    @Model.Element("DeductionNet_Gross")</td>
            </tr>         *@
        @*     <tr>
                <td class="tdstrong">@Model.Label("DeductionDate")</td>
                <td>
                    @Model.Element("DeductionDate")</td>
            </tr>   *@

             @for (int i = 2; i <= FormLibConstants.FormField.MultipleEntrySectionsNr; i++)
             {
                    <tr class="deduction@(i.ToString())" id="deduction@(i.ToString())">
                         <td class="tdstrong" colspan="2">
                            <h4>@Model.Translate("Deductions from Termination Payment") @(i.ToString())</h4>
                         </td> 
                    </tr>
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionType" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionType" + i.ToString())</td>
                    </tr>
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionAmount" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionAmount" + i.ToString())</td>
                    </tr>@*
                    <tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionNet_Gross" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionNet_Gross" + i.ToString())</td>
                    </tr>*@
                    @*<tr class="deduction@(i.ToString())">
                        <td class="tdstrong">@Model.Label("DeductionDate" + i.ToString())</td>
                        <td>
                            @Model.Element("DeductionDate" + i.ToString())</td>
                    </tr> *@                  
                }
                <tr id="addDeductionTrr">
                    <td colspan="2">
                        @Model.Element("Deductions")
                        <a id="addDeduction" class="btn btn-link btn-mini pull-right">@Model.Translate("Add another Deduction")</a></td>
                </tr>
                </tbody>       
        </table>
    </div>
</div>

<script>
    //document.getElementById('PaymentDate').value = document.getElementById('LastDayOfEmployment').value;
    //document.getElementById('DeductionDate').value = document.getElementById('LastDayOfEmployment').value;

    function setValueForTerminationReason() {
        if (document.getElementById('CompleteTerminationType')) {




            path = '';
            var path = window.location.protocol + '//';
            path = path + window.location.host + '/';


            path = site.baseUrl + '/FormLibContent/Xmls/Global/Templates/predefined_TerminationReason.xml'

            $.ajax({
                type: "GET",
                url: path,
                dataType: "xml",
                success: setTerminationReason,
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR.responseText);
                    alert(textStatus);
                    alert(errorThrown);
                }

            });



        }
    }

    function setTerminationReason(xml) {

        var terminationreasonvalue = $('#TerminationReason').val();
        var show = ''

        var dep = '';
        if (document.getElementById('CompleteTerminationType')) {
            dep = document.getElementById('CompleteTerminationType').value;
        }
        var temp = '';

        $(xml).find('dependent').each(function () {


            var $sel = $(this);

            show = '';


            var department = $sel.find('selected').text();

            show = $sel.find('show').text();

            if (department.toString().trim() == dep.toString().trim()) {

                if (show != '') {

                    var optionsarray = show.split(',');
                    var seloption = "";

                    $('#TerminationReason')
                        .find('option')
                        .remove();



                    seloption = '<option value="' + temp + '">' + temp + '</option>';

                    $.each(optionsarray, function (i) {
                        seloption += '<option value="' + optionsarray[i] + '">' + optionsarray[i] + '</option>';
                    });
                    $('#TerminationReason').append(seloption);




                    return;
                }


            }
        });
        
        $('#TerminationReason').val(terminationreasonvalue);

        
        var CompleteVal = $('#CompleteTerminationType').val()
        var defaultVal;

        switch (CompleteVal) {
            case "Casual Termination":
                defaultVal = "Casual Termination";
                break;
            case "Resignation":
                defaultVal = "Resignation";
                break;
            case "Redundancy":
                defaultVal = "Redundancy";
                break;
        }
        
        if (!defaultVal == "") {
            $('#TerminationReason').val(defaultVal);
        }

    }


    $('#CompleteTerminationType').change(function () {
        
        setValueForTerminationReason();
    });

    $(function () {
        setValueForTerminationReason();
    });
    
</script>